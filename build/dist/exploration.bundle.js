(()=>{var e={4979:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Dungeon_setting:()=>s});var r=a(548),o=a(4838),n=a(6354);class s{constructor(e){this.dungeon=this._dndDungeonRng(e),this.chamber_layout=this._dndDungeonLayout(this.properties.dungeon.dungeonInstance),this.exploration=this._dndDungeonExploration(this.chamber_layout)}getDungeon(){return this.dungeon}getExploration(){return this.exploration}_dndDungeonRng(e){return this.properties=(new r.Dungeon)._dungeonProperties(e),{id:(0,o.TN)(1e6,9999999),dungeon_location:this.properties.dungeon.dungeon_location,dungeon_history:this.properties.dungeon.dungeon_history,dungeon_purpose:this.properties.dungeon.dungeon_purpose,dungeon_creator:this.properties.dungeon.dungeon_creator,dungeon_locks:this.properties.dungeon.dungeon_locks,dungeon_secrets:this.properties.dungeon.dungeon_secrets,dungeon_hazards:this.properties.dungeon.dungeon_hazards,dungeon_mood:this.properties.dungeon.dungeon_mood,dungeon_air_quality:this.properties.dungeon.dungeon_air_quality,dungeon_odor:this.properties.dungeon.dungeon_odor,dungeon_wallType:this.properties.dungeon.dungeon_wallType,dungeon_wallFeatures:this.properties.dungeon.dungeon_wallFeatures,dungeon_lightSources:this.properties.dungeon.dungeon_lightSources,dungeon_typeDescription:this.properties.dungeon.dungeon_typeDescription,dungeon_wallDescription:this.properties.dungeon.dungeon_wallDescription,dungeon_doorsDescription:this.properties.dungeon.dungeon_doorsDescription,dungeon_summary_vision:this.properties.dungeon.summary_vision,dungeon_summary_locks:this.properties.dungeon.summary_locks,dungeon_summary_secrets:this.properties.dungeon.summary_secrets,dungeon_summary_hazards:this.properties.dungeon.summary_hazards,dungeon_summary_mood:this.properties.dungeon.summary_mood,dungeonInstance:this.properties.dungeon.dungeonInstance}}_dndDungeonLayout(e){return console.log(e.constructor.name),this.instance_layout=(new r.Dungeon)._dungeonExploration(e),{instance:e.constructor.name,layout_starting_chamber:this.instance_layout.exploration.starting_chamber,layout_starting_area:this.instance_layout.exploration.starting_area,exit_the_world:this.instance_layout.exploration.exit_the_world,chamber_state:this.instance_layout.exploration.chamber_state,chamber_contents:this.instance_layout.exploration.chamber_contents}}_dndDungeonExploration(e){let t=(0,o.N$)(e.instance);return{exploration_1:`As you pass trough a ${e.exit_the_world} \n         you enter a ${t} and arrive in a room shaped like a ${e.layout_starting_area}. \n         You  ${n.Verbs.getObservation()} this is a ${e.layout_starting_chamber}. \n         The chamber is ${e.chamber_state}.`,exploration_2:`${e.chamber_contents} `,exploration_3:" dungeon dressing, obstacles, traps, hazards and other content is work in progress (WIP - release T.B.D.)"}}}},548:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Dungeon:()=>p});var r=a(218),o=a(0),n=a(3387),s=a(6571),i=a(118),c=a(7174),l=a(8370),d=a(4968),u=a(1061),h=a(7579),g=a(4768),m=a(5392);class p{_dungeonProperties(e){return{dungeon:new r.Dungeon_montage(e).getMontage()}}_dungeonExploration(e){return{exploration:new m.Dungeon_layout(e).getLayout()}}static _createDungeonPurposeInstance(e){const t=e.toLowerCase().split(" ").map((e=>e.charAt(0).toUpperCase()+e.slice(1))).join("_"),a=p._allPurposes();if(a[t])return new a[t];throw new Error(`Class ${t} does not exist`)}static _allPurposes(){return{Lair:o.Lair,Maze:n.Maze,Mine:s.Mine,Stronghold:i.Stronghold,Temple:c.Temple,Shrine:l.Shrine,Tomb:d.Tomb,Treasure_Vault:u.Treasure_Vault,Planar_Gate:h.Planar_Gate,Death_Trap:g.Death_Trap}}}},5392:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Dungeon_layout:()=>s});var r=a(3193),o=a(3562),n=a(4987);class s{constructor(e){this._layoutStart(e)}_layoutStart(e){let t=e.chamber,a=r.Dungeon_areas._setExitType(),s=r.Dungeon_areas._setStartingArea(),i=(new o.CurrentChamberState).chamber,c=(new n.CurrentChamberContents).chamberContents;this.dungeon_layout={exit_the_world:a,starting_chamber:t,starting_area:s,chamber_state:i,chamber_contents:c}}getLayout(){return this.dungeon_layout}}},218:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Dungeon_montage:()=>m});var r=a(1781),o=a(9718),n=a(4808),s=a(4781),i=a(1034),c=a(9621),l=a(1459),d=a(3854),u=a(1531),h=a(9836),g=a(548);class m{constructor(e){this._montage(e)}_montage(e){let t=r.Dungeon_location._location(),a=o.Dungeon_creator._creator(e),m=n.Dungeon_purpose._purpose(),p=s.Dungeon_history._history(),b="d20 ("+h.D._20()+")",f="d20 ("+h.D._20()+")",k="d20 ("+h.D._20()+")",_="d20 ("+h.D._20()+")",y=new i.Dungeon_air_quality,w=y._getAirQuality(),v=y._getOdor(),D=new c.Dungeon_walls,T=D.getWallType(),C=D.getWallFeatures(),M=l.Dungeon_lightsources._lightsources(),S=n.Dungeon_purpose.getTypeDescription(m),x=D.getDungeonWallDescription(),L=(new d.Dungeon_doors).getDungeonDoorDescription(),A=u.Dungeon_statblock_summary._setVision(),E=u.Dungeon_statblock_summary._setLockDescription(),B=u.Dungeon_statblock_summary._setSecretDescription(),H=u.Dungeon_statblock_summary._setHazardDescription(),z=u.Dungeon_statblock_summary._setMoodDescription(),I=g.Dungeon._createDungeonPurposeInstance(m);console.log("Created instance of: "+I.constructor.name);let P=I;this.montage={dungeon_location:t,dungeon_creator:a,dungeon_purpose:m,dungeon_history:p,dungeon_locks:b,dungeon_secrets:f,dungeon_hazards:k,dungeon_mood:_,dungeon_typeDescription:S,dungeon_air_quality:w,dungeon_odor:v,dungeon_wallType:T,dungeon_wallFeatures:C,dungeon_wallDescription:x,dungeon_lightSources:M,dungeon_doorsDescription:L,summary_vision:A,summary_locks:E,summary_secrets:B,summary_hazards:H,summary_mood:z,dungeonInstance:P}}getMontage(){return this.montage}}},4987:(e,t,a)=>{"use strict";a.r(t),a.d(t,{CurrentChamberContents:()=>s});var r=a(4838);class o{constructor(){this.motivation=this._getMonsterMotivation()}_getMonsterMotivation(){return(0,r.kd)(["find a sanctuary","conquer the dungeon","seek an item in the dungeon","slay a rival","hide from enemies","recover from a battle","avoid danger","seek wealth"])}}var n=a(6354);class s{constructor(){this.chamberContents=this._dungeonChamberContents()}_dungeonChamberContents(){const e=[`Monster ${s._dungeonChamberMonsterType()}${s._dungeonChamberMonsterHasTreasure()}. \n            It's behaviour ${n.Verbs.getIndicator()}  the monster is here to ${(new o).motivation}`,"Dungeon hazard (see 'Random Dungeon Hazards') with incidental treasure","Obstacle (see 'Random Obstacles')","Trap (see 'Random Traps')","Trap (see 'Random Traps') protecting treasure","Trick (see 'Random Tricks')","Empty room","Empty room with dungeon hazard (see 'Random Dungeon Hazards')","Empty room with treasure"];let t=(0,r.kd)(e);return"Empty room"===t?(t=(0,r.kd)(e),t):t}static _dungeonChamberMonsterType(){return(0,r.kd)(["(dominant inhabitant)","(pet or allied creature)","(random creature)"])}static _dungeonChamberMonsterHasTreasure(){return(0,r.kd)([" with treasure"," guarding treasure","",""])}}},3562:(e,t,a)=>{"use strict";a.r(t),a.d(t,{CurrentChamberState:()=>s});var r=a(9836),o=a(4838),n=a(5971);class s{constructor(){this.chamber=this._dungeonChamberState()}_dungeonChamberState(){let e=r.D._20(),t=`${this._partOne()}. ${this._partTwo()}`;return 20===e&&(t="pristine and in original state. Everything is well-preserved."),t}_partOne(){const e=["full of rubble, and the ceiling partially collapsed","full of holes, and the floor is partially collapsed","covered in ashes, contents mostly burned","used as a campsite","filled with a pool of water; the chamber's original contents are water damaged","littered with wrecked furniture","stripped bare and empty",`converted to a ${(new n.GeneralDungeonChamber)._dungeonChamber()}`];return(0,o.kd)(e)}_partTwo(){return(0,o.kd)(["Debris is scattered around","The room is filled with dust","Large chunks of stone lie on the ground","You see gaps leading to lower levels","The room smells of smoke","Charred remains are everywhere","There are remnants of a fire pit","Old bedrolls and supplies are left behind","Mold is growing on the walls","The floor is slippery","Pieces of chairs and tables are scattered","Broken shelves and cabinets line the walls","The remnants of a bed are in the corner","A torn tapestry hangs on the wall","Shattered glass litters the floor","Strange markings cover the walls","Unfamiliar tools and devices are present"])}}},435:(e,t,a)=>{"use strict";a.r(t),a.d(t,{RandomDungeonHazards:()=>o});var r=a(4838);class o{constructor(){this.hazard=this._getDungeonHazard()}_getDungeonHazard(){return(0,r.kd)(["Brown mold","Green slime","Shrieker","Spiderwebs","Violet fungus","Yellow mold"])}}},1034:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Dungeon_air_quality:()=>o});var r=a(9836);class o{constructor(){this.d100=r.D._100(),this.airQuality=this._setAirQuality(this.d100),this.odor=this._setOdor(this.d100)}_setAirQuality(e){let t;return t=e>=1&&e<=60?"Clear and damp":e>=61&&e<=70?"Clear and drafty":e>=71&&e<=80?"Clear but cold":e>=81&&e<=83?"Foggy or misty and cold":e>=84&&e<=85?"Clear, with mist covering floor":e>=86&&e<=90?"Clear and warm":e>=91&&e<=93?"Hazy and humid":e>=94&&e<=96?"Smoky or steamy":e>=97&&e<=98?"Clear, with smoke covering ceiling":e>=99&&e<=100?"Clear and windy":"Invalid d100",this.airQuality=t,this.airQuality}_setOdor(e){let t;return t=e>=1&&e<=3?"Acrid":e>=4&&e<=5?"Chlorine":e>=6&&e<=39?"Dank or moldy":e>=40&&e<=49?"Earthy":e>=50&&e<=57?"Manure":e>=58&&e<=61?"Metallic":e>=62&&e<=65?"Ozone":e>=66&&e<=70?"Putrid":e>=71&&e<=75?"Rotting vegetation":e>=76&&e<=77?"Salty and wet":e>=78&&e<=82?"Smoky":e>=83&&e<=89?"Stale":e>=90&&e<=95?"Sulfurous":96==e?"Urine":"Invalid d100",this.odor=t,this.odor}_getAirQuality(){return this.airQuality}_getOdor(){return this.odor}}},3193:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Dungeon_areas:()=>n});var r=a(4838),o=a(9836);class n{static _setStartingArea(){let e=["and a row of pillars down the middle","and a well in the middle of the room","and a well in the middle of the room (might lead down to lower level)",""],t=["a passage on each wall","a door on two walls, and a passage in the third wall","doors on three walls"],a=["20 x 20","30 x 30","40 x 40"],o=this._ft(),n=this._ft();o===n&&(o=(2*parseInt(o)).toString());const s=[`${(0,r.kd)(a)} ft. square that has ${(0,r.kd)(t)} ${(0,r.kd)(e)}`,`${(0,r.kd)(a)} ft. square, with a door on two walls, a passage on the third wall, and a secret door on the fourth wall`,`${o} x ${n} ft. rectangle, with a row of pillars down the middle; two passages leading from each long wall, and doors on each short wall`,`${o} x ${n} ft. rectangle, with ${(0,r.kd)(t)}`,`40 ft. diameter circle, with one passage in each cardinal direction,  ${(0,r.kd)(e)}`,`${this._ft()} ft. wide T shaped intersection as passage`,`${this._ft()} ft. wide four-way intersection passage`];return(0,r.kd)(s)}static _setPassage(){let e;switch(o.D._20()){case 1:case 2:e="Continue straight 30 ft., no doors or side passages";break;case 3:e="Continue straight 20 ft., door to the right, then an additional 10 ft. ahead";break;case 4:e="Continue straight 20 ft., door to the left, then an additional 10 ft. ahead";break;case 5:e="Continue straight 20 ft., passage ends in a door";break;case 6:case 7:e="Continue straight 20 ft., side passage to the right, then an additional 10 ft. ahead";break;case 8:case 9:e="Continue straight 20 ft., side passage to the left, then an additional 10 ft. ahead";break;case 10:e="Continue straight 20 ft., comes to a dead end; 10 percent chance of a secret door";break;case 11:case 12:e="Continue straight 20 ft., then the passage turns left and continues 10 ft.";break;case 13:case 14:e="Continue straight 20 ft., then the passage turns right and continues 10 ft.";break;case 15:case 16:case 17:case 18:case 19:e=n._setChamberType();break;case 20:e=n._setStairs();break;default:e="Invalid roll"}return e}static _setPassageWidth(){let e;switch(o.D._12()){case 1:case 2:e="5 ft.";break;case 3:case 4:e="10 ft.";break;case 5:case 6:e="20 ft.";break;case 7:case 8:e="30 ft.";break;case 9:e="40 ft., with row of pillars down the middle";break;case 10:e="40 ft., with double row of pillars";break;case 11:e="40 ft. wide, 20 ft. high";break;case 12:e="40 ft. wide, 20 ft. high, gallery 10 ft. above floor allows access to level above";break;default:e="Invalid roll"}return e}static _setDoorType(){return(0,r.kd)(["wooden","iron","stone","portcullis","secret door","portcullis, locked in place"])+" "+(0,r.kd)(["barred","locked",""])+" door"}static _ft(){return(0,r.kd)(["10","15","20","25","30","35","40"])}static _setBeyondDoor(){return[`Passage extending ${this._ft()}ft., then T intersection extending ${this._ft()}ft. to the right and left`,`Passage extending ${this._ft()}ft., then T intersection extending ${this._ft()}ft. to the left and right`,`Passage ${this._ft()}ft. straight ahead`,`Passage ${this._ft()}ft. straight ahead`,`Passage ${this._ft()}ft. straight ahead`,`Passage ${this._ft()}ft. straight ahead`,`Passage ${this._ft()}ft. straight ahead`,`Passage ${this._ft()}ft. straight ahead`,n._setChamberType(),n._setChamberType(),n._setChamberType(),n._setChamberType(),n._setChamberType(),n._setChamberType(),n._setChamberType(),n._setChamberType(),n._setChamberType(),n._setStairs(),n._setStairs(),"False door with trap"][o.D._20()]}static _setChamberType(){let e=(0,r.kd)(["square, 20 x 20 ft.","square, 30 x 30 ft.","square, 40 x 40 ft.","rectangle, 20 x 30 ft.","rectangle, 30 x 50 ft.","circle, 30 ft. diameter","rectangle, 40 x 50 ft.","rectangle, 40 x 50 ft.","rectangle, 40 x 60 ft.","rectangle, 50 x 80 ft.","circle, 50 ft. diameter","octagon, 40 x 40 ft.","octagon, 60 x 60 ft.","trapezoid, roughly 40 x 60 ft."]);return{chamber:e,isLargeChamber:["rectangle, 40 x 50 ft.","rectangle, 40 x 60 ft.","rectangle, 50 x 80 ft.","circle, 50 ft. diameter","octagon, 40 x 40 ft.","octagon, 60 x 60 ft.","trapezoid, roughly 40 x 60 ft."].includes(e)}}static _setChamberExits(e){return(e?[0,0,0,1,1,1,1,1,1,2,2,2,3,3,3,4,4,4,5,6]:[0,0,0,1,1,1,2,2,2,1,2,2,3,3,3,3,4,4,4,4])[o.D._20()]}static _setExitLocation(){return["Wall opposite entrance","Wall left of entrance","Wall right of entrance","Same wall as entrance"][o.D._4()]}static _setExitType(){const e=["Door (roll on the Door Type table)",`${this._ft()}ft. long corridor`];let t=(0,r.kd)(e);return"Door (roll on the Door Type table)"===t&&(t=n._setDoorType()),t}static _setStairs(){const e=["Down one level to a chamber","Down one level to a passage 20 ft. long","Down two levels to a passage 20 ft. long","Down two levels to a passage 20 ft. long","Down three levels to a chamber","Down three levels to a passage 20 ft. long","Up one level to a chamber","Up one level to a passage 20 ft. long","Up to a dead end","Chimney up one level to a passage 20 ft. long","Chimney up two levels to a passage 20 ft. long","Shaft (with or without elevator) down one level to a chamber","Shaft (with or without elevator) down one level to a chamber and down one level to another chamber"];let t=(0,r.kd)(e);return"Down one level to a chamber"!==t?(t=(0,r.kd)(e),t):t}}},9718:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Dungeon_creator:()=>s});var r=a(4838);class o{static _getAlignment(){let e=o._lawfulNeutralChaotic(),t=o._goodNeutralEvil();return"Neutral"===e&&"neutral"===t?e:e+" "+t}static _lawfulNeutralChaotic(){return(0,r.kd)(["Lawful","Neutral","Chaotic"])}static _goodNeutralEvil(){return(0,r.kd)(["good","neutral","evil"])}}class n{constructor(e){this.npcClass=e.class?e.class:this.generateClass()}generateClass(){const e=["Barbarian","Bard","Cleric","Druid","Fighter","Monk","Artificer","Paladin","Ranger","Rogue","Sorcerer","Warlock","Wizard"];return e[Math.floor(Math.random()*e.length)]}getNpcClass(){return this.npcClass}static characterClasses(){return["Barbarian","Bard","Cleric","Druid","Fighter","Monk","Artificer","Paladin","Ranger","Rogue","Sorcerer","Warlock","Wizard"]}}class s{static _creator(e){let t=["Beholder","Dwarves","Elves","Drow","Giants","Hobgoblins","Kuo-toa","Lich","Mind Flayers","Yuan-ti","No creator (Natural cavern)",s._cultsAndGroups(),s._alignmentSpecificHumans(e)];return(0,r.kd)(t)}static _alignmentSpecificHumans(e){return o._getAlignment()+" "+new n(e).generateClass()+" Humans"}static _cultOrGroup(){return(0,r.kd)(["cult","religious group"])}static _cultsAndGroups(){let e=s._cultOrGroup(),t=["Demon-worshipping "+e,"Devil-worshipping "+e,"Elemental Air "+e,"Elemental Earth "+e,"Elemental Fire "+e,"Elemental Water "+e,"Worshippers of an evil deity","Worshippers of a good deity","Worshippers of a neutral deity"];return(0,r.kd)(t)}}},3854:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Dungeon_doors:()=>n});var r=a(4838),o=a(6354);class n{constructor(){this.doorType=this._setDoorType(),this.doorFeatures=this._setDoorFeatures(),this.dungeon_door_description=this._stringBuilder(this.doorType,this.doorFeatures)}_setDoorType(){return(0,r.kd)(["Wooden","Iron","Stone","Bronze","Reinforced","Sliding","Portcullis","Enchanted","Crystal","Bone","Corroded metal","Hidden panel","Magical barrier","Arcane","Ancient, weathered","Carved wooden","Decorated stone","Glass"])}_setDoorFeatures(){return(0,r.kd)(["Engraved symbols","Heavy locks","Rusty hinges","Creaking sounds","Reinforced with iron bands","Etched runes","Gleaming with magical light","Hidden mechanisms","Arcane wards","Trap mechanisms","Ornate carvings","Studded with gems","Covered in moss","Protected by a spell","Embedded crystals","Glowing inscriptions","Camouflaged with the wall","Guarded by a creature","Sealed with wax","Marked with warnings"])}_stringBuilder(e,t){let a=(0,r.fm)(o.Verbs.quality()),n=o.Verbs.maintenance(),s=o.Verbs.color();return this.dungeon_door_description=a+" "+n+" "+s+" "+(0,r.u4)(e)+" doors mark this dungeon. The dungeon doors feature "+(0,r.u4)(t)+". ",this.dungeon_door_description}getDungeonDoorDescription(){return this.dungeon_door_description}getDoorType(){return this.doorType}getDoorFeatures(){return this.doorFeatures}}},4781:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Dungeon_history:()=>o});var r=a(4838);class o{static _history(){let e=[o._abandonedBy(),o._destroyedBy(),"Conquered by invaders","Location cursed by the gods and shunned","Site of a great miracle","Overrun by planar creatures","Original creators still in control"];return(0,r.kd)(e)}static _abandonedBy(){return"Abandoned "+(0,r.kd)(["by creators","due to plague"])}static _destroyedBy(){return"Destroyed by "+(0,r.kd)(["attacking raiders","discovery made within the site","internal conflict","magical catastrophe","natural disaster"])}}},1459:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Dungeon_lightsources:()=>o});var r=a(4838);class o{static _lightsources(){return(0,r.kd)(["Torches mounted on the walls","Brazier with burning coals","Candles on holders","Lanterns hanging from hooks","Bioluminescent fungi","Glowing crystals embedded in the walls","Magical orbs floating in the air","Flickering fire pits","Phosphorescent moss","Oil lamps on tables","Glowing runes on the floor","Skulls with candles inside","Light filtering through cracks in the ceiling","Glowing insects in jars","Luminescent plants","Magic fireflies in a cage","Wizards' staff producing light","Illuminated water in a fountain","Ghostly lights hovering in the air","Eyes of stone statues glowing","Reflective mirrors channeling light from above","Smoldering embers in a fire pit","Light spell cast on an object","Mimic torches that mimic real torches","Floating lanterns"])}}},1781:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Dungeon_location:()=>o});var r=a(4838);class o{static _location(){let e=["A building in a city","Catacombs or sewers beneath a city",o._beneathLocation(),o._inLocation(),"On top of a mesa","In sea caves","In several connected mesas","On a mountain peak","On a promontory","On an island","Underwater",o._exoticLocation()];return(0,r.kd)(e)}static _exoticLocation(){let e=["Among the branches of a tree","Around a geyser","Behind a waterfall","Buried in an avalanche","Buried in an sandstorm","Buried in volcanic ash",o._castleOrStructure()+" in a swamp",o._castleOrStructure()+" at the bottom of a sinkhole",o._inExoticLocation,o._onExoticLocation,"Floating on the sea","On the back of a Gargantuan living creature","Sealed inside a magical dome of force","Inside a Mordenkainen's magnificent mansion"];return(0,r.kd)(e)}static _beneathLocation(){return"Beneath a "+(0,r.kd)(["farmhouse","graveyard","ruined castle","ruined city","temple","mesa"])}static _inLocation(){return"In a "+(0,r.kd)(["chasm","cliff face","desert","forest","glacier","gorge","jungle","mountain pass","swamp"])}static _castleOrStructure(){return(0,r.kd)(["Castle","Structure"])}static _inExoticLocation(){return"In a"+(0,r.kd)([" volcano"," meteorite"," pocket dimension","n area devestated by a magical catastrophe"])}static _onExoticLocation(){return"On a"+(0,r.kd)([" demiplane"," cloud","n island in an underground sea"])}}},4808:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Dungeon_purpose:()=>o});var r=a(4838);class o{static _purpose(){return(0,r.kd)(["Lair","Maze","Mine","Stronghold","Temple","Shrine","Tomb","Treasure vault","Planar Gate","Death trap"])}static _typeDescriptions(){return{Lair:"A lair is a place where monsters live. Typical lairs include ruins and caves.",Maze:"A maze is intended to deceive or confuse those who enter it. Some mazes are elaborate obstacles that protect treasure, while others are gauntlets for prisoners banished there to be hunted and devoured by the monsters within.",Mine:"An abandoned mine can quickly become infested with monsters, while miners who delve too deep can break through into the Underdark.",Stronghold:"A stronghold dungeon provides a secure base of operations for villains and monsters. It is usually ruled by a powerful individual, such as a wizard, vampire, or dragon, and it is larger and more complex than a simple lair.",Temple:"This dungeon is consecrated to a deity or other planar entity. The entity's worshipers control the dungeon and conduct their rites there.",Shrine:"This dungeon is consecrated to a deity or other planar entity. The entity's worshipers control the dungeon and conduct their rites there.",Tomb:"Tombs are magnets for treasure hunters, as well as monsters that hunger for the bones of the dead.","Treasure vault":"Built to protect powerful magic items and great material wealth, treasure vault dungeons are heavily guarded by monsters and traps.","Planar Gate":"Dungeons built around planar portals are often transformed by the planar energy seeping out through those portals.","Death trap":"This dungeon is built to eliminate any creature that dares to enter it. A death trap might guard the treasure of an insane wizard, or it might be designed to lure adventurers to their demise for some nefarious purpose, such as to feed souls to a lich's phylactery."}}static getTypeDescription(e){return this._typeDescriptions()[e]}}},1531:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Dungeon_statblock_summary:()=>o});var r=a(4838);class o{static _setVision(){return(0,r.kd)(["Pitch black with no light sources","Dimly lit by flickering torches","Brightly illuminated by magical orbs","Softly glowing crystals embedded in the walls","Darkness pierced by occasional shafts of light","Eerie glow from phosphorescent fungi","Gloomy with intermittent flashes of light","Faint bioluminescence from moss on the walls","Shadowy with distant, unsteady light","Alternating patches of light and darkness","Mist-covered with ghostly light","Dark with sporadic bursts of magical illumination","Soft light from enchanted sconces","Murky with faint, ambient light","Smoky with dim light filtering through","Hazy with a dull glow from magical runes","Glimmering light from a distant, unknown source","Obscured visibility with shadowy corners","Glowing embers casting a faint light","Twilight-like ambiance with soft, diffused light"])}static _setLockDescription(){return(0,r.kd)(["Rusty iron locks that are difficult to open","Intricately designed locks with complex mechanisms","Ancient wooden locks reinforced with metal bands","Magical locks that glow faintly with enchantment","Heavy padlocks with thick chains","Hidden locks concealed within the door's design","Simple but sturdy locks made of brass","Locks with multiple keyholes requiring different keys","Locks protected by arcane wards and runes","Locks that emit a soft click when opened","Massive steel locks that seem almost indestructible","Locks covered in vines and moss, blending with the surroundings","Locks with mysterious symbols etched on their surface","Futuristic locks with biometric scanners","Locks with a combination mechanism instead of a key","Locks that seem to change their configuration periodically","Old-fashioned locks with large, ornate keys","Locks that are trapped, punishing any failed attempts","Locks with a time-based mechanism that unlocks at certain hours","Locks forged from dark, unidentifiable metal","Enchanted locks that respond to specific spells","Locks with a hidden release mechanism nearby","Locks that hum with a low, ominous frequency","Locks reinforced with magical barriers","Locks that require a secret phrase to open"])}static _setSecretDescription(){return(0,r.kd)(["Many secrets, all hidden in plain sight and easily discovered","Few secrets, but each one is extremely difficult to uncover","Common secrets that are mundane but plentiful","Magical secrets that require specific spells to reveal","A few well-hidden secrets that blend seamlessly with the surroundings","Numerous secrets, some magical, scattered throughout the dungeon","Secrets protected by ancient magic, requiring knowledge of old spells","Easily found secrets that provide small but helpful insights","Hidden compartments with common but useful items","Magical traps guarding rare and powerful secrets","Obvious secrets meant to mislead from more important ones","A labyrinth of secrets, each one leading to another","Secrets that are only revealed at certain times or under specific conditions","Magical wards concealing powerful artifacts","Common secrets in false walls and under floorboards","Secrets disguised as ordinary objects, difficult to distinguish","Many mundane secrets with a few rare magical ones","Secrets requiring riddles to be solved for access","Few secrets, each holding significant power or information","Magical illusions hiding secrets in plain sight","Secrets protected by guardians or traps","Common secrets that give clues to larger, more important ones","A network of hidden passages and rooms filled with secrets","Magical secrets that require specific items to unlock","Obvious secrets that serve as distractions from the true ones"])}static _setHazardDescription(){return(0,r.kd)(["Brown mold that feeds on warmth, drawing heat from anything around it","Green slime that dissolves flesh, organic material, and metal on contact","Giant spider webs that entangle creatures and pose a significant obstacle","Yellow mold that releases a cloud of poisonous spores when disturbed","Pitfalls hidden by a thin layer of dirt or leaves","Collapsing ceilings triggered by pressure plates","Poisonous gas that fills the air when a seal is broken","Rushing water from underground streams that can flood passages","Spiked pits covered with camouflaging materials","Explosive runes that detonate when read or tampered with","Quicksand-like patches of loose earth","Swarming insects that bite and distract adventurers","Falling boulders triggered by tripwires","Flammable gas pockets that ignite with open flames","Diseased rats carrying dangerous plagues","Venomous snakes hiding in crevices","Blinding spores released by certain fungi","Enchanted mirrors that trap souls","Rooms that slowly fill with sand or water","Heatless, magical flames that cause severe burns","Illusionary walls hiding dangerous traps","Patches of ice making floors extremely slippery","Areas of extreme cold that sap the strength from those who linger","Swarms of bats that obscure vision and confuse adventurers","Aggressive fungi that release toxic spores","Pits filled with acid","Pressure plates triggering arrow traps","Enchanted objects that curse those who touch them","False floors dropping into deep chasms","Telekinetic traps that hurl objects at intruders"])}static _setMoodDescription(){return(0,r.kd)(["An old crypt with stone walls, loose wooden doors, and an odor of decay","A volcanic lair with smooth stone walls, doors of magically reinforced brass, and a smell of sulfur","A damp and musty cave with the sound of dripping water echoing through the halls","An abandoned mine with rusty tools scattered around and the distant sound of creaking wood","A lavish underground palace with marble floors, golden fixtures, and a lingering scent of incense","A haunted mausoleum with cold stone floors, eerie whispers, and ghostly apparitions","A flooded dungeon with waist-deep water, slippery stone floors, and the smell of mold","A magical laboratory with glowing runes on the walls, bubbling potions, and an aura of arcane energy","A forgotten temple with overgrown vines, crumbling statues, and an air of reverence","A fortress with thick stone walls, iron doors, and the scent of burning torches","An underground forest with bioluminescent plants, chirping insects, and a fresh earthy smell","A maze of catacombs with narrow passageways, flickering candles, and an unsettling quiet","A bustling underground market with colorful stalls, loud merchants, and the smell of exotic spices","A royal crypt with ornate sarcophagi, rich tapestries, and the faint scent of preserved flowers","A treacherous labyrinth with shifting walls, hidden traps, and a pervasive sense of danger","A serene underground lake with crystal-clear water, gentle waves, and a calming atmosphere","A subterranean city with bustling streets, tall buildings, and the smell of street food","A decrepit asylum with peeling paint, rusted bars, and an oppressive, haunting atmosphere","An enchanted grotto with sparkling waterfalls, glowing crystals, and a magical ambiance","A desolate ruin with broken pillars, scattered debris, and a feeling of lost grandeur","A pirate hideout with wooden planks, barrels of rum, and the scent of saltwater","A cursed dungeon with dark magic symbols, chilling drafts, and a sense of foreboding","A knight's barracks with training dummies, weapon racks, and the smell of sweat and metal","A mystical cave with colorful gemstones, echoing chants, and a spiritual aura","An industrial forge with clanging metal, hot furnaces, and the smell of molten ore","A dragon's lair with scorched walls, piles of treasure, and a heavy, smoky atmosphere","A royal tomb with jeweled coffins, silent guards, and an air of solemnity","A shadowy hideout with hidden alcoves, muffled voices, and a sense of conspiracy","A frozen cavern with icy floors, frost-covered walls, and a biting cold","A desert tomb with sandy floors, ancient hieroglyphs, and a dry, arid feel"])}}},9621:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Dungeon_walls:()=>n});var r=a(4838),o=a(6354);class n{constructor(){this.wallType=this._setWallType(),this.wallFeatures=this._setWallFeatures(),this.dungeon_wall_description=this._stringBuilder(this.wallType,this.wallFeatures)}_setWallType(){return(0,r.kd)(["Masonry","Unnaturally smooth,","Solid rock, hewn with tools","Solid rock, worn smooth by the passage of water or lava","Wood","Composite materials","Bricks","Reinforced concrete","Crystal or gemstone","Overgrown with moss and vines","Ice","Metal panels","Obsidian","Coral","Bone","Enchanted stone","Ancient, crumbling masonry","Living wood (part of a large tree)","Carved sandstone","Glass"])}_setWallFeatures(){const e=["Murals","Frescoes","Bas-reliefs","Lighting fixtures such as sconces or torch brackets","Secret doors","Engravings","Ivy and moss","Ancient inscriptions","Trapped sections","Hidden compartments","Magical runes","Water seeps","Roots intruding","Hanging tapestries","Embedded crystals","Spikes and traps","Archways","Statues","Windows with bars","Sliding panels","Doors with complex locks","Echoing sounds","Strange odors","Web-covered corners","Torch marks","Mysterious glowing symbols","Creeping shadows","Scratch marks","Holes and gaps","Patches of different materials"],t=Math.floor(Math.random()*e.length)+1;return(0,r.kd)(e,t)}_stringBuilder(e,t){let a=(0,r.fm)(o.Verbs.quality()),n=o.Verbs.maintenance(),s=o.Verbs.color();return this.dungeon_wall_description=a+" "+n+" "+s+" "+(0,r.u4)(e)+" walls shape this dungeon. The dungeon walls feature "+(0,r.u4)(t)+". ",this.dungeon_wall_description}getDungeonWallDescription(){return this.dungeon_wall_description}getWallType(){return this.wallType}getWallFeatures(){return this.wallFeatures}}},3184:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Death_Trap:()=>g.Death_Trap,Dungeon_air_quality:()=>i.Dungeon_air_quality,Dungeon_areas:()=>h.Dungeon_areas,Dungeon_creator:()=>o.Dungeon_creator,Dungeon_doors:()=>d.Dungeon_doors,Dungeon_history:()=>s.Dungeon_history,Dungeon_lightsources:()=>l.Dungeon_lightsources,Dungeon_location:()=>r.Dungeon_location,Dungeon_purpose:()=>n.Dungeon_purpose,Dungeon_statblock_summary:()=>u.Dungeon_statblock_summary,Dungeon_walls:()=>c.Dungeon_walls,Lair:()=>m.Lair,Maze:()=>p.Maze,Mine:()=>b.Mine,Planar_Gate:()=>f.Planar_Gate,Shrine:()=>k.Shrine,Stronghold:()=>_.Stronghold,Temple:()=>y.Temple,Tomb:()=>w.Tomb,Treasure_Vault:()=>v.Treasure_Vault});var r=a(1781),o=a(9718),n=a(4808),s=a(4781),i=a(1034),c=a(9621),l=a(1459),d=a(3854),u=a(1531),h=a(3193),g=a(4768),m=a(0),p=a(3387),b=a(6571),f=a(7579),k=a(8370),_=a(118),y=a(7174),w=a(4968),v=a(1061)},4768:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Death_Trap:()=>o});var r=a(9836);class o{constructor(){this.chamber=this._dungeonChamber()}_dungeonChamber(){let e;switch(r.D._20()){case 1:e="Antechamber or waiting room for spectators";break;case 2:case 3:case 4:case 5:case 6:case 7:case 8:e="Guardroom fortified against intruders";break;case 9:case 10:case 11:e="Vault for holding important treasures, accessible only by locked or secret door (75 percent chance of being trapped)";break;case 12:case 13:case 14:e="Room containing a puzzle that must be solved to bypass a trap or monster";break;case 15:case 16:case 17:case 18:case 19:e="Trap designed to kill or capture creatures";break;case 20:e="Observation room, allowing guards or spectators to observe creatures moving through the dungeon";break;default:e="Unknown purpose"}return e}}},5971:(e,t,a)=>{"use strict";a.r(t),a.d(t,{GeneralDungeonChamber:()=>o});var r=a(9836);class o{constructor(){this.chamber=this._dungeonChamber()}_dungeonChamber(){const e=r.D._100();let t;switch(!0){case e>=1&&e<=1:t="Antechamber";break;case e>=2&&e<=3:t="Armory";break;case 4===e:t="Audience chamber";break;case 5===e:t="Aviary";break;case e>=6&&e<=7:t="Banquet room";break;case e>=8&&e<=10:t="Barracks";break;case 11===e:t="Bath or latrine";break;case 12===e:t="Bedroom";break;case 13===e:t="Bestiary";break;case e>=14&&e<=16:t="Cell";break;case 17===e:t="Chantry";break;case 18===e:t="Chapel";break;case e>=19&&e<=20:t="Cistern";break;case 21===e:t="Classroom";break;case 22===e:t="Closet";break;case 23===e||24===e:t="Conjuring room";break;case 25===e||26===e:t="Court";break;case e>=27&&e<=29:t="Crypt";break;case 30===e||31===e:t="Dining room";break;case 32===e||33===e:t="Divination room";break;case 34===e:t="Dormitory";break;case 35===e:t="Dressing room";break;case 36===e:t="Entry room or vestibule";break;case 37===e||38===e:t="Gallery";break;case 39===e||40===e:t="Game room";break;case e>=41&&e<=43:t="Guardroom";break;case 44===e:t="Hall";break;case 46===e||47===e:t="Hall, great";break;case 48===e||49===e:t="Hallway";break;case 50===e:t="Kennel";break;case 51===e||52===e:t="Kitchen";break;case 53===e||54===e:t="Laboratory";break;case e>=55&&e<=57:t="Library";break;case 58===e||59===e:t="Lounge";break;case 60===e:t="Meditation chamber";break;case 61===e:t="Observatory";break;case 62===e:t="Office";break;case 63===e||64===e:t="Pantry";break;case 65===e||66===e:t="Pen or prison";break;case 67===e||68===e:t="Reception room";break;case e>=69&&e<=70:t="Refectory";break;case 71===e:t="Robing room";break;case 72===e:t="Salon";break;case 73===e||74===e:t="Shrine";break;case 75===e||76===e:t="Sitting room";break;case 77===e||78===e:t="Smithy";break;case 79===e:t="Stable";break;case 80===e||81===e:t="Storage room";break;case 82===e||83===e:t="Strong room or vault";break;case 84===e||85===e:t="Study";break;case e>=86&&e<=88:t="Temple";break;case e>=89&&e<=90:t="Throne room";break;case 91===e:t="Torture chamber";break;case 92===e||93===e:t="Training or exercise room";break;case 94===e||95===e:t="Trophy room or museum";break;case 96===e:t="Waiting room";break;case 97===e:t="Nursery or schoolroom";break;case 98===e:t="Well";break;case 99===e||100===e:t="Workshop";break;default:t="Unknown purpose"}return t}}},0:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Lair:()=>o});var r=a(9836);class o{constructor(){this.chamber=this._dungeonChamber()}_dungeonChamber(){let e;switch(r.D._20()){case 1:e="Armory stocked with weapons and armor";break;case 2:e="Audience chamber, used to receive guests";break;case 3:e="Banquet room for important celebrations";break;case 4:e="Barracks where the lair's defenders are quartered";break;case 5:e="Bedroom, for use by leaders";break;case 6:e="Chapel where the lair's inhabitants worship";break;case 7:e="Cistern or well for drinking water";break;case 8:case 9:e="Guardroom for the defense of the lair";break;case 10:e="Kennel for pets or guard beasts";break;case 11:e="Kitchen for food storage and preparation";break;case 12:e="Pen or prison where captives are held";break;case 13:case 14:e="Storage, mostly nonperishable goods";break;case 15:e="Throne room where the lair's leaders hold court";break;case 16:e="Torture chamber";break;case 17:e="Training and exercise room";break;case 18:e="Trophy room or museum";break;case 19:e="Latrine or bath";break;case 20:e="Workshop for the construction of weapons, armor, tools, and other goods";break;default:e="Unknown purpose"}return e}}},3387:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Maze:()=>o});var r=a(9836);class o{constructor(){this.chamber=this._dungeonChamber()}_dungeonChamber(){let e;switch(r.D._20()){case 1:e="Conjuring room, used to summon creatures that guard the maze";break;case 2:case 3:case 4:case 5:e="Guardroom for sentinels that patrol the maze";break;case 6:case 7:case 8:case 9:case 10:e="Lair for guard beasts that patrol the maze";break;case 11:e="Pen or prison accessible only by secret door, used to hold captives condemned to the maze";break;case 12:e="Shrine dedicated to a god or other entity";break;case 13:case 14:e="Storage for food, as well as tools used by the maze's guardians to keep the complex in working order";break;case 15:case 16:case 17:case 18:e="Trap to confound or kill those sent into the maze";break;case 19:e="Well that provides drinking water";break;case 20:e="Workshop where doors, torch sconces, and other furnishings are repaired and maintained";break;default:e="Unknown purpose"}return e}}},6571:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Mine:()=>o});var r=a(9836);class o{constructor(){this.chamber=this._dungeonChamber()}_dungeonChamber(){let e;switch(r.D._20()){case 1:case 2:e="Barracks for miners";break;case 3:e="Bedroom for a supervisor or manager";break;case 4:e="Chapel dedicated to a patron deity of miners, earth, or protection";break;case 5:e="Cistern providing drinking water for miners";break;case 6:case 7:e="Guardroom";break;case 8:e="Kitchen used to feed workers";break;case 9:e="Laboratory used to conduct tests on strange minerals extracted from the mine";break;case 10:case 11:case 12:case 13:case 14:case 15:e="Lode where metal ore is mined (75 percent chance of being depleted)";break;case 16:e="Office used by the mine supervisor";break;case 17:e="Smithy for repairing damaged tools";break;case 18:case 19:e="Storage for tools and other equipment";break;case 20:e="Strong room or vault used to store ore for transport to the surface";break;default:e="Unknown purpose"}return e}}},7579:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Planar_Gate:()=>o});var r=a(9836);class o{constructor(){this.chamber=this._dungeonChamber()}_dungeonChamber(){const e=r.D._100();let t;switch(!0){case e>=1&&e<=3:t="Decorated foyer or antechamber";break;case e>=4&&e<=8:t="Armory used by the portal's guardians";break;case e>=9&&e<=10:t="Audience chamber for receiving visitors";break;case e>=11&&e<=19:t="Barracks used by the portal's guards";break;case e>=20&&e<=23:t="Bedroom for use by the high-ranking members of the order that guards the portal";break;case e>=24&&e<=30:t="Chapel dedicated to a deity or deities related to the portal and its defenders";break;case e>=31&&e<=35:t="Cistern providing fresh water";break;case e>=36&&e<=38:t="Classroom for use of initiates learning about the portal's secrets";break;case 39===e:t="Conjuring room for summoning creatures used to investigate or defend the portal";break;case e>=40&&e<=41:t="Crypt where the remains of those that died guarding the portal are kept";break;case e>=42&&e<=47:t="Dining room";break;case e>=48&&e<=50:t="Divination room used to investigate the portal and events tied to it";break;case e>=51&&e<=55:t="Dormitory for visitors and guards";break;case e>=56&&e<=57:t="Entry room or vestibule";break;case e>=58&&e<=59:t="Gallery for displaying trophies and objects related to the portal and those that guard it";break;case e>=60&&e<=67:t="Guardroom to protect or watch over the portal";break;case e>=68&&e<=72:t="Kitchen";break;case e>=73&&e<=77:t="Laboratory for conducting experiments relating to the portal and creatures that emerge from it";break;case e>=78&&e<=80:t="Library holding books about the portal's history";break;case e>=81&&e<=85:t="Pen or prison for holding captives or creatures that emerge from the portal";break;case e>=86&&e<=87:t="Planar junction, where the gate to another plane once stood (25 percent chance of being active)";break;case e>=88&&e<=90:t="Storage";break;case 91===e:t="Strong room or vault, for guarding valuable treasures connected to the portal or funds used to pay the planar gate's guardians";break;case e>=92&&e<=93:t="Study";break;case 94===e:t="Torture chamber, for questioning creatures that pass through the portal or that attempt to clandestinely use it";break;case e>=95&&e<=98:t="Latrine or bath";break;case e>=99&&e<=100:t="Workshop for constructing tools and gear needed to study the portal";break;default:t="Unknown purpose"}return t}}},8370:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Shrine:()=>o});var r=a(7174);class o{constructor(){this.chamber=(new r.Temple)._dungeonChamber()}}},118:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Stronghold:()=>o});var r=a(9836);class o{constructor(){this.chamber=this._dungeonChamber()}_dungeonChamber(){const e=r.D._100();let t;switch(!0){case e>=1&&e<=2:t="Antechamber where visitors seeking access to the stronghold wait";break;case e>=3&&e<=5:t="Armory holding high-quality gear, including light siege weapons such as ballistas";break;case 6===e:t="Audience chamber used by the master of the stronghold to receive visitors";break;case 7===e:t="Aviary or zoo for keeping exotic creatures";break;case e>=8&&e<=11:t="Banquet room for hosting celebrations and guests";break;case e>=12&&e<=15:t="Barracks used by elite guards";break;case 16===e:t="Bath outfitted with a marble floor and other luxurious accoutrements";break;case 17===e:t="Bedroom for use by the stronghold's master or important guests";break;case 18===e:t="Chapel dedicated to a deity associated with the stronghold's master";break;case e>=19&&e<=21:t="Cistern providing drinking water";break;case e>=22&&e<=25:t="Dining room for intimate gatherings or informal meals";break;case 26===e:t="Dressing room featuring a number of wardrobes";break;case e>=27&&e<=29:t="Gallery for the display of expensive works of art and trophies";break;case e>=30&&e<=32:t="Game room used to entertain visitors";break;case e>=33&&e<=50:t="Guardroom";break;case 51==e:t="Kennel where monsters or trained animals that protect the stronghold are kept";break;case e>=52&&e<=57:t="Kitchen designed to prepare exotic foods for large numbers of guests";break;case e>=58&&e<=61:t="Library with an extensive collection of rare books";break;case 62===e:t="Lounge used to entertain guests";break;case e>=63&&e<=70:t="Pantry, including cellar for wine or spirits";break;case e>=71&&e<=74:t="Sitting room for family and intimate guests";break;case e>=75&&e<=78:t="Stable";break;case e>=79&&e<=86:t="Storage for mundane goods and supplies";break;case 87===e:t="Strong room or vault for protecting important treasures (75 percent chance of being hidden behind a secret door)";break;case e>=88&&e<=92:t="Study, including a writing desk";break;case 93===e:t="Throne room, elaborately decorated";break;case e>=94&&e<=96:t="Waiting room where lesser guests are held before receiving an audience";break;case e>=97&&e<=98:t="Latrine or bath";break;case e>=99&&e<=100:t="Crypt belonging to the stronghold's master or someone else of importance";break;default:t="Unknown purpose"}return t}}},7174:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Temple:()=>o});var r=a(9836);class o{constructor(){this.chamber=this._dungeonChamber()}_dungeonChamber(){const e=r.D._100();let t;switch(!0){case e>=1&&e<=3:t="Armory filled with weapons and armor, battle banners, and pennants";break;case e>=4&&e<=5:t="Audience chamber where priests of the temple receive commoners and low-ranking visitors";break;case e>=6&&e<=7:t="Banquet room used for celebrations and holy days";break;case e>=8&&e<=10:t="Barracks for the temple's military arm or its hired guards";break;case e>=11&&e<=14:t="Cells where the faithful can sit in quiet contemplation";break;case e>=15&&e<=24:t="Central temple built to accommodate rituals";break;case e>=25&&e<=28:t="Chapel dedicated to a lesser deity associated with the temple's major deity";break;case e>=29&&e<=31:t="Classroom used to train initiates and priests";break;case e>=32&&e<=34:t="Conjuring room, specially sanctified and used to summon extraplanar creatures";break;case e>=35&&e<=40:t="Crypt for a high priest or similar figure, hidden and heavily guarded by creatures and traps";break;case e>=41&&e<=42:t="Dining room (large) for the temple's servants and lesser priests";break;case 43==e:t="Dining room (small) for the temple's high priests";break;case e>=44&&e<=46:t="Divination room, inscribed with runes and stocked with soothsaying implements";break;case e>=47&&e<=50:t="Dormitory for lesser priests or students";break;case e>=51&&e<=56:t="Guardroom";break;case 57==e:t="Kennel for animals or monsters associated with the temple's deity";break;case e>=58&&e<=60:t="Kitchen (might bear a disturbing resemblance to a torture chamber in an evil temple)";break;case e>=61&&e<=65:t="Library, well stocked with religious treatises";break;case e>=66&&e<=68:t="Prison for captured enemies (in good or neutral temples) or those designated as sacrifices (in evil temples)";break;case e>=69&&e<=73:t="Robing room containing ceremonial outfits and items";break;case 74==e:t="Stable for riding horses and mounts belonging to the temple, or for visiting messengers and caravans";break;case e>=75&&e<=79:t="Storage holding mundane supplies";break;case e>=80&&e<=81:t="Strong room or vault holding important relics and ceremonial items, heavily trapped";break;case e>=82&&e<=89:t="Torture chamber, used in inquisitions (in good or neutral temples with a lawful bent) or for the sheer joy of causing pain (evil temples)";break;case e>=90&&e<=91:t="Trophy room where art celebrating key figures and events from mythology is displayed";break;case 92==e:t="Latrine or bath";break;case e>=93&&e<=94:t="Well for drinking water, defendable in the case of attack or siege";break;case e>=95&&e<=100:t="Workshop for repairing or creating weapons, religious items, and tools";break;default:t="Unknown purpose"}return t}}},4968:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Tomb:()=>o});var r=a(9836);class o{constructor(){this.chamber=this._dungeonChamber()}_dungeonChamber(){let e;switch(r.D._20()){case 1:e="Antechamber for those that have come to pay respect to the dead or prepare themselves for burial rituals";break;case 2:case 3:e="Chapel dedicated to deities that watch over the dead and protect their resting places";break;case 4:case 5:case 6:case 7:case 8:e="Crypt for less important burials";break;case 9:e="Divination room, used in rituals to contact the dead for guidance";break;case 10:e="False crypt (trapped) to kill or capture thieves";break;case 11:e="Gallery to display the deeds of the deceased through trophies, statues, paintings and so forth";break;case 12:e="Grand crypt for a noble, high priest, or other important individual";break;case 13:case 14:e="Guardroom, usually guarded by undead, constructs, or other creatures that don't need to eat or sleep";break;case 15:e="Robing room for priests to prepare for burial rituals";break;case 16:case 17:e="Storage, stocked with tools for maintaining the tomb and preparing the dead for burial";break;case 18:e="Tomb where the wealthiest and most important folk are interred, protected by secret doors and traps";break;case 19:case 20:e="Workshop for embalming the dead";break;default:e="Unknown purpose"}return e}}},1061:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Treasure_Vault:()=>o});var r=a(9836);class o{constructor(){this.chamber=this._dungeonChamber()}_dungeonChamber(){let e;switch(r.D._20()){case 1:e="Antechamber for visiting dignitaries";break;case 2:e="Armory containing mundane and magic gear used by the treasure vault's guards";break;case 3:case 4:e="Barracks for guards";break;case 5:e="Cistern providing fresh water";break;case 6:case 7:case 8:case 9:e="Guardroom to defend against intruders";break;case 10:e="Kennel for trained beasts used to guard the treasure vault";break;case 11:e="Kitchen for feeding guards";break;case 12:e="Watch room that allows guards to observe those who approach the dungeon";break;case 13:e="Prison for holding captured intruders";break;case 14:case 15:e="Strong room or vault, for guarding the treasure hidden in the dungeon, accessible only by locked or secret door";break;case 16:e="Torture chamber for extracting information from captured intruders";break;case 17:case 18:case 19:case 20:e="Trap or other trick designed to kill or capture creatures that enter the dungeon";break;default:e="Unknown purpose"}return e}}},7192:(e,t,a)=>{var r={"./dungeon_setting.js":4979,"./mapping/dungeon.js":548,"./mapping/dungeon_montage/dungeon_layout.js":5392,"./mapping/dungeon_montage/dungeon_montage.js":218,"./mapping/properties/chamber_state/currentChamberContents.js":4987,"./mapping/properties/chamber_state/currentChamberState.js":3562,"./mapping/properties/dungeonHazard.js":435,"./mapping/properties/dungeon_air_quality.js":1034,"./mapping/properties/dungeon_areas.js":3193,"./mapping/properties/dungeon_creator.js":9718,"./mapping/properties/dungeon_doors.js":3854,"./mapping/properties/dungeon_history.js":4781,"./mapping/properties/dungeon_lightsources.js":1459,"./mapping/properties/dungeon_location.js":1781,"./mapping/properties/dungeon_purpose.js":4808,"./mapping/properties/dungeon_statblock_summary.js":1531,"./mapping/properties/dungeon_walls.js":9621,"./mapping/properties/index.js":3184,"./mapping/properties/stocking_a_dungeon/death_trap.js":4768,"./mapping/properties/stocking_a_dungeon/generalDungeonChamber.js":5971,"./mapping/properties/stocking_a_dungeon/lair.js":0,"./mapping/properties/stocking_a_dungeon/maze.js":3387,"./mapping/properties/stocking_a_dungeon/mine.js":6571,"./mapping/properties/stocking_a_dungeon/planar_gate.js":7579,"./mapping/properties/stocking_a_dungeon/shrine.js":8370,"./mapping/properties/stocking_a_dungeon/stronghold.js":118,"./mapping/properties/stocking_a_dungeon/temple.js":7174,"./mapping/properties/stocking_a_dungeon/tomb.js":4968,"./mapping/properties/stocking_a_dungeon/treasure_vault.js":1061};function o(e){var t=n(e);return a(t)}function n(e){if(!a.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}o.keys=function(){return Object.keys(r)},o.resolve=n,e.exports=o,o.id=7192},6354:(e,t,a)=>{"use strict";a.d(t,{Verbs:()=>o});var r=a(9702);class o{static quality(){const e=["cheap","affordable","quality","expensive quality"];return e[Math.floor(Math.random()*e.length)]}static getComplexity(){const e=["clean","plain","straightforward","classic","simple","beautiful"];return e[Math.floor(Math.random()*e.length)]}static maintenance(){const e=["clean and slick","rusted","moldy","oxidated","clean","corroded","damaged","shining","smooth","big","dented","flawed","dirty","stained","filthy","greasy","begrimed","smudged","squalid","disheveled","grimey","well maintained","bloodstained","unkempt"];return e[Math.floor(Math.random()*e.length)]}static getObservation(){const e=["discern","see","clearly notice","cautiously observe","observe","simply spot","behold","distinguish from a distance","discern","glimpse","mark","catch a glimpse","catch sight","make out","take notice","survey","seize up","examine"];return e[Math.floor(Math.random()*e.length)]}static getIndicator(){const e=["indicates","connotes","denotes","hints","implies","suggests","implies","symbolizes","specifies","reveals","proves","attests"];return e[Math.floor(Math.random()*e.length)]}static getLength(){const e=["short","long","cape like","full","wide"];return e[Math.floor(Math.random()*e.length)]}static holding(){const e=["clasps","clutches","clenches","holds","wears","is holding","is tightly squeezing","is caressing","is fiddling with","is clasping"];return e[Math.floor(Math.random()*e.length)]}static named(){const e=["named","renamed","call","refer to","dubbed","labeled","titled"];return e[Math.floor(Math.random()*e.length)]}static getMoment(){const e=["when","whenever","every time","in moments when"];return e[Math.floor(Math.random()*e.length)]}static getCommunication(){const e=["is talking","is shouting","speaks","yells","shouts","talks","voice raises ","articulates","utters words","exclaims"];return e[Math.floor(Math.random()*e.length)]}static getMeeting(){const e=["meet","encounter","run into","come across","bump into","stumble upon","cross paths with","make the acquaintance of","get to know","introduce oneself to","make contact with","meet up with","face","find","greet","interact with","mingle with","rub elbows with","see"];return e[Math.floor(Math.random()*e.length)]}static getEstimation(){const e=["approximately","roughly","around","close to","nearly","almost","about","circa","somewhere around","in the neighborhood of","in the vicinity of","in the region of","something like","more or less","practically","virtually","essentially","effectively","near to","bordering on"];return e[Math.floor(Math.random()*e.length)]}static color(){return(0,r.getRandomElement)(["green","red","blue","purple","grey","black","white","yellow","pink","amber","cyan","gold","silver","iron","copper","teal","stone","lime","emerald","indigo","violet","fuchsia","rose","brown"])}}},9702:(e,t,a)=>{"use strict";function r(e){return e[Math.floor(Math.random()*e.length)]}a.d(t,{getRandomElement:()=>r})},9836:(e,t,a)=>{"use strict";a.d(t,{D:()=>o});var r=a(4838);class o{static _4(){return(0,r.TN)(1,4)}static _6(){return(0,r.TN)(1,6)}static _8(){return(0,r.TN)(1,8)}static _10(){return(0,r.TN)(1,10)}static _12(){return(0,r.TN)(1,12)}static _20(){return(0,r.TN)(1,20)}static _100(){return(0,r.TN)(1,100)}static _Custom(e){return(0,r.TN)(1,e)}}},4838:(e,t,a)=>{"use strict";function r(e){return e[Math.floor(Math.random()*e.length)]}function o(e,t){return Math.floor(Math.random()*(t-e+1))+e}function n(e){return e.charAt(0).toUpperCase()+e.slice(1)}function s(e){return e.charAt(0).toLowerCase()+e.slice(1)}function i(e){return e.split("_").map((e=>e.toLowerCase())).join(" ")}a.d(t,{N$:()=>i,TN:()=>o,fm:()=>n,kd:()=>r,u4:()=>s})}},t={};function a(r){var o=t[r];if(void 0!==o)return o.exports;var n=t[r]={exports:{}};return e[r](n,n.exports,a),n.exports}a.d=(e,t)=>{for(var r in t)a.o(t,r)&&!a.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{"use strict";var e=a(4979);let t=window;t={exploration:{},generator:{}},t.exploration.memory=[],t.parameters={},t.regex=/^[a-zA-Z0-9-' ]+$/;const r=a(7192);r.keys().forEach((e=>{e.replace("./",""),r(e)})),t.exploration.coreFunctionality=function(){document.getElementById("generateDungeon").addEventListener("click",(function(){const a=t.parameters,r=document.getElementById("dungeonTitle"),o=document.getElementById("dungeonSubTitle"),n=document.getElementById("dungeonLocation"),s=document.getElementById("dungeonCreator"),i=document.getElementById("dungeonPurpose"),c=document.getElementById("dungeonHistory"),l=document.getElementById("LOCKS"),d=document.getElementById("SECRETS"),u=document.getElementById("HAZARDS"),h=document.getElementById("MOOD"),g=document.getElementById("airQuality"),m=document.getElementById("odors"),p=document.getElementById("walls"),b=document.getElementById("features"),f=document.getElementById("darknessAndLight"),k=document.getElementById("lightSources"),_=document.getElementById("purposeName"),y=document.getElementById("purposeDescription"),w=document.getElementById("dungeonWallDescription"),v=document.getElementById("dungeon_doorsDescription"),D=document.getElementById("summary_vision"),T=document.getElementById("summary_locks"),C=document.getElementById("summary_secrets"),M=document.getElementById("summary_hazards"),S=document.getElementById("summary_mood"),x=new e.Dungeon_setting(a),L=x.getDungeon(),A=x.getExploration();console.log("GET"),r.innerHTML=L.dungeon_purpose,o.innerHTML=L.dungeon_history,n.innerHTML=L.dungeon_location,s.innerHTML=L.dungeon_creator,i.innerHTML=L.dungeon_purpose,c.innerHTML=L.dungeon_history,l.innerHTML=L.dungeon_locks,d.innerHTML=L.dungeon_secrets,u.innerHTML=L.dungeon_hazards,h.innerHTML=L.dungeon_mood,g.innerHTML=L.dungeon_air_quality,m.innerHTML=L.dungeon_odor,p.innerHTML=L.dungeon_wallType,b.innerHTML=L.dungeon_wallFeatures,f.innerHTML="Lightsources",k.innerHTML=L.dungeon_lightSources,_.innerHTML=L.dungeon_purpose,y.innerHTML=L.dungeon_typeDescription,w.innerHTML=L.dungeon_wallDescription,v.innerHTML=L.dungeon_doorsDescription,D.innerHTML=L.dungeon_summary_vision,T.innerHTML=L.dungeon_summary_locks,C.innerHTML=L.dungeon_summary_secrets,M.innerHTML=L.dungeon_summary_hazards,S.innerHTML=L.dungeon_summary_mood,console.log(A);const E=document.getElementById("dungeon-exploration-paragraph-1"),B=document.getElementById("dungeon-exploration-paragraph-2"),H=document.getElementById("dungeon-exploration-paragraph-3");E.innerHTML=A.exploration_1,B.innerHTML=A.exploration_2,H.innerHTML=A.exploration_3}))},document.addEventListener("DOMContentLoaded",(function(){t.exploration.coreFunctionality()}))})()})();
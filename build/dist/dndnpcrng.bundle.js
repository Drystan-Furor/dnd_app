(()=>{var e={8923:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Belts:()=>n});var r=a(5701);class n{constructor(){this.belt=n.belt()}static beltItem(){const e=[`${Math.floor(7*Math.random())+3} small bottles`,`${Math.floor(5*Math.random())+2} throwing daggers`,`${Math.floor(9*Math.random())+4} throwing darts`,`${Math.floor(4*Math.random())+2} vials with red liquid`,`${Math.floor(4*Math.random())+2} small pouches`,`${Math.floor(31*Math.random())+10} feet of rope`,"a book","a purse","a large tome","a small knife","a sash","some lockpicks","an Abacus","a crowbar","a waterskin","a hooded lantern","carpenter's tools","a cylindrical leather case","a grappling hook","a healer's kit","a magnifying glass","a leather-bound tome","a spyglass","a dangling censer","a drinking horn","an iron flask","a boomerang","ten pouches"];return e[Math.floor(Math.random()*e.length)]}static beltMaterial(){const e=["cloth","cowhide leather","full-grain calfskin leather","braided leather","tooled leather","suede","rope","studded leather"];return e[Math.floor(Math.random()*e.length)]}static beltFashion(){const e=["embroidered","plain","smooth","simple","traditional","common"];return e[Math.floor(Math.random()*e.length)]}static belt(){const e=this.beltItem();let t=this.beltItem(),a=this.beltItem();for(;e===t||a===t;)t=this.beltItem();for(;a===e||a===t;)a=this.beltItem();const n=[`${this.beltFashion()} ${this.beltMaterial()} belt with a ${r.Material.getMetalType()} buckle`,`${r.Material.getMetalType()} buckled ${this.beltFashion()} ${this.beltMaterial()} belt`,`${this.beltFashion()} ${this.beltMaterial()} belt with ${this.beltItem()} strapped to it`,`${this.beltFashion()} ${this.beltMaterial()} belt with ${e} and ${t} strapped to it`,`${this.beltFashion()} ${this.beltMaterial()} belt used to hold ${e}, ${t} and ${a}`,`${this.beltFashion()} ${this.beltMaterial()} belt with ${this.beltItem()} strapped to it and another ${this.beltFashion()} ${this.beltMaterial()} belt holding ${this.beltItem()}`,`${this.beltFashion()} ${this.beltMaterial()} bandolier with ${e}, ${t} and ${a} attached to it`,`${this.beltFashion()} ${this.beltMaterial()} belt holding ${this.beltItem()} and a ${this.beltFashion()} ${this.beltMaterial()} bandolier with a ${r.Material.getMetalType()} buckle holding ${e} and ${t}`];return n[Math.floor(Math.random()*n.length)]}getBelt(){return this.belt}}},721:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Details:()=>n});var r=a(6354);class n{static outfitDetails(){const e=["a separate and fuller skirt sewn to the body","a loose blouse that can be tightly laced","an overcoat","a garnache, a long cloak,","a bodice sewn to a skirt","the fabric falling in folds into a bell shape","a low cut V neck that shows a piece of contrasting fabric underneath","a Gothic style influence, a look that accentuates slenderness and an elongated form","a vertical color difference with a split vertical dividing line in the center of the body","a light linen shift underneath,","luxurious fabrics","a luxurious trim","beautiful prints and vibrant colors","edges of the outer garments decorated with dagging, edged with loose pieces of fabric that resembled leaves","the highest quality textiles"];return e[Math.floor(Math.random()*e.length)]}static patterns(){const e=["woven in","embroided","printed on the fabric"];return e[Math.floor(Math.random()*e.length)]}static linings(){const e=["both warmth and style","warmth","style"];return e[Math.floor(Math.random()*e.length)]}static richDetails(){const e=["designs featuring gimmicky or quirky elements",`fur lining thats increasing ${this.linings()}`,"interwoven golden thread for a shimmering effect",`ornate and wildly ostentatious designs ${this.patterns()}`,`patterns and designs ${this.patterns()}`,`bureaucratic sigils of office ${this.patterns()}`];return e[Math.floor(Math.random()*e.length)]}static sleeves(){const e=[`${r.Verbs.getLength()} sleeves widened toward a bell shape`,`a high collar and ${r.Verbs.getLength()} sleeves`,"full sleeves tightened at the wrist",`${r.Verbs.getLength()} sleeves that end at the elbow`,"no sleeves",`${r.Verbs.getLength()} sleeves`,"slashings in the sleeves that show the under tunic"];return e[Math.floor(Math.random()*e.length)]}}},7567:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Hats:()=>r});class r{constructor(e){this.hat=this.hasHat(e)}static hatMaterials(){const e=["leather","felt","cotton","wool","straw","linen","knitted","fur"];return e[Math.floor(Math.random()*e.length)]}static hatTypes(){const e=["cap","hat","beanie","hood","fedora","bowler","sombrero","beret","skullcap","tam o'shanter","fez","oesjanka","hood"];return e[Math.floor(Math.random()*e.length)]}static craftHats(){const e=["a wimple, a piece of cloth worn over the head and around the face and neck",`a ${this.hatMaterials()} sugar loaf hat: a tallish, conical hat that resembles an inverted flower pot`,`a ${this.hatMaterials()} flat mortar board type hat, people associate with graduation`,`a chaperon, a ${this.hatMaterials()} hood that is sewn onto a cape`,`a ${this.hatMaterials()} hood grown with extra fabric and slightly longer than necessary`,`a tall ${this.hatMaterials()} conical hat worn tilted at the back of the head`,`a ${this.hatMaterials()} ${this.hatTypes()}`];return e[Math.floor(Math.random()*e.length)]}static craftHat(e){return`${e.charAt(0).toUpperCase()+e.slice(1)} is wearing ${this.craftHats()}. `}hasHat(e){return Math.floor(20*Math.random())+1>15?"":this.constructor.craftHat(e)}getHat(){return this.hat}}},2750:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Jewelry:()=>n});var r=a(5701);class n{constructor(){this.jewel=n.craftJewel()}static jewelryType(){const e=["necklace","necklace with a locket","necklace with a gemstone pendant","chain","ring","locket","bracelet","spiral bracelet","arm cuff","upper arm bracelet","arm band","armlet","bangle"];return e[Math.floor(Math.random()*e.length)]}static craftJewel(){return` a ${r.Material.getMetalType()} ${n.jewelryType()} set with a ${r.Material.getGemstoneType()}`}getJewel(){return this.jewel}}},2578:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Rings:()=>n});var r=a(5701);class n{constructor(){this.ring=n.craftRing()}getRing(){return this.ring}static getComplexity(){const e=["a","a","a mundane","a plain","an intricate","an uncomplicated","a simple","a complex","a sophisticated","a baroque","a refined"];return e[Math.floor(Math.random()*e.length)]}static craftRing(){let e;return e=Math.floor(20*Math.random())+1>15?`${this.getComplexity()} ${r.Material.getMetalType()} signet`:`${this.getComplexity()} ${r.Material.getMetalType()}`,e=`${e} ring set with a ${r.Material.getGemstoneType()}`,e}}},9044:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Shoes:()=>n});var r=a(5066);class n{constructor(e){this.shoes=this.theRightShoes(e)}static materials(){const e=["goat hide","cow hide","leather","felt"];return e[Math.floor(Math.random()*e.length)]}static types(){const e=["simple shoes","heavy boots","shoes","boots","long, pointy shoes","sandals","botes (boots) held on with straps","clogs with wood soles","rope soled shoes","covered basts (made of tree bark)"];return e[Math.floor(Math.random()*e.length)]}static wearing(){const e=["Feet covered with","Feet protected by","Feet fitted with"];return e[Math.floor(Math.random()*e.length)]}static shoes(){return`${this.wearing()} ${this.types()} made of ${this.materials()}. `}getShoes(){return this.shoes}theRightShoes(e,t){const a=r.classMapping[e.getRace()];return a&&"function"==typeof a.shoesReplacer?a.shoesReplacer(e,t):this.constructor.shoes()}}},2:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Weapon:()=>i});var r=a(9147),n=a(9702);class i{constructor(e,t,a){this.weapon=i._armed(e,t,a)}getArms(){return this.weapon}static holding(){const e=["carries","is holding","clenches","is equipped with","is packed with","is armed with","has","hauls","lugs","hoists","bears","clamps","clutches","clasps","holds","is packing","is outfitted with","is loaded with","is girded with","is steeled with","is fitted out with"];return e[Math.floor(Math.random()*e.length)]}static weapon(){const e=["club","mace","scimitar","dagger","short sword","long sword","bow","crossbow","axe","hatchet","warhammer","great sword","javelin","spear","glaive","quarterstaff","throwing axe","knife","rapier","whip","battleaxe","messer","halberd","lance","heavy crossbow","hand crossbow","blowgun","boomerang","couple of darts","flail","greataxe","greatclub","light hammer","longbow","maul","morningstar","pike","shortbow","sickle","sling","trident","war pick"];return e[Math.floor(Math.random()*e.length)]}static _armed(e,t,a){let i=[`${a.getRace()} `,`${t} `,`${e.getGender()} `];return i=(0,n.getRandomElement)(i),`${r.Sentence.observing()} ${i} ${this.holding()} a ${this.weapon()}`}}},8332:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Body:()=>i});var r=a(5066),n=a(9702);class i{constructor(e,t){this.bodyType=this._bodyType(e,t),this.bodyShape=this._bodyShape(e,t),this.bodySize=this._bodySize(e,t),this.body=this._bodyBuilder(t)}static bodyTypeDefault(){const e=["long and lean","fat","bulky","muscular","slender","quite overweight","with a delicate frame","similar to a marathon runner","stocky","muscular, but also a bit fat","obese","athletic","well defined muscled","positivly ripped","as broad as the side of a barn"];return e[Math.floor(Math.random()*e.length)]}static bodyShapeDefault(){const e=["narrow shoulders and a narrow bust","slim arms and a fairly defined waist","hips larger than the bust","a shelf-like appearance","hips and bust that are nearly equal in size","a well-defined waist","large shoulders and a large bust","a little more weight in the upper legs","shoulder and hip measurements that are about the same"];return e[Math.floor(Math.random()*e.length)]}static bodySizeDefault(){const e=["small","quite small","very small","really small","slightly smaller","rather small","reasonably small","tiny","medium sized","middle sized","sort of typical sized","common sized","characteristically sized","naturally common sized","typical","more or less standard sized","moderately sized","large","quite large","very large","really large","slightly larger","reasonably large","tall"];return e[Math.floor(Math.random()*e.length)]}_bodyBuilder(e){return this.body=this._bodyString(e),this.body}_bodyString(e){const t=e.getManWoman(),a=e.getHeShe(),r=e.getHisHer(),i=e.getGender(),s=[`Built ${this.bodyType}, ${a} has a ${this.bodySize} ${i} body with ${this.bodyShape}`,`${(0,n.ucFirst)(a)} possesses a ${i} body, ${this.bodyType} in build, characterized by a ${this.bodySize} ${this.bodyShape}`,`With a ${this.bodySize} ${i} body, ${a} is ${this.bodyType} and exhibits ${this.bodyShape}`,`The ${i} form of this ${this.bodySize} ${t} is ${this.bodyType}, marked by ${this.bodyShape}`,`${(0,n.ucFirst)(a)} carries ${r} ${this.bodySize} ${i} physique, ${this.bodyType} with ${this.bodyShape}`,`In terms of physique, ${a} is ${this.bodyType}, having a ${i} body with ${this.bodySize} ${this.bodyShape}`,`The ${i} structure of this ${this.bodySize} ${t} is ${this.bodyType}, defined by ${this.bodyShape}`,`This ${this.bodySize} ${t} has a ${i} build, ${this.bodyType} and outlined by ${this.bodyShape}`,`Exhibiting a ${this.bodySize} ${i} body, ${a} is structured ${this.bodyType} with ${this.bodyShape}`,`${(0,n.ucFirst)(a)} has a ${this.bodySize} ${i} frame, built ${this.bodyType} and features ${this.bodyShape}`,`${(0,n.ucFirst)(r)} ${i} body is ${this.bodySize} ${this.bodyType} and showcases ${this.bodyShape}`,`This ${t}'s ${this.bodySize} ${i} physique is ${this.bodyType}, highlighted by ${this.bodyShape}`,`With a ${this.bodySize} ${this.bodyType} build, ${a} presents a ${i} body featuring ${this.bodyShape}`,`${(0,n.ucFirst)(a)}'s ${i} form is ${this.bodyType}, distinguished by ${this.bodySize} ${this.bodyShape}`,`This ${this.bodySize} ${t} exhibits a ${i} body, ${this.bodyType} in structure, and is characterized by ${this.bodyShape}`,`The ${this.bodySize} ${i} body of this ${t} is ${this.bodyType} and is marked by ${this.bodyShape}`,`${(0,n.ucFirst)(r)} ${this.bodySize} physique is ${this.bodyType}, a representation of ${i} body, detailed with ${this.bodyShape}`,`In ${this.bodyType} form, ${a} displays a ${this.bodySize} ${i} body, accentuated by ${this.bodyShape}`,`This ${t} holds a ${i} body, ${this.bodyType} in build, and is defined by ${this.bodySize} ${this.bodyShape}`,`${(0,n.ucFirst)(r)} ${i} structure is ${this.bodySize}, ${this.bodyType} and is adorned with ${this.bodyShape}`];return s[Math.floor(Math.random()*s.length)]}getBodyType(){return this.bodyType}getBodyShape(){return this.bodyShape}getBodySize(){return this.bodySize}getBody(){return this.body}_bodySize(e,t){const a=r.classMapping[e];return a&&"function"==typeof a.bodySizeReplacer?a.bodySizeReplacer(e,t):i.bodySizeDefault()}_bodyType(e,t){const a=r.classMapping[e];return a&&"function"==typeof a.bodyTypeReplacer?a.bodyTypeReplacer(e,t):i.bodyTypeDefault()}_bodyShape(e,t){const a=r.classMapping[e];return a&&"function"==typeof a.bodyShapeReplacer?a.bodyShapeReplacer(e,t):i.bodyShapeDefault()}static bodypart(){return(0,n.getRandomElement)(["arms","legs","back","neck","shoulders","belly","hands","feet","upper arms","upper legs","chest","torso","throat","head","face","wrists","knees","elbows","ribcage"])}}},2102:(e,t,a)=>{"use strict";a.r(t),a.d(t,{DndNpcRng:()=>f});var r=a(9977),n=a(2934),i=a(3028),s=a(417),o=a(44),l=a(7235),h=a(8332),c=a(4225),d=a(2394),m=a(2892),u=a(2),g=a(6354);class f{constructor(e){this.new_npc=this._dndRngNpc(e),this.string=this._writeStory(this.new_npc)}getNewNpc(){return this.new_npc}getString(){return this.string}_dndRngNpc(e){this.npcClass=(new n.NpcClass).getNpcClass(),this.genderNouns=new s.Gender;const t=new i.Race(e);this.age=new o.Age(t);const a=r.RaceFactory.createRace(t,this.genderNouns,this.age,e);!function(e,t){if(!e)return!1;e.firstname&&t.setFirstname(e.firstname),e.lastname&&t.setLastname(e.lastname),e.nickname&&t.setNickname(e.nickname)}(e,a),this.profile=new l.Profile(t.getRace(),this.genderNouns,this.npcClass);const g=new h.Body(t.getRace(),this.genderNouns);this.mood=new c.Mood(this.npcClass),this.scar1=new d.Scar(t.getRace(),this.genderNouns).getScar(),this.scar2=new d.Scar(t.getRace(),this.genderNouns).getScar(),this.scar3=new d.Scar(t.getRace(),this.genderNouns).getScar();const f=new m.Status(this.genderNouns,this.npcClass,t);return this.weapon=new u.Weapon(this.genderNouns,this.npcClass,t),{id:(0,o.rand)(1e3,9999),class:this.npcClass,gender:this.genderNouns.getGender(),manWoman:this.genderNouns.getManWoman(),heShe:this.genderNouns.getHeShe(),hisHer:this.genderNouns.getHisHer(),dndRace:t.getRace(),heritage:t.getHeritage(),variant:t.getVariant(),raceArray:t.getRaceArray(),age:this.age.getAge(),face:this.profile.getFace(),bodySize:g.getBodySize(),bodyType:g.getBodyType(),bodyShape:g.getBodyShape(),body:g.getBody(),mood:this.mood.getMood(),scar1:this.scar1,scar2:this.scar2,scar3:this.scar3,intro:f.getIntro(),outfit:f.getOutfit(),firstname:a.getFirstname(),lastname:a.getLastname(),nickname:a.getNickname(),description:a.getDescription(),weapon:this.weapon.getArms()}}_writeStory(e){var t;return{string1:`You ${g.Verbs.getMeeting()} ${e.firstname} ${e.lastname}. \n        A ${e.bodySize} ${e.gender} ${e.dndRace} ${e.class}, \n        that's ${g.Verbs.getEstimation()} ${e.age} years old. \n        ${t=e.intro,t?t.charAt(0).toUpperCase()+t.slice(1):t}. ${e.description}. ${e.weapon}. `,string2:`${e.face}, ${e.scar1} ${e.scar2} ${e.scar3}`,string3:`${e.body}. ${e.outfit} ${e.mood}.`}}}},5701:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Material:()=>n});var r=a(9702);class n{static getMetalType(){const e=["silver","gold","bronze","steel","copper","platinum","iron"];return e[Math.floor(Math.random()*e.length)]}static getPlateType(){const e=["lead","tin","copper","steel","cast-iron","iron","metal","darkwood","stone","rock"];return e[Math.floor(Math.random()*e.length)]}static getEnamelType(){const e=["bronze","silver","platinum","gold","chrome","glass"];return e[Math.floor(Math.random()*e.length)]}static getWoodType(){const e=["Oak","Pine","Beech","Birch","Cherry","Elm","Hawthorn","Juniper","Mahogany","Maple","Poplar","Willow","Spruce","Chestnut","Fir","Cypress","Redcedar","Hemlock"];return e[Math.floor(Math.random()*e.length)]}static getGemstoneType(){const e=["stone of Onyx","gem of Emerald","black Sapphire","Sapphire","Diamond","Ruby","garnet of Opal","Pearl","black Pearl","series of pearls","blue Spinel","Turqoise","watery gold piece of Amber","crimson piece of Coral","Tigers-eye","Pyrite","Star rose Quartz","blue Quartz","gray-black Hermatite","dark green Malachite","Sardonyx","Zircon","Jasper","rock of Amethyst","transparent fiery orange Jacinth"];return e[Math.floor(Math.random()*e.length)]}static getJewelTone(){const e=["black Onyx","green Emerald","blue Sapphire","white Diamond","red Ruby","nature’s firework Opal","Pearlescent","black Pearlescent","blue Spinel","blue-green Turqoise","watery gold  Amber","crimson Coral","Pyrite","rose Quartz","blue Quartz","gray-black Hermatite","dark green Malachite","Sardonyx","yellow-golden Zircon","red Zircon","blue-green Zircon","brown, yellow- reddish Jasper","purple Amethyst","transparent fiery orange Jacinth"];return e[Math.floor(Math.random()*e.length)]}static sparepart(){return(0,r.getRandomElement)(["cylinders","pistons","clockwork parts","cogs","gears","pinions","pneumatics","rotary valves","telemetrical instruments","shafts","valves","bearings","springs","cogwheels","connecting rods","poppet valves","sleeve valves","axles","manifolds","servosystems","actuators","ultrasonic actuators","tactile sensors","locomotion systems","animatronics","cybernetics","orthotics","prosthetics","proprioceptive sensors","pneumatic actuators","bolts","screws","nails","metal wires"])}static connection(){return(0,r.getRandomElement)(["interwoven thorny vines","roots of flowering plants","tendrills","copper pipes","leather belts","metal pipes","woven rope","chains","nails","tangling roots","tubes","roots","leather straps","braided roots","braided vines","braided thorny vines","rags","cloth wraps"])}}n.getMetalType(),n.getPlateType(),n.getEnamelType(),n.getWoodType(),n.getGemstoneType(),n.getJewelTone()},4225:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Mood:()=>r});class r{constructor(e){this.mood=this._generateMood(e)}static _mood(){const e=["angry","happy","careless","neutral","pissed","timid","grieving","sad","laughing","smiling","upset","agitated","aggravated","cheerful","joyful","peacefull","intoxicated","captivated","gleeful","thrilled","ecstatic","glad","annoyed","bitter","furious","bashed","tipsy","impassioned","indignant","offended","uptight","fierce","displeased","hateful","raging","mad","crazy","storming","casual","indifferent","nonchalant","absent-minded","thoughtful","thoughtless","oblivious","unconcerned","unguarded","guarded","unobservant","disinterested","uncommitted","unbiased","calm","cool","collected","dispassionate","pacifistic","relaxed","unprejudiced","nonbelligerent","impartial","nervous","fearful","gentle","afraid","frightened","feeble","cowardly","shaky","unnerved","heartbroken","melancholy","mournful","sorrowful","bereaved","cheerless","distressed","forlorn","downcast"];return e[Math.floor(Math.random()*e.length)]}_generateMood(e){return"The "+e+" seems to be in a "+r._mood(e)+" mood"}getMood(){return this.mood}}},7235:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Profile:()=>c});var r=a(1908),n=a(9167),i=a(211),s=a(2673),o=a(859),l=a(6354),h=a(9702);class c{constructor(e,t,a){this.face=this._facialConstruction(e,t,a)}getChin(){return this.chin}getEyes(){return this.eyes}getMouth(){return this.mouth}getNose(){return this.nose}getTeeth(){return this.teeth}getFace(){return this.face}_facialConstruction(e,t,a){const c=t.getManWoman(),d=t.getHeShe(),m=t.getHisHer(),u=(t.getGender(),t.getHimHer(),new i.Eyes(e,t));this.eyes=u.getEyes();const g=new n.Nose(e,t);this.nose=g.getNose();const f=new r.Mouth(e,t);this.mouth=f.getMouth();const p=new o.Teeth(e,t);this.teeth=p.getTeeth();const y=new s.Chin(e,t);this.chin=y.getChin();const b=["The "+a+" meets your gaze with "+this.eyes,"The "+a+" stares at you with "+this.eyes,"With "+this.eyes+", the "+a+" locks eyes with you","Observing "+this.eyes+", you find yourself locked in the gaze of the "+a,"Your eyes meet the "+this.eyes+" of the "+a+", creating a silent connection"],k=["You "+l.Verbs.getObservation()+" this "+c+" has "+this.nose,"You "+l.Verbs.getObservation()+" that this "+c+" is characterized by "+this.nose,"You "+l.Verbs.getObservation()+" a distinct "+this.nose+" on this "+c,"You "+l.Verbs.getObservation()+" that this "+c+" possesses "+this.nose],M=[`As you ${l.Verbs.getObservation()} the ${e}, you ${l.Verbs.getObservation()} ${d} has\n            ${this.chin} and ${m} mouth is set with ${this.mouth}`,"While examining the "+c+", you "+l.Verbs.getObservation()+" that "+d+" has "+this.chin+" and "+m+" lips are "+this.mouth,"As your eyes scan the "+c+", it becomes apparent that "+d+" possesses "+this.chin+" and "+m+" "+this.mouth,"Scanning the "+c+", it’s clear that "+d+" features "+this.chin+" and "+m+" lips, they are "+this.mouth],w=l.Verbs.getCommunication();let $=l.Verbs.getCommunication();$===w&&($=l.Verbs.getCommunication());const v=(0,h.ucFirst)(l.Verbs.getMoment())+" the "+e+" "+w+" or "+$+", you "+l.Verbs.getObservation()+" "+d+" "+this.teeth;return function(){const e=[(0,h.getRandomElement)(b),(0,h.getRandomElement)(k),(0,h.getRandomElement)(M),v];return(0,h.shuffleArray)(e).join(". ")}()}}},2394:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Scar:()=>n});var r=a(6354);class n{constructor(e,t){this.scar=n.scar(e,t)}static _dentMarkings(){return["indentation","incline","dent","scratch","scrape","chip","perforation","claw mark"]}static dentLines(){const e=this._dentMarkings(),t=e[Math.floor(Math.random()*e.length)],a=["horizontal "+t,"vertical "+t,t,"diagonal "+t+", from the left to the right","diagonal "+t+", from the right to the left"];return a[Math.floor(Math.random()*a.length)]}static _scarMarkings(){const e=["scar","cut","bruise","laceration","graze","claw mark","birth mark","wound","jab","bruise","scratch"];return e[Math.floor(Math.random()*e.length)]}static scarLines(){const e=this._scarMarkings(),t=["horizontal "+e,"vertical "+e,e,"diagonal "+e+", from the left to the right","diagonal "+e+", from the right to the left"];return t[Math.floor(Math.random()*t.length)]}static scarSides(){const e=["left side","right side","middle"];return e[Math.floor(Math.random()*e.length)]}static scarLocation(){const e=["left cheek","right cheeck","left temple","right temple","left eye","right eye","left ear","right ear","left eyebrow","right eyebrow","jaw","forehead","chin","nose","mouth","throat"];return e[Math.floor(Math.random()*e.length)]}static scar(e,t){const a=Math.floor(2*Math.random())+1;let n="";if("Warforged"!==e)1===a&&(n="You "+r.Verbs.getObservation()+" "+t.getHeShe()+" has a "+this.scarLines()+" on the "+this.scarSides()+" of "+t.getHisHer()+" "+this.scarLocation()+". ");else if("Warforged"===e&&1===a){let e=this.scarLocation();"nose"===e&&(e="nose area"),n="You "+r.Verbs.getObservation()+" "+t.getHeShe()+" has a "+this.dentLines()+" on the "+this.scarSides()+" of "+t.getHisHer()+" "+e+". "}return n}getScar(){return this.scar}}},9147:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Sentence:()=>n});var r=a(6354);class n{static observing(){const e=[`At a glance you ${r.Verbs.getObservation()} the `,`At first sight you ${r.Verbs.getObservation()} the `,`At a gander you ${r.Verbs.getObservation()} the `,`In a flash you ${r.Verbs.getObservation()} the `,`In a fleeting look you ${r.Verbs.getObservation()} the `,`While checking, you ${r.Verbs.getObservation()} the `];return e[Math.floor(Math.random()*e.length)]}static subject(e,t,a){const r=[" the  "+a," this "+t,e];return r[Math.floor(Math.random()*r.length)]}}},2892:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Status:()=>l});var r=a(3350),n=a(9758),i=a(9953),s=a(3431),o=a(2208);class l{constructor(e,t,a){this.rngOutfit(e,t,a)}rngOutfit(e,t,a){if("Warforged"===a.getRace())return this.intro=a.getIntro(),this.outfit=a.getOutfit(),!0;const l=Math.floor(100*Math.random())+1;let h;h=l>=1&&l<=15?new n.Beggar(e,t,a):l>=16&&l<=40?new i.Poor(e,t,a):l>=41&&l<=70?new r.Commoner(e,t,a):l>=71&&l<=89?new o.Bourgeoisie(e,t,a):l>=90&&l<=100?new s.Rich(e,t,a):new i.Poor(e,t,a),this.outfit=h.getOutfit(),this.intro=h.getIntro()}getOutfit(){return this.outfit}getIntro(){return this.intro}}},6354:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Verbs:()=>r});class r{static quality(){const e=["cheap","affordable","quality","expensive quality"];return e[Math.floor(Math.random()*e.length)]}static getComplexity(){const e=["clean","plain","straightforward","classic","simple","beautiful"];return e[Math.floor(Math.random()*e.length)]}static maintenance(){const e=["clean and slick","rusted","moldy","oxidated","clean","corroded","damaged","shining","smooth","big","dented","flawed","dirty","stained","filthy","greasy","begrimed","smudged","squalid","disheveled","grimey","well maintained","bloodstained","unkempt"];return e[Math.floor(Math.random()*e.length)]}static getObservation(){const e=["discern","see","clearly notice","cautiously observe","observe","simply spot","behold","distinguish from a distance","discern","glimpse","mark","catch a glimpse","catch sight","make out","take notice","survey","seize up","examine"];return e[Math.floor(Math.random()*e.length)]}static getIndicator(){const e=["indicates","connotes","denotes","hints","implies","suggests","implies","symbolizes","specifies","reveals","proves","attests"];return e[Math.floor(Math.random()*e.length)]}static getLength(){const e=["short","long","cape like","full","wide"];return e[Math.floor(Math.random()*e.length)]}static holding(){const e=["clasps","clutches","clenches","holds","wears","is holding","is tightly squeezing","is caressing","is fiddling with","is clasping"];return e[Math.floor(Math.random()*e.length)]}static named(){const e=["named","renamed","call","refer to","dubbed","labeled","titled"];return e[Math.floor(Math.random()*e.length)]}static getMoment(){const e=["when","whenever","every time","in moments when"];return e[Math.floor(Math.random()*e.length)]}static getCommunication(){const e=["is talking","shouting","speaks"," yells","voice raises ","articulates","utters words","exclaims"];return e[Math.floor(Math.random()*e.length)]}static getMeeting(){const e=["meet","encounter","run into","come across","bump into","stumble upon","cross paths with","make the acquaintance of","get to know","introduce oneself to","make contact with","meet up with","face","find","greet","interact with","mingle with","rub elbows with","see"];return e[Math.floor(Math.random()*e.length)]}static getEstimation(){const e=["approximately","roughly","around","close to","nearly","almost","about","circa","somewhere around","in the neighborhood of","in the vicinity of","in the region of","something like","more or less","practically","virtually","essentially","effectively","near to","bordering on"];return e[Math.floor(Math.random()*e.length)]}}},2673:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Chin:()=>n});var r=a(5066);class n{constructor(e,t){this.chin=this._randomChin(e,t)}static defaultChin(){const e=["a rather ","quite the","a very defined","a puffed","a very protruding","a bulbous","a very small","a bit of a"],t=["pointy","round","square"];return`${e[Math.floor(Math.random()*e.length)]} ${t[Math.floor(Math.random()*t.length)]} chin`}_randomChin(e,t){const a=r.classMapping[e];return a&&"function"==typeof a.chinReplacer?a.chinReplacer(e,t):n.defaultChin()}getChin(){return this.chin}}},211:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Eyes:()=>n});var r=a(5066);class n{constructor(e,t){this.eyes=this._randomEyes(e,t)}_randomEyes(e,t){const a=r.classMapping[e];return a&&"function"==typeof a.eyesReplacer?a.eyesReplacer(e,t):n.defaultEyeShape()}static defaultEyeShape(){const e=["squinty eyes","big eyes","small eyes","fairly large eyes","tired eyes","energetic eyes","drowzy eyes","round eyes","almond shaped eyes","wide set eyes","close set eyes","prominent eyes","downturned eyes","upturned eyes","deep set eyes","droopy eyes","monolid eyes"];return e[Math.floor(Math.random()*e.length)]}static canSee(){let e=n.defaultEyeShape();const t=Math.floor(100*Math.random())+1;if(1===t)e="empty eye sockets, eyes gauged out";else if(t>=2&&t<=10){const t=[", the left eye is blind",", the right eye is blind",", but both eyes are blind"];e+=t[Math.floor(Math.random()*t.length)]}return e}getEyes(){return this.eyes}}},1908:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Mouth:()=>n});var r=a(5066);class n{constructor(e,t){this.mouth=this._randomMouth(e,t)}static defaultMouths(){const e=["full lips","round lips","bow shaped lips","heavy lower lips","heart shaped lips","heavy upper lips","wide lips","thin lips","downward turned lips","perfectly proportioned lips"];return e[Math.floor(Math.random()*e.length)]}_randomMouth(e,t){const a=r.classMapping[e];return a&&"function"==typeof a.mouthReplacer?a.mouthReplacer(e,t):n.defaultMouths()}getMouth(){return this.mouth}}},9167:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Nose:()=>n});var r=a(5066);class n{constructor(e,t){this.nose=this._randomNose(e,t)}_randomNose(e,t){const a=r.classMapping[e];return a&&"function"==typeof a.noseReplacer?a.noseReplacer(e,t):n.defaultNose()}static defaultNose(){const e=Math.floor(100*Math.random())+1;if(e>=1&&e<=24)return"a very fleshy, prominent big nose";if(e<=38)return"a celestial upturned nose, small in size with a dent at the nose bridge and a protruding tip";if(e<=47)return"an eagle nose. With a strong sloping curve that prominently protrudes from the face";if(e<=56){const e=["subtle","protruding"];return`a bumpy nose that features bumpy outlines with ${e[Math.floor(Math.random()*e.length)]} curves located at the tip of the nose`}return e<=64?"a very snub nose, thin and pointy, small in size but quite round":e<=68?'a "Hawk" nose that has similarities with the curved beaks of eagles and other predatory birds. It has a dramatic arched shape and a protruding bridge, making them look long and small':e<=76?"a perfectly straight nose. One of the most aesthetically pleasing of all nose shapes. It gives a distinct and attractive profile since it doesn’t have any humps or curves":e<=84?"a nubian nose, rather big, with very prominent nostrils":e<=91?"a thin and flat shaped nose with a short tip":e<=100?"a bulbous nose, it has a a swollen, disproportionate nasal tip, almost like it's too big. Imagine something like a ball positioned at the end of the nose":"a very fleshy, prominent big nose"}getNose(){return this.nose}}},859:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Teeth:()=>s});var r=a(5701),n=a(6354),i=a(5066);class s{constructor(e,t){this.teeth=this._randomTeeth(e,t)}_randomTeeth(e,t){const a=i.classMapping[e];return a&&"function"==typeof a.teethReplacer?a.teethReplacer(e,t):s.defaultTeeth()}static _teethTypes(){const e=["rotten ","shiny white","yellow","buck","quite large","rather small","yellow and grey","crooked","canine whiskers"];return e[Math.floor(Math.random()*e.length)]}static defaultTeeth(){const e=["is missing a tooth","is missing several teeth",`has a ${r.Material.getMetalType()} tooth`,`has several ${r.Material.getMetalType()} teeth`,`has ${s._teethTypes()} teeth`,"has no teeth at all","has good dentals","has yellow teeth, but all there","has fairly good dentals",`has ${s._teethTypes()} teeth that could use some bracers`,"has no regular teeth but canine whiskers","has good dentals","has rather bad dentals","has sharp edged teeth, as if they are trimmed or filed",`has fake teeth, like a prosthetic made of ${n.Verbs.quality()} ${r.Material.getMetalType()}`];return e[Math.floor(Math.random()*e.length)]}getTeeth(){return this.teeth}}},44:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Age:()=>r,rand:()=>n});class r{constructor(e){this.age=r.defaultAge(e)}setAge(e){this.age=e}getAge(){return this.age}static defaultAge(e){let t;switch(e.getRace()){case"Elf":t=n(14,750);break;case"Kenku":case"Lizardfolk":case"Tabaxi":case"Goblin":t=n(14,60);break;case"Dwarf":case"Firbolg":t=n(14,350);break;case"Human":case"Yuan Ti Pureblood":case"Goliath":t=n(14,90);break;case"Tiefling":case"Gith":case"Changeling":t=n(14,100);break;case"Aarakocra":case"Warforged":t=n(3,30);break;case"Tortle":case"Orc":t=n(12,50);break;case"Aasimar":t=n(14,160);break;case"Kobold":case"Genasi":t=n(14,120);break;case"Halfling":case"Verdan":t=n(14,250);break;case"Orc of Exandria":case"Orc of Ebberon":case"Half Orc":t=n(14,75);break;case"Gnome":case"Loxodon":t=n(14,425);break;case"Vedalkan":t=n(14,500);break;default:t=n(14,80)}return t}}function n(e,t){return Math.floor(Math.random()*(t-e+1))+e}},2934:(e,t,a)=>{"use strict";a.r(t),a.d(t,{NpcClass:()=>r});class r{constructor(){this.npcClass=this.generateClass()}generateClass(){const e=["Barbarian","Bard","Cleric","Druid","Fighter","Monk","Paladin","Ranger","Rogue","Sorcerer","Warlock","Wizard"];return e[Math.floor(Math.random()*e.length)]}getNpcClass(){return this.npcClass}}},417:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Gender:()=>r});class r{constructor(){this._setRandomGender()}_setRandomGender(){const e=Math.floor(2*Math.random())+1;this.gender="female",this.manWoman="woman",this.heshe="she",this.hisher="her",this.himher="her",1===e&&(this.gender="male",this.manWoman="man",this.heshe="he",this.hisher="his",this.himher="him")}getGender(){return this.gender}getManWoman(){return this.manWoman}getHeShe(){return this.heshe}getHisHer(){return this.hisher}getHimHer(){return this.himher}setGender(e){this.gender=e}setManWoman(e){this.manWoman=e}setHeShe(e){this.heshe=e}setHisHer(e){this.hisher=e}setHimHer(e){this.himher=e}}},1324:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Name:()=>r}),a(9977);class r{constructor(e,t,a){this.race=e,this.genderNouns=t,this.firstname="Ernest",this.nickname="Gary",this.lastname="Gygax",this.description="was an American game designer and author best known for co-creating the pioneering role-playing game Dungeons & Dragons (D&D) with Dave Arneson.",this.intro="Ernest Gary Gygax was a legendary figure in the world of tabletop role-playing games. ",this.outfit="Gary Gygax's contributions to the world of gaming are immeasurable, and his legacy continues to influence game designers and enthusiasts around the world. "}getFirstname(){return this.firstname}getLastname(){return this.lastname}getNickname(){return this.nickname}getDescription(){return this.description}setFirstname(e){this.firstname=e}setLastname(e){this.lastname=e}setNickname(e){this.nickname=e}setDescription(e){this.description=e}}},3028:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Race:()=>n});var r=a(9702);class n{constructor(e){this.racesArray=n.raceArray(),this.dndRace=e.homebrew?e.homebrew:e.races?(0,r.getRandomElement)(e.races):n.randomRace(this.racesArray),this.heritage=n.setHeritage(this.racesArray),this.variant=this.dndRace,this.intro="",this.outfit=""}static raceArray(){return["Aarakocra","Aasimar","Bugbear","Centaur","Changeling","Dragonborn","Drow","Dwarf","Elf","Feral Tiefling","Firbolg","Genasi","Gith","Gnome","Goblin","Goliath","Half-Elf","Half Orc","Halfling","Hobgoblin","Human","Khalastar","Kenku","Kobold","Leonin","Lizardfolk","Locathah","Loxodon","Minotaur","Orc","Owlfolk","Rabbitfolk","Satyr","Shifter","Simic Hybrid","Tabaxi","Tiefling","Tortle","Triton","Vedalkan","Verdan","Warforged","Yuan-Ti Pureblood"]}static randomFromArray(e){return e[Math.floor(Math.random()*e.length)]}static randomRace(e){return n.randomFromArray(e)}static setHeritage(e){let t=n.randomRace(e);const a=["Genasi","Yuan-Ti Pureblood","Simic Hybrid"];for(;a.includes(t);)t=n.randomRace(e);return t}static isRaceInRaceArray(e){return n.raceArray().includes(e)}getRace(){return this.dndRace}getHeritage(){return this.heritage}getVariant(){return this.variant}getRaceArray(){return this.racesArray}setRace(e){this.dndRace=e}setHeritage(e){this.heritage=e}setVariant(e){this.variant=e}getOutfit(){return this.outfit}getIntro(){return this.intro}setOutfit(e){this.outfit=e}setIntro(e){this.intro=e}}},428:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Aarakocra:()=>o});var r=a(1324),n=a(5701),i=a(6354),s=a(5066);class o extends r.Name{constructor(e,t,a,r){console.log(r),super(e,t),this.lastname=r.lastname?r.lastname:this._lastname(),this.firstname=r.firstname?r.firstname:"",this.nickname=r.nickname?r.nickname:"",this.description=this._description(e.getRace(),t)}_lastname(){const e=["Aera","Aial","Aur","Deekek","Errk","Heehk","Ikki","Kleeck","Oorr","Ouss","Quaf","Quierk","Salleek","Urreek","Zeed"];return this.lastname=e[Math.floor(Math.random()*e.length)],this.lastname}_description(e,t){return`From below, the ${e} look much like a large bird. \n        Only when ${this.lastname} descends to roost on a branch or walk across the \n        ground does ${t.getHisHer()} humanoid appearance reveal itself`}static mouthReplacer(){const e=["sharp tomia","rounded tomia","bow shaped tomia","heavy lower tomia","ridged tomia","heavy upper tomia","sawtooth serated tomia","thin tomia","downward turned tomia","perfectly proportioned tomia"];return e[Math.floor(Math.random()*e.length)]}static chinReplacer(){const e=["pointy","round","square"],t=e[Math.floor(Math.random()*e.length)],a=["a rather ","quite the","a very defined","a puffed","a very protruding","a bulbous","a very small","a bit of a"];return a[Math.floor(Math.random()*a.length)]+" "+t+" culmen"}static noseReplacer(){let e=Math.floor(100*Math.random())+1;if(e>=1&&e<=24)e="a very generalist, prominent big beak";else if(e>=25&&e<=38)e="a scything upturned beak, small in width but quite long";else if(e>=39&&e<=47)e="an eagles beak, quite raptorial. With a strong sloping curve that prominently protrudes from the face";else if(e>=48&&e<=56){const t=["insect catching","grain eating","Coniferous seed eating"];e=`a snub beak that is common with ${t[Math.floor(Math.random()*t.length)]} birds`}else if(e>=57&&e<=64)e="a very long and sharp beak, thin and pointy, small in height but quite flat, common with aerial fishing birds";else if(e>=65&&e<=68)e='a "Hawk" beak that has similarities with the curved beaks of eagles and other predatory birds. It has a dramatic arched shape';else if(e>=69&&e<=76)e="a perfectly straight beak. It gives this birdfolk an aggressive profile since it is usually seen on scavenging birds";else if(e>=77&&e<=84)e="a dip netting beak, rather big, with a very prominent bottom mandible, like pelicans normally have";else if(e>=85&&e<=91){const t=["filter feeding","pursuit fishing","chiseling"];e=`a thin and flat shaped beak with a short tip, typical for ${t[Math.floor(Math.random()*t.length)]}`}else e>=92&&e<=100&&(e="a bulbous beak, it has a swollen, disproportionate nasal tip, almost like it's too big. Imagine something like a fruit eating toucan");return e}static teethReplacer(){const e=["shiny white","yellow","quite large","rather small","yellow and grey","crooked","lead","tin","copper","steel","cast-iron","iron","metal"],t=e[Math.floor(Math.random()*e.length)],a=n.Material.getMetalType(),r=[`has a ${a} beak`,"has a hard horny tissue at the tip of the beak",`has a ${t} shield-shaped structure on the tip of its beak`,`has a ${t} shield-shaped structure on its beak tip, which spans the entire width of the beak`,`has a ${t} shield-shaped structure on its beak, which is bent at the tip to form a hook`,`has a ${t} shield-shaped structure on its beak tip, which spans the entire width of the beak and bent at the tip to form a hook`,`has a fake colorType, like a prosthetic made of ${i.Verbs.quality()} ${a}`];return r[Math.floor(Math.random()*r.length)]}}(0,s.setClassMapping)("Aarakocra",o)},348:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Aasimar:()=>l});var r=a(1324),n=a(5701),i=a(211),s=a(9702),o=a(5066);class l extends r.Name{constructor(e,t,a,r){super(e,t),e=this.isFallen(e),this.lastname=this._lastname(e,t),this.firstname=r.firstname?r.firstname:this._firstname(t),this.nickname=r.nickname?r.nickname:this.firstname,this.description=this._description(e,t,this.nickname)}isFallen(e){return Math.floor(20*Math.random())+1>10?e="Fallen Aasimar":e}_lastname(e,t){return this.lastname=this._randomLastname(e,t),this.lastname}_randomLastname(e,t){const a=(0,s.getRandomElement)(["Calishite","Chondathan","Damaran","Illuskan","Mulan","Rashemi","Tethyrian","Turami"]),r=(0,s.filterClassMapping)(o.classMapping,["Calishite","Chondathan","Damaran","Illuskan","Mulan","Rashemi","Tethyrian","Turami"])[a];return!(!r&&"function"==typeof r.constructor)&&new r(a,t).getLastname()}_firstname(e){let t;if("male"===e.getGender()){const e=["Aritian","Beltin","Cernan","Cronwier","Eran","Ilamin","Maudril","Okrin","Parant","Tural","Wyran","Zaigan","Hunin","Kyor"];t=e[Math.floor(Math.random()*e.length)]}if("female"===e.getGender()){const e=["Arken","Arsinoe","Davina","Drinma","Imesah","Masozi","Nijena","Niramour","Ondrea","Rhialla","Valtyra","Yasha Nydoorin","Reani"];t=e[Math.floor(Math.random()*e.length)]}return this.firstname=t,t}_description(e,t,a){let r;return r="Fallen Aasimar"===e?l.descriptionFallen(e,t,a):l.descriptionDefault(t,a),r}static descriptionFallen(e,t,a){const r=["black","white"],i=r[Math.floor(Math.random()*r.length)],s=n.Material.getMetalType();return`The ${e} is typically named in accordance with human traditions. ${a} bears the mark of ${t.getHisHer()} \n        fall through many different physical features, like ${t.getHisHer()} \n        hair has a ${s} shine but withered to ${i} \n        and a very gaunt, almost corpse-like appearance`}static descriptionDefault(e,t){const a=n.Material.getMetalType();return`Typically named in accordance with human traditions, ${t} bears the mark of ${e.getHisHer()} \n        celestial touch through many different physical \n        features, like ${e.getHisHer()} hair has a ${a} \n        shine to it with accents of ${n.Material.getMetalType()}`}static eyesReplacer(e,t){const a=`${n.Material.getJewelTone()} toned ${i.Eyes.canSee()}`;if("Fallen Aasimar"===e){const e=["dark","pale muted"];return`${e[Math.floor(Math.random()*e.length)]} ${n.Material.getJewelTone()} toned ${i.Eyes.canSee()}, \n            and dark spots forming under ${t.getHisHer()} eyes`}return a}}(0,o.setClassMapping)("Aasimar",l)},9446:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Bugbear:()=>s});var r=a(1324),n=a(5066),i=a(1026);class s extends r.Name{constructor(e,t,a,r){super(e,t),this.lastname=r.lastname?r.lastname:this._lastname(),this.firstname=new i.Goblin(e,t,a,r).getFirstname(),this.nickname=null,this.description=this._description(e.getRace(),t)}_lastname(){const e=["Khitran","Ghugrir","Vadumkk","Brimkk","Tudrolk","Rograth","Rordonn","Vith","Chrilk","Tharr","Ghogran","Stamkk","Zhonn","Ghurdolk","Stun","Hrodoth","Zirk","Stath","Bromkk","Rizzon"];return e[Math.floor(Math.random()*e.length)]}_description(e,t){return e+"s are hairy goblinoids born for battle and mayhem.They survive by raiding and hunting, but are fond of setting ambushesand fleeing when outmatched"}}(0,n.setClassMapping)("Bugbear",s)},9326:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Centaur:()=>s});var r=a(9702),n=a(1324),i=a(5066);class s extends n.Name{constructor(e,t,a,r){super(e,t),this.lastname=r.lastname?r.lastname:this._lastname(),this.firstname=r.firstname?r.firstname:this._firstname(t),this.nickname=null,this.description=this._description(e.getRace(),t)}_lastname(){let e=["Autumn","Pine","Timber","Crater","Hazel","Aspen","Drift","Bright","Forest","Rock","Oaken","Creek","River","Willow","Earthen","Flood","Fall","Snow","Green","Ridge","Winter","Hill","Storm","Brown","Red","Moss"],t=["sleep","chaser","watcher","shifter","scorn","fighter","chanter","braider","binder","seeker","bringer","rusher","strength","tree","hoof","blade","darter","twister","hold","smirk","watch","petals","charger","borne","prowler","reign"];return e=e[Math.floor(Math.random()*e.length)],t=t[Math.floor(Math.random()*t.length)],e+t}_firstname(e){let t;if("male"===e.getGender()){const e=["Thond","Dezreva","Jelveth","Vigrid","Thoz'ren","Rhoklund","Vrannul","Tos'zid","Ghalrevol","Thez'had","Dwaildir","Vokrih","Gird","Rhin","Dor"];t=e[Math.floor(Math.random()*e.length)]}if("female"===e.getGender()){const e=["Bydran","Zifrin","Phazirin","Dyzlet","Zefnael","Vyfnozen","Lalthag","Phaflet","Lilraeh","Vinroh","Lizhan","Fydath","Shegevan","Phorlosh","Nograr","Melrat","Phazren","Horzer"];t=e[Math.floor(Math.random()*e.length)]}return t}_description(e,t){return"Roamers at heart, "+e+"s love open spaces and the freedom to travel. As much as they can, "+e+"s run. They race the wind,hooves thundering and tails streaming behind them"}static bodySizeReplacer(){const e=["sort of typical giant-sized","common giant sized","characteristically large sized","naturally large sized","typical","more or less standard sized","moderately large sized","sizable","large","quite large","very large","really large","slightly larger","reasonably large","immense","enormous","massive","tall","big","hulking","towering","giant"];return e[Math.floor(Math.random()*e.length)]}static shoesReplacer(e,t){const a=(0,r.getRandomElement)(["one-toed","two-toed","deer","moose","elk","horse","cow","cloven"]),n=(0,r.getRandomElement)(["club","aligned","migrated","negative palmar","laminitic","founder"]);return`This ${e} has ${(0,r.getRandomElement)(["high","low","long toe low heel"])}, ${n} ${a} hooves.`}}(0,i.setClassMapping)("Centaur",s)},5119:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Changeling:()=>s});var r=a(5066),n=a(1324),i=a(9702);class s extends n.Name{constructor(e,t,a,r){super(e,t),this.lastname=r.lastname?r.lastname:this._lastname(),this.firstname=r.firstname?r.firstname:"",this.nickname=null,this.description=this._description(e.getRace(),t)}_lastname(){const e=["B","C","D","F","G","H","J","K","L","M","N","P","Q","R","S","T","V","W","X","Z"],t=["a","e","i","o","u","y","au","ou","oe","ee","aa","ea","eo","ie","ei","ai","oi","ui","uu","ua","uo","oo","ae","io"],a=["b","c","d","f","g","h","k","l","m","n","p","r","s","t","v","w","x","z","ch","rt","ts","kt","st","ts","sk","rx","gs","ks","gz","chs","tk","ps","px","gg","kk","wn","cht","dt"];return e[Math.floor(Math.random()*e.length)]+t[Math.floor(Math.random()*t.length)]+a[Math.floor(Math.random()*a.length)]}_description(e,t){const a=["Passer, a changeling who wishes to fit in with conventional societyand live life in only one form or at least suppress theshape-changing ability to better fit in with the society","Becomer, "+t.getHeShe()+" believes that to be a changeling is topossess many different shapes and often different identities and lives altogether.This becomer takes the concept of a dual life to a whole new degree and successfully lives as several 'different people'","Seeker or 'reality seeker', and is convinced that a great truth exists which only the changelings can discover; "+t.getHeShe()+" suppresses "+t.getHisHer()+" shapechanging abilities and prefers to live or socialize with other changelings"],r=(0,i.getRandomElement)(a);return this.lastname+" is a "+r}static eyesReplacer(){return"large colorless eyes circled by thick black rings"}}(0,r.setClassMapping)("Changeling",s)},7175:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Dragonborn:()=>i});var r=a(5066),n=a(1324);class i extends n.Name{constructor(e,t,a,r){super(e,t),this.lastname=r.lastname?r.lastname:this._lastname(),this.firstname=r.firstname?r.firstname:this._firstname(t),this.nickname=null,this.description=this._description(e.getRace(),t)}_lastname(){const e=["Clethtinthiallor","Daardendrian","Delmirev","Drachedandion","Fenkenkabradon","Kepeshkmolik","Kerrhylon","Kimbatuul","Linxakasendalor","Myastan","Nemmonis","Norixius","Ophinshtalajiir","Prexijandilin","Shestendeliath","Turnuroth","Verthisathurgiesh","Yarjerit"];return e[Math.floor(Math.random()*e.length)]}_firstname(e){let t;if("male"===e.getGender()){const e=["Arjhan","Balasar","Bharash","Donaar","Ghesh","Heskan","Kriv","Medrash","Mehen","Nadarr","Pandjed","Patrin","Rhogar","Shamash","Shedinn","Tarhun","Torinn"];t=e[Math.floor(Math.random()*e.length)]}if("female"===e.getGender()){const e=["Akra","Biri","Daar","Farideh","Harann","Havilar","Jheri","Kava","Korinn","Mishann","Nala","Perra","Raiann","Sora","Surina","Thava","Uadjit"];t=e[Math.floor(Math.random()*e.length)]}return t}_description(e,t){return`${e} look very much like dragons standing erect\n    in humanoid form, though ${this.firstname} lack wings or a tail. The clans ancestry\n    gives ${this.lastname} a `+i.generateAncestry()}static generateAncestry(){const e=["Chromatic","Gem","Metallic"],t=e[Math.floor(Math.random()*e.length)];let a="";if("Chromatic"===t){const e=["Black","Blue","Green","Red","White"];a=e[Math.floor(Math.random()*e.length)]}if("Gem"===t){const e=["Amethyst","Crystal","Emerald","Sapphire","Topaz"];a=e[Math.floor(Math.random()*e.length)]}if("Metallic"===t){const e=["Brass","Bronze","Copper","Gold","Silver"];a=e[Math.floor(Math.random()*e.length)]}return t+" "+a}}(0,r.setClassMapping)("Dragonborn",i)},8826:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Drow:()=>i});var r=a(5066),n=a(1324);class i extends n.Name{constructor(e,t,a,r){super(e,t),this.lastname=r.lastname?r.lastname:this._lastname(),this.firstname=r.firstname?r.firstname:this.firstname=this._firstname(t),this.nickname=r.nickname?r.nickname:this._nickname(),this.description=this._description(e.getRace(),t)}_lastname(){const e=["Duskryn","Druu'giir","Hunzrin","Ixit'shii","Higure","Ignin'rl","Zolond","Nurindyn","Milithor","Takandoys","T'orgh"," Despana","Symryvvin","Ousstyl","Godeep","Nurbonnis","Freth","Pharn","Auvryndar","Hekar","Maivert","Coloara"];return e[Math.floor(Math.random()*e.length)]}_firstname(e){let t;if("male"===e.getGender()){const e=["Abban","Alur","Araj","Avinsin","Bol","Brorn","Dobluth","Duk-tak","Duvall","Elgg","Elgghinn","Elgg-hor","Faern","Honglath","Jabbuk","Khal'abbil","Kyorlin","Noamuth","Ogglin","Oloth","Parzdiamo","Phindar","Quarthen","Ragar","Ryld","Sargtlin","Ssinssrigg","Thalack","Uln'hyrr","Ultrin","Sargtlin","Ultrinnan","Veldrin","Velkyn","Zedrinset","Zhaunil","Z'ress"];t=e[Math.floor(Math.random()*e.length)]}if("female"===e.getGender()){const e=["Abbil","Aluve","Asanque","Belaern","Brorna","Bwael","Crinti","Draada","Elamshin","Elendar","Ilareth","Ilhar","Ilharess","Jivvin Quui'elghinn","Malla","Mrimm","Orthea","Plynn","Qu'uente","Qu'lith","Quarvalsharess","Sarn","Sreen","Streea","Streeaka","Ul-Ilindith","Ultrine","Valsharess","Velve","Vidrinath","Yathrin","Yathtallar"];t=e[Math.floor(Math.random()*e.length)]}return t}_description(e,t){return`<a href="https://forgottenrealms.fandom.com/wiki/Drow_dictionary">${this.firstname}</a> \n        hails from a dark-skinned sub-race of elves that predominantly live in the Underdark`}}(0,r.setClassMapping)("Drow",i)},9858:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Dwarf:()=>s});var r=a(5066),n=a(1324),i=a(9702);class s extends n.Name{constructor(e,t,a,r){super(e,t),this.lastname=r.lastname?r.lastname:this._lastname(),this.firstname=r.firstname?r.firstname:this._firstname(t),this.nickname=null,this.description=this._description()}_lastname(){const e=["Balderk","Battlehammer","Brawnanvil","Dankil","Fireforge","Frostbeard","Gorunn","Holderhek","Ironfist","Loderr","Lutgehr","Rumnaheim","Strakeln","Torunn","Ungart"];return e[Math.floor(Math.random()*e.length)]}_firstname(e){let t;if("male"===e.getGender()){const e=["Adrik","Alberich","Baern","Barendd","Brottor","Bruenor","Dain","Darrak","Eberk","Einkill","Fargrim","Flint","Gardain","Harbek","Kildrak","Oskar","Rangrim","Rurik","Taklinn","Thoradin","Thorin","Tordek","Travok","Ulfgar","Veit","Vondal","Orsik","Delg","Morgran","Traubon"];t=e[Math.floor(Math.random()*e.length)]}if("female"===e.getGender()){const e=["Amber","Artin","Audhild","Bardryn","Dagnal","Diesa","Eldeth","Falkrunn","Finellen","Gunnloda","Gurdis","Helja","Hlin","Kathra","Krystrid","Ilde","Liftrasa","Mardred","Riswynn","Sannl","Torbera","Torgga","Vistra"];t=e[Math.floor(Math.random()*e.length)]}return t}_description(e){const t=(0,i.getRandomElement)(["a skilled warrior","a miner","a stone worker","a worker of metal"]);return`Bold, hardy and shorter then average humans, ${this.firstname} is known as ${t}`}static bodySizeReplacer(){return(0,i.getRandomElement)(["very small","quite small","small","small sized","rather tiny","below middle sized","really small","slightly smaller","rather small","reasonably small","tiny","characteristically tiny sized","naturally small sized"])}}(0,r.setClassMapping)("Dwarf",s)},1582:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Elf:()=>s});var r=a(5066),n=a(1324),i=a(9702);class s extends n.Name{constructor(e,t,a,r){super(e,t),"Elf"===e.getRace()?e.setRace(s._subclass()):e.setVariant(s._subclass()),this.lastname=r.lastname?r.lastname:this._lastname(),this.firstname=r.firstname?r.firstname:this._firstname(t),this.nickname=r.nickname?r.nickname:this._nickname(),this.description=this._description(e.getRace(),t),"Drow"===e.getRace()&&this._drow(e,t,a,r)}_lastname(){const e=["Amakiir","Gemflower","Amastacia","Starflower","Galanodel","Moonwhisper","Holimion","Diamonddew","Ilphelkiir","Gemblossom","Liadon","Silverfrond","Meliamne","Oakenheel","Naïlo","Nightbreeze","Siannodel","Moonbrook","Xiloscient","Goldpetal"];return e[Math.floor(Math.random()*e.length)]}_firstname(e){let t;if("male"===e.getGender()){const e=["Adran","Aelar","Aramil","Arannis","Aust","Beiro","Berrian","Carric","Enialis","Erdan","Erevan","Galinndan","Hadarai","Heian","Himo","Immeral","Ivellios","Laucian","Mindartis","Paelias","Peren","Quarion","Riardon","Rolen","Soveliss","Thamior","Tharivol","Theren","Varis"];t=e[Math.floor(Math.random()*e.length)]}if("female"===e.getGender()){const e=["Adrie","Althaea","Anastrianna","Andraste","Antinua","Bethrynna","Birel","Caelynn","Drusilia","Enna","Felosial","Ielenia","Jelenneth","Keyleth","Leshanna","Lia","Meriele","Mialee","Naivara","Quelenna","Quillathe","Sariel","Shanairra","Shava","Silaqui","Theirastra","Thia","Vadania","Valanthe","Xanaphia"];t=e[Math.floor(Math.random()*e.length)]}return t}_nickname(){const e=["Ara","Bryn","Del","Eryn","Faen","Innil","Lael","Mella","Naill","Naeris","Phann","Rael","Rinn","Sai","Syllin","Thia","Vall"];return e[Math.floor(Math.random()*e.length)]}_description(e,t){return`Any ${e} comes from a magical people of otherworldly grace, \n        living in the world but not entirely part of it`}static _subclass(e){return(0,i.getRandomElement)(["High Elf","Wood Elf","Eladrin Elf","Drow"])}_drow(e,t,a,n){e.setRace("Drow");const s=(0,i.filterClassMapping)(r.classMapping,e.getRace())[e.getRace()];return!(!s&&"function"==typeof s.constructor)&&new s(e,t,a,n)}}(0,r.setClassMapping)("Elf",s)},5066:(e,t,a)=>{"use strict";a.r(t),a.d(t,{classMapping:()=>r,setClassMapping:()=>n});const r={Calishite:null,Chondathan:null,Damaran:null,Illuskan:null,Mulan:null,Rashemi:null,Shou:null,Tethyrian:null,Turami:null,Human:null,Aarakocra:null,Aasimar:null,Bugbear:null,Centaur:null,Changeling:null,Dragonborn:null,Drow:null,Dwarf:null,Elf:null,Feraltiefling:null,Firbolg:null,Genasi:null,Gith:null,Gnome:null,Goblin:null,Goliath:null,Halfelf:null,Halfling:null,Halforc:null,Hobgoblin:null,Kenku:null,Khalastar:null,Kobold:null,Leonin:null,Lizardfolk:null,Loxodon:null,Minotaur:null,Orc:null,Owlfolk:null,Rabbitfolk:null,Satyr:null,Shifter:null,Simichybrid:null,Vedalkan:null,Tabaxi:null,Tiefling:null,Tortle:null,Triton:null,Warforged:null,Yuantipureblood:null};function n(e,t){r[e]=t}},9977:(e,t,a)=>{"use strict";a.r(t),a.d(t,{RaceFactory:()=>i,convertRaceName:()=>s,selectRandomRace:()=>o});var r=a(244),n=a(3028);class i{static createRace(e,t,a,n){let i=s(e.getRace());if(!r[i]){let l=o();return l=s(l),console.warn(`Race ${i} does not exist. Using a default race.`),e.setRace(n.homebrew),new r[l](e,t,a,n)}return new r[i](e,t,a,n)}}function s(e){let t=(e=e.toLowerCase()).replace(/[^a-zA-Z0-9 ]/g,"").replace(/\s+/g,"");return t.charAt(0).toUpperCase()+t.slice(1)}function o(){let e=n.Race.raceArray();return e=n.Race.randomFromArray(e),e}},9702:(e,t,a)=>{"use strict";function r(e){return e[Math.floor(Math.random()*e.length)]}function n(e,t){return Object.keys(e).filter((e=>t.includes(e))).reduce(((t,a)=>(t[a]=e[a],t)),{})}function i(e){for(let t=e.length-1;t>0;t--){const a=Math.floor(Math.random()*(t+1));[e[t],e[a]]=[e[a],e[t]]}return e}function s(e){return e&&"string"==typeof e?e.charAt(0).toUpperCase()+e.slice(1):(console.error("Invalid input: A valid string is required"),"")}function o(e){return e.toLowerCase().replace(/[-\s]/g,"")}a.r(t),a.d(t,{filterClassMapping:()=>n,getRandomElement:()=>r,lowercase:()=>o,shuffleArray:()=>i,ucFirst:()=>s})},3631:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Feraltiefling:()=>s});var r=a(5066),n=a(1324),i=a(9798);class s extends n.Name{constructor(e,t,a,r){super(e,t);const n=new i.Tiefling(e,t,a,r);this.lastname=r.lastname?r.lastname:n.getLastname(),this.firstname=r.firstname?r.firstname:n.getFirstname(),this.nickname=r.nickname?r.nickname:n.getNickname(),this.description=n.getDescription()}}(0,r.setClassMapping)("Feraltiefling",s)},7164:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Firbolg:()=>s});var r=a(5066),n=a(1324),i=a(1582);class s extends n.Name{constructor(e,t,a,r){super(e,t);const n=new i.Elf(e,t,a,r);this.lastname=r.lastname?r.lastname:n.getLastname(),this.firstname=r.firstname?r.firstname:n.getFirstname(),this.firstname=r.firstname?r.firstname:this._nickname(),this.description=this._description(e.getRace(),t)}_nickname(){const e=["Bearkiller","Dawncaller","Fearless","Flintfinder","Horncarver","Keeneye","Lonehunter","Longleaper","Rootsmasher","Skywatcher","Steadyhand","Threadtwister","Twice-Orphaned","Twistedlimb","Wordpainter"];return e[Math.floor(Math.random()*e.length)]}_description(e,t){return`${e} don't really use names, the concept of it is peculiar to them. \n        They will take elven names when dealing with outsiders however, \n        and they'll also use nicknames they might be given by others. \n        Everything else in their lives is usually referred to by their actions. The ${e} is nicknamed ${this.nickname}`}static bodySizeReplacer(){const e=["sort of typical giant-sized","common giant sized","characteristically large sized","naturally large sized","typical","more or less standard sized","moderately large sized","sizable","large","quite large","very large","really large","slightly larger","reasonably large","immense","enormous","massive","tall","big","hulking","towering","giant"];return e[Math.floor(Math.random()*e.length)]}}(0,r.setClassMapping)("Firbolg",s)},9389:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Genasi:()=>o});var r=a(5066),n=a(1324),i=a(9702),s=a(1582);class o extends n.Name{constructor(e,t,a,r){super(e,t);const n=e,i=new s.Elf(e,t,a,r);this._variation(e),this.lastname=r.lastname?r.lastname:i.getLastname(),this.nickname=r.nickname?r.nickname:this._nickname(n.getVariant()),this.firstname=this._firstname(n.getVariant()),e.setRace(n.getRace()),this._variation(e),this.description=this._description(e,t)}_variation(e){e.setVariant((0,i.getRandomElement)(["Fire Genasi","Air Genasi","Earth Genasi","Water Genasi"]))}_firstname(e){return" the "+e+" "+this.nickname}_nickname(e){let t;switch(e){case"Fire Genasi":const a=["Flame","Ember","Blaze","Flare","Flash","Wildfire","Inferno","Bonfire","Tinder","Scorching","Burn"];t=a[Math.floor(Math.random()*a.length)];break;case"Air Genasi":const r=["Breath","Breeze","Draft","Sky","Empyrean","Azure","Whiff","Zephyr","Waft","Heavens","Ozone","Welkin"];t=r[Math.floor(Math.random()*r.length)];break;case"Earth Genasi":const n=["Onyx","Dust","Terra","Terrane","Mold","Clay","Raven","Obsidian","Sable","Slate","Coal","Stygian","Melanoid"];t=n[Math.floor(Math.random()*n.length)];break;case"Water Genasi":const i=["Wave","Crest","Flood","Stream","Surge","Tide","Deluge","Niagara","Torrent","Downpour","Drencher","Flow","Aqua-pura"];t=i[Math.floor(Math.random()*i.length)];break;default:console.warn(`SubRace ${e} does not have a nickname list.`)}return t}_description(e,t){return`However ${t.getHeShe()} assumed the distinctive name ${this.nickname} to capture \n        ${t.getHisHer()} ${e.getRace()} heritage as ${this.nickname} is born and raised \n        in a ${e.getHeritage()} society`}}(0,r.setClassMapping)("Genasi",o)},4727:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Gith:()=>s});var r=a(5066),n=a(1324),i=a(9702);class s extends n.Name{constructor(e,t,a,r){super(e,t),this._variation(e),this.firstname=r.firstname?r.firstname:this._firstname(e.getVariant(),t),this.nickname=r.nickname?r.nickname:this.firstname,this.lastname=e.getVariant(),this.description=this._description(e.getVariant(),t)}_variation(e){e.setVariant((0,i.getRandomElement)(["Githyanki","Githzerai","Githvyrik"]))}_firstname(e,t){const a=Math.floor(2*Math.random())+1;let r;const n=t.getGender(),i="Githzerai"===e||"Githvyrik"===e&&2===a,s=e=>e[Math.floor(Math.random()*e.length)];if("Githyanki"===e||"Githvyrik"===e&&1===a){const e="male"===n?["Ma","Va","Na","U","Ze","Eli","Ga","Ja","Kar","Ly","Quo","Ris","Tro","Xa","Qu","As"]:["Ma","Va","Na","U","Ze","A","Fe","Je","Pa","Quo","Va","Yes","Za"],t=["du","za","ra","nai","nu","a","i","k","mo","mo"],a=["rai","rin","mon","ru","rik","th","doc","us","dain","nas","an","os","das","dan"];switch(Math.floor(4*Math.random())+1){case 1:r=`${s(e)}${s(t)}${s(a)}`;break;case 2:r=`${s(e)}${s(a)}${s(t)}`;break;case 3:r=`${s(e)}${s(t)}${s(t)}`;break;default:r=`${s(e)}${s(a)}${s(a)}`}}if(i){const e="male"===n?["Ma","Va","Na","U","Ze","Sheo","D","Duu","Fe","Hu","Ka","Muu","Nu","Xo","Sh"]:["Ma","Va","Na","U","Ze","Ad","A","El","Ez","Im","I","Ja","Lo","Uw","Vi"],t=["du","za","ra","nai","nu","go","a","r","rz","l","ra"],a=["rai","rin","mon","ru","rik","rath","k","th","m","la","g","kk"];switch(Math.floor(3*Math.random())+1){case 1:r=`${s(e)}${s(t)}${s(a)}`;break;case 2:r=`${s(e)}${s(a)}`;break;default:r=`${s(e)}${s(t)}`}}return r}_description(e,t){let a;switch(e){case"Githyanki":a=`The ${e} are motivated by revenge and are convinced that they deserve to take \n                whatever they want from the worlds they travel. The ${e} use history and metaphors \n                pertaining to war as well as battle and are named after grand warriors, in this case: ${this.nickname}`;break;case"Githzerai":a=`The ${e} believe that the path to an enlightened civilization lays in seclusion, \n                not conflict. The ${e} use history and metaphors pertaining to lore as well as learning and are \n                named after spiritual leaders and philosophers, in this case: ${this.nickname}`;break;default:a=`The ${e} believe the gods are nothing compared to the utter randomness and enormity\n                 of the universe. The only order and predictability that the universe has to offer the ${e} \n                 are its perfect mathematics. the ${e}, they do not identify as either Githyanki or Githzerai but\n                  are named based on mathematics and chaos just like the arcane and psionic powers from Vhostym, \n                  also known as Sojourner, in this case: ${this.nickname}`}const r=["greenish","brownish"],n=r[Math.floor(Math.random()*r.length)];return a+=`. ${this.nickname} looks emaciated, has a pale yellow skin with ${n} tones, and a long, angular skull with pointed ears`,a}}(0,r.setClassMapping)("Gith",s)},3010:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Gnome:()=>s});var r=a(5066),n=a(1324),i=a(9702);class s extends n.Name{constructor(e,t,a,r){super(e,t,a),this._variation(e),this._ageReplacer(e,a),this.nickname=r.nickname?r.nickname:this._nickname(),this.lastname=r.lastname?r.lastname:this._lastname(t),this.firstname=r.firstname?r.firstname:this._firstname(t),this.description=this._description(e,t)}_variation(e){e.setVariant((0,i.getRandomElement)(["Forest Gnome","Rock Gnome","Deep Gnome"]))}_lastname(e){const t=["Beren","Daergel","Folkor","Garrick","Nackle","Murnig","Ningel","Raulnor","Scheppen","Timbers","Turen"];return`${t[Math.floor(Math.random()*t.length)]} but ${e.getHeShe()} is called ${this.nickname}`}_firstname(e){const t=e=>{let t=[];for(let a=0;a<6;a++){let a=Math.floor(Math.random()*e.length);for(;t.includes(a);)a=Math.floor(Math.random()*e.length);t.push(a)}return e[t[0]]+" "+e[t[1]]+" "+e[t[2]]+" "+e[t[3]]+" "+e[t[4]]+" "+e[t[5]]+" "},a=e.getGender();return"male"===a?t(["Alston","Alvyn","Boddynock","Brocc","Burgell","Dimble","Eldon","Erky","Fonkin","Frug","Gerbo","Gimble","Glim","Jebeddo","Kellen","Namfoodle","Orryn","Roondar","Seebo","Sindri","Warryn","Wrenn","Zook"]):"female"===a?t(["Bimpnottin","Breena","Caramip","Carlin","Donella","Duvamil","Ella","Ellyjobell","Ellywick","Lilli","Loopmottin","Lorilla","Mardnab","Nissa","Nyx","Oda","Orla","Roywyn","Shamil","Tana","Waywocket","Zanna"]):void 0}_nickname(){const e=["Aleslosh","Ashhearth","Badger","Cloak","Doublelock","Filchbatter","Fnipper","Ku","Nim","Oneshoe","Pock","Sparklegem","Stumbleduck"];return e[Math.floor(Math.random()*e.length)]}_description(e,t){return`The ${e.getVariant()} ’s energy and \n            enthusiasm for living shines \n            through every inch of ${t.getHisHer()} tiny body`}_ageReplacer(e,t){"Deep Gnome"===e.getVariant()&&t.setAge(Math.floor(237*Math.random())+14)}static bodySizeReplacer(){const e=["very small","quite small","small","small sized","rather tiny","below middle sized","really small","slightly smaller","rather small","reasonably small","tiny","characteristically tiny sized","naturally small sized"];return e[Math.floor(Math.random()*e.length)]}}(0,r.setClassMapping)("Gnome",s)},1026:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Goblin:()=>i});var r=a(5066),n=a(1324);class i extends n.Name{constructor(e,t,a,r){super(e,t),this.lastname=r.lastname?r.lastname:this._lastname(),this.firstname=r.firstname?r.firstname:this._firstname(t),this.nickname=r.nickname?r.nickname:this._nickname(),this.description=this._description(e,t)}_lastname(){const e=["of Crazy Arrow Tribe","of Salty Foot Clan","Mintybreath","Trinketmake","of Smelly Hill Tribe","Horseride","Bignose","of Giant Crow tribe","Dungrake","Manychild","Onebrow","Whitetooth","Woodleg","Highprofit","Smalleye"];return e[Math.floor(Math.random()*e.length)]}_firstname(e){let t;if("male"===e.getGender()){const e=["Driekol","Greerkilx","Brabtygz","Glevzaagz","Lognerk","Xasb","Jykeegs","Craang","Krart","Xat","Oz","Creld","Sriogz","Fiolx"];t=e[Math.floor(Math.random()*e.length)]}if("female"===e.getGender()){const e=["Kuqi","Enxa","Flihisz","Depolm","Nunoilee","Noxea","Frez","Qeassa","Olk","Eagansa","Srokkaax","Gralbianq","Hoq","Gnaalsia","Pryhxa"];t=e[Math.floor(Math.random()*e.length)]}return t}_nickname(){const e=["Snail","Weak","Flat","Wide","Ugly","Oaf","Frog","Grub","Brain","Bite","Mud","Meek","Snot","Pig","Worm","Dull","Limp","Owl","Numb","Murk","Lump"],t=["brain","flab","ear","gut","head","face","arm","mush","size","feet","teeth","mud","mouth","cheek","knuckle","ball","finger"];return e[Math.floor(Math.random()*e.length)]+t[Math.floor(Math.random()*t.length)]}_description(e,t){return`The fat faced ${this.firstname} is known as ${this.nickname}.\n        Pointy ears, a broad nose, a sloped back forehead and small sharp fangs,\n        along with a crouched posture, ${this.nickname} is a ${e.getRace()}\n        for sure`}static bodySizeReplacer(){const e=["very small","quite small","small","small sized","rather tiny","below middle sized","really small","slightly smaller","rather small","reasonably small","tiny","characteristically tiny sized","naturally small sized"];return e[Math.floor(Math.random()*e.length)]}}(0,r.setClassMapping)("Goblin",i)},1680:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Goliath:()=>i});var r=a(5066),n=a(1324);class i extends n.Name{constructor(e,t,a,r){super(e,t),this.lastname=r.lastname?r.lastname:this._lastname(),this.firstname=r.firstname?r.firstname:this._firstname(),this.nickname=r.nickname?r.nickname:this._nickname(),this.description=this._description(e.getRace(),t)}_lastname(){const e=["Anakalathai","Elanithino","Gathakanathi","Kalagiano","Katho-Olavi","Kolae-Gileana","Ogolakanu","Thuliaga","Thunukalathi","Vaimei-Laga"];return e[Math.floor(Math.random()*e.length)]}_firstname(){let e=["Aukan","Eglath","Gae-Al","Gauthak","Ilikan","Keothi","Kuori","Lo-Kag","Manneo","Maveith","Nalla","Orilo","Paavu","Pethani","Thalai","Thotham","Uthal","Vaunea","Vimak"];return e[Math.floor(Math.random()*e.length)]}_nickname(){const e=["Bearkiller","Dawncaller","Fearless","Flintfinder","Horncarver","Keeneye","Lonehunter","Longleaper","Rootsmasher","Skywatcher","Steadyhand","Threadtwister","Twice-Orphaned","Twistedlimb","Wordpainter"];return e[Math.floor(Math.random()*e.length)]}_description(e,t){return`Every ${e} has a birth name assigned by the newborn’s mother and father: ${this.nickname}.\n        A nickname assigned by the tribal chief: ${this.firstname}, and a family or clan name: ${this.lastname}.\n        ${this.firstname}’s nickname is a description that can change on the whim of ${t.getHisHer()} \n        chieftain or tribal elder. It refers to a notable deed, either a success or failure, \n        committed by ${this.nickname}. ${e}s present all three names when identifying themselves, \n        in the order of birth name, nickname, and clan name. \n        In casual conversation ${t.getHeShe()} is called ${this.firstname}`}static bodySizeReplacer(){const e=["sort of typical giant-sized","common giant sized","characteristically large sized","naturally large sized","typical","more or less standard sized","moderately large sized","sizable","large","quite large","very large","really large","slightly larger","reasonably large","immense","enormous","massive","tall","big","hulking","towering","giant"];return e[Math.floor(Math.random()*e.length)]}}(0,r.setClassMapping)("Goliath",i)},1498:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Halfelf:()=>l});var r=a(5066),n=a(1324),i=a(9702),s=a(5192),o=a(1582);class l extends n.Name{constructor(e,t,a,r){super(e,t,a),this._variation(e);const n=e.getVariant();this._ageReplacer(e,a);const i=this._biography(n,e,t);this.lastname=r.lastname?r.lastname:i.getLastname(),this.firstname=r.firstname?r.firstname:i.getFirstname(t),this.nickname=r.nickname?r.nickname:i.getNickname(),this.description=this._description(e,t)}_biography(e,t,a){let r;return"Human"===e&&(r=new s.Human(t,a)),"Elf"===e&&(r=new o.Elf(t,a)),r}_variation(e){e.setVariant((0,i.getRandomElement)(["Human","Elf"]))}_ageReplacer(e,t){t.setAge(Math.floor(167*Math.random())+14)}_description(e,t){return`Walking in two worlds but truly belonging to neither, a ${e.getVariant()} ${e.getRace()} \n        combines what some say are the best qualities of their elf and human\n        parents: human curiosity, inventiveness, and ambition tempered by the\n        refined senses, love of nature, and artistic tastes of the elves. \n        A ${e.getRace()} uses either human or elven naming conventions, \n        as if to emphasize that they don’t really fit in to either society.\n        A ${e.getRace()} raised among humans are often given elven names,\n        and those raised among elves often take human names`}}(0,r.setClassMapping)("Halfelf",l)},3468:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Halfling:()=>s});var r=a(5066),n=a(1324),i=a(9702);class s extends n.Name{constructor(e,t,a,r){super(e,t),this._variation(e),this.lastname=r.lastname?r.lastname:this._lastname(),this.firstname=r.firstname?r.firstname:this._firstname(t),this.nickname=null,this.description=this._description(e,t)}_variation(e){e.setVariant((0,i.getRandomElement)(["Lightfoot Halfling","Stout Halfling"]))}_lastname(){const e=["Brushgather","Goodbarrel","Greenbottle","High-hill","Hilltopple","Leagallow","Tealeaf","Thorngage","Tosscobble","Underbough"];return e[Math.floor(Math.random()*e.length)]}_firstname(e){let t;if("male"===e.getGender()){const e=["Alton","Ander","Cade","Corrin","Eldon","Errich","Finnan","Garret","Lindal","Lyle","Merric","Milo","Osborn","Perrin","Reed","Roscoe","Wellby"];t=e[Math.floor(Math.random()*e.length)]}if("female"===e.getGender()){const e=["Andry","Bree","Callie","Cora","Euphemia","Jillian","Kithri","Lavinia","Lidda","Merla","Nedda","Paela","Portia","Seraphina","Shaena","Trym","Vani","Verna","Reed"];t=e[Math.floor(Math.random()*e.length)]}return t}_description(e,t){return`${e.getVariant()}s are an affable and cheerful people.\n    They cherish the bonds of family and friendship as well as the\n    comforts of hearth and home, harboring few dreams of gold or glory`}static bodySizeReplacer(){const e=["very small","quite small","small","small sized","rather tiny","below middle sized","really small","slightly smaller","rather small","reasonably small","tiny","characteristically tiny sized","naturally small sized"];return e[Math.floor(Math.random()*e.length)]}}(0,r.setClassMapping)("Halfling",s)},5866:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Halforc:()=>i});var r=a(5066),n=a(1324);class i extends n.Name{constructor(e,t,a,r){super(e,t),this.lastname=r.lastname?r.lastname:this._lastname(t),this.firstname=r.firstname?r.firstname:"",this.nickname=null,this.description=this._description(e.getRace(),t)}_lastname(e){let t;if("male"===e.getGender()){const e=["Dench","Feng","Gell","Henk","Holg","Imsh","Keth","Krusk","Mhurren","Ront","Shump","Thokk"];t=e[Math.floor(Math.random()*e.length)]}if("female"===e.getGender()){const e=["Baggi","Emen","Engong","Kansif","Myev","Neega","Ovak","Ownka","Shautha","Sutha","Vola","Volen","Yevelda"];t=e[Math.floor(Math.random()*e.length)]}return t}_description(e,t){return`${this.lastname}s’ grayish pigmentation, sloping foreheads, jutting jaws, prominent teeth, \n        and towering build makes ${t.getHisHer()} orcish heritage plain for all to see`}}(0,r.setClassMapping)("Halforc",i)},6811:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Hobgoblin:()=>i});var r=a(5066),n=a(1324);class i extends n.Name{constructor(e,t,a,r){super(e,t),this.lastname=r.lastname?r.lastname:this._lastname(),this.firstname=r.firstname?r.firstname:this._firstname(),this.nickname=r.nickname?r.nickname:this._nickname(),this.description=this._description()}_lastname(){const e=["Skin Flayers","Flesh Renders","Leg Choppers","Marrow Suckers","Eye Rippers","Skull Smashers","Slow Killers","Gnawers","Cheek Reapers","Gut Jabbers","Tribe Kaknec","Tribe Raknorz","Tribe Gagruc","Tribe Klulzek","Tribe Nokorz","Tribe Rharz","Tribe Glorbal","Tribe Gavlan"];return" of the "+e[Math.floor(Math.random()*e.length)]}_firstname(e){let t;const a=["Nar","Lorz Crash","Mog","Kundod","Dognerz","Lor Stalk","Khozrug","Klaruk Bark","Avon Rend","Rhalzen ","Klalvarg","Ekkek ","Lokvovod ","Vrurkozol ","Lerz ","Druzol","Zondud","Nokag","Grodral","Drorag","Drolvrak"];return t=a[Math.floor(Math.random()*a.length)],t}_nickname(){const e=["The Dagger","Whack","Crash","Stunt","Revel","The Rotten","Retch","The Bold","Rush","Jolt","Grin","The Brute","The Red","The Corrupt","Glare","The Monster","Lash","Lurch","The Skeleton","The Loud"];return e[Math.floor(Math.random()*e.length)]}_description(){return`The large goblinoid ${this.firstname} is known as ${this.nickname}`}}(0,r.setClassMapping)("Hobgoblin",i)},2647:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Calishite:()=>i});var r=a(1324),n=a(5066);class i extends r.Name{constructor(e,t){super(e,t),this.lastname=i._lastname(),this.firstname=i._firstname(t),this.nickname=this.firstname,this.description=i._description(e,t)}static _lastname(){const e=["Basha","Dumein","Jassan","Khalid","Mostana","Pashar","Rein"];return e[Math.floor(Math.random()*e.length)]}static _firstname(e){let t;if("male"===e.getGender()){const e=["Aseir","Bardeid","Haseid","Khemed","Mehmen","Sudeiman","Zasheir"];t=e[Math.floor(Math.random()*e.length)]}if("female"===e.getGender()){const e=["Atala","Ceidil","Hama","Jasmal","Meilil","Seipora","Yasheira","Zasheida"];t=e[Math.floor(Math.random()*e.length)]}return t}static _description(e,t){return"Shorter and slighter in build than most other humans, Calishites have dusky brown skin, hair, and eyes. They’re found primarily in southwest Faerûn."}}(0,n.setClassMapping)("Calishite",i)},1041:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Chondathan:()=>i});var r=a(1324),n=a(5066);class i extends r.Name{constructor(e,t){super(e,t),this.lastname=i._lastname(),this.firstname=i._firstname(t),this.nickname=this.firstname,this.description=i._description(e,t)}static _lastname(){const e=["Amblecrown","Buckman","Dundragon","Evenwood","Greycastle","Tallstag"];return e[Math.floor(Math.random()*e.length)]}static _firstname(e){let t;if("male"===e.getGender()){const e=["Darvin","Dorn","Evendur","Gorstag","Grim","Helm","Malark","Morn","Randal","Stedd"];t=e[Math.floor(Math.random()*e.length)]}if("female"===e.getGender()){const e=["Arveene","Esvele","Jhessail","Kerri","Lureene","Miri","Rowan","Shandri","Tessele"];t=e[Math.floor(Math.random()*e.length)]}return t}static _description(e,t){return"Chondatans are slender, tawny-skinned folk with brown hair that ranges from almost blond to almost black. Most are tall and have green or brown eyes, but these traits are hardly universal. Humans of Chondathan descent dominate the central lands of Faerûn, around the Inner Sea."}}(0,n.setClassMapping)("Chondathan",i)},7185:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Damaran:()=>i});var r=a(1324),n=a(5066);class i extends r.Name{constructor(e,t){super(e,t),this.lastname=i._lastname(),this.firstname=i._firstname(t),this.nickname=this.firstname,this.description=i._description(e,t)}static _lastname(){const e=["Bersk","Chernin","Dotsk","Kulenov","Marsk","Nemetsk","Shemov","Starag"];return e[Math.floor(Math.random()*e.length)]}static _firstname(e){let t;if("male"===e.getGender()){const e=["Bor","Fodel","Glar","Grigor","Igan","Ivor","Kosef","Mival","Orel","Pavel","Sergor"];t=e[Math.floor(Math.random()*e.length)]}if("female"===e.getGender()){const e=["Alethra","Kara","Katernin","Mara","Natali","Olma","Tana","Zora"];t=e[Math.floor(Math.random()*e.length)]}return t}static _description(e,t){return"Found primarily in the northwest of Faerûn, Damarans are of moderate height and build, with skin hues ranging from tawny to fair. Their hair is usually brown or black, and their eye color varies widely, though brown is most common."}}(0,n.setClassMapping)("Damaran",i)},5192:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Human:()=>i});var r=a(1324),n=a(5066);class i extends r.Name{constructor(e,t){super(e,t),e.setVariant(i.randomHumanType());let a=e.getVariant();a=n.classMapping[a];const r=new a(e,t);this.lastname=r.getLastname(),this.firstname=r.getFirstname(t),this.nickname=r.getNickname(),this.description=r.getDescription(e,t)}static randomHumanType(){const e=["Calishite","Chondathan","Damaran","Illuskan","Mulan","Rashemi","Shou","Tethyrian","Turami"];return e[Math.floor(Math.random()*e.length)]}}(0,n.setClassMapping)("Human",i)},5750:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Illuskan:()=>i});var r=a(1324),n=a(5066);a(7185);class i extends r.Name{constructor(e,t){super(e,t),this.lastname=i._lastname(),this.firstname=i._firstname(t),this.nickname=this.firstname,this.description=i._description(e,t)}static _lastname(){const e=["Brightwood","Helder","Hornraven","Lackman","Stormwind","Windrivver"];return e[Math.floor(Math.random()*e.length)]}static _firstname(e){let t;if("male"===e.getGender()){const e=["Ander","Blath","Bran","Frath","Geth","Lander","Luth","Malcer","Stor","Taman","Urth"];t=e[Math.floor(Math.random()*e.length)]}if("female"===e.getGender()){const e=["Amafrey","Betha","Cefrey","Kethra","Mara","Olga","Silifrey","Westra"];t=e[Math.floor(Math.random()*e.length)]}return t}static _description(e,t){return"Illuskans are tall, fair-skinned folk with blue or steely gray eyes. Most have raven-black hair, but those who inhabit the extreme northwest have blond, red, or light brown hair."}}(0,n.setClassMapping)("Illuskan",i)},1136:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Mulan:()=>i});var r=a(1324),n=a(5066);class i extends r.Name{constructor(e,t){super(e,t),this.lastname=i._lastname(),this.firstname=i._firstname(t),this.nickname=this.firstname,this.description=i._description(e,t)}static _lastname(){const e=["Ankhalab","Anskuld","Fezim","Hahpet","Nathandem","Sepret","Uuthrakt"];return e[Math.floor(Math.random()*e.length)]}static _firstname(e){let t;if("male"===e.getGender()){const e=["Aoth","Bareris","Ehput-Ki","Kethoth","Mumed","Ramas","So-Kehur","Thazar-De","Urhur"];t=e[Math.floor(Math.random()*e.length)]}if("female"===e.getGender()){const e=["Arizima","Chathi","Nephis","Nulara","Murithi","Sefris","Thola","Umara","Zolis"];t=e[Math.floor(Math.random()*e.length)]}return t}static _description(e,t){return"Dominant in the eastern and southeastern shores of the Inner Sea, the Mulan are generally tall, slim, and amber-skinned, with eyes of hazel or brown. Their hair ranges from black to dark brown, but in the lands where the Mulan are most prominent, nobles and many other Mulan shave off all their hair."}}(0,n.setClassMapping)("Mulan",i)},48:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Rashemi:()=>i});var r=a(1324),n=a(5066);class i extends r.Name{constructor(e,t){super(e,t),this.lastname=i._lastname(),this.firstname=i._firstname(t),this.nickname=this.firstname,this.description=i._description(e,t)}static _lastname(){const e=["Chergoba","Dyernina","Iltazyara","Murnyethara","Stayanoga","Ulmokina"];return e[Math.floor(Math.random()*e.length)]}static _firstname(e){let t;if("male"===e.getGender()){const e=["Borivik","Faurgar","Jandar","Kanithar","Madislak","Ralmevik","Shaumar","Vladislak"];t=e[Math.floor(Math.random()*e.length)]}if("female"===e.getGender()){const e=["Fyevarra","Hulmarra","Immith","Imzel","Navarra","Shevarra","Tammith","Yuldra"];t=e[Math.floor(Math.random()*e.length)]}return t}static _description(e,t){return"Most often found east of the Inner Sea and often intermingled with the Mulan, Rashemis tend to be short, stout, and muscular. They usually have dusky skin, dark eyes, and thick black hair."}}(0,n.setClassMapping)("Rashemi",i)},2884:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Shou:()=>i});var r=a(1324),n=a(5066);class i extends r.Name{constructor(e,t){super(e,t),this.lastname=i._lastname(),this.firstname=i._firstname(t),this.nickname=this.firstname,this.description=i._description(e,t)}static _lastname(){const e=["Chien","Huang","Kao","Kung","Lao","Ling","Mei","Pin","Shin","Sum","Tan","Wan"];return e[Math.floor(Math.random()*e.length)]}static _firstname(e){let t;if("male"===e.getGender()){const e=["An","Chen","Chi","Fai","Jiang","Jun","Lian","Long","Meng","On","Shan","Shui","Wen"];t=e[Math.floor(Math.random()*e.length)]}if("female"===e.getGender()){const e=["Bai","Chao","Jia","Lei","Mei","Qiao","Shui","Tai"];t=e[Math.floor(Math.random()*e.length)]}return t}static _description(e,t){return"The Shou are the most numerous and powerful ethnic group in Kara-Tur, far to the east of Faerûn. They are yellowish-bronze in hue, with black hair and dark eyes. Shou surnames are usually presented before the given name."}}(0,n.setClassMapping)("Shou",i)},3156:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Tethyrian:()=>s});var r=a(1324),n=a(1041),i=a(5066);class s extends r.Name{constructor(e,t){super(e,t);const a=new n.Chondathan(e,t);this.lastname=a.getLastname(),this.firstname=a.getFirstname(),this.nickname=this.firstname,this.description=s._description(e,t)}static _description(e,t){return"Widespread along the entire Sword Coast at the western edge of Faerûn, Tethyrians are of medium build and height, with dusky skin that tends to grow fairer the farther north they dwell. Their hair and eye color varies widely, but brown hair and blue eyes are the most common. "}}(0,i.setClassMapping)("Tethyrian",s)},6474:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Turami:()=>i});var r=a(1324),n=a(5066);class i extends r.Name{constructor(e,t){super(e,t),this.lastname=i._lastname(),this.firstname=i._firstname(t),this.nickname=this.firstname,this.description=i._description(e,t)}static _lastname(){const e=["Agosto","Astorio","Calabra","Domine","Falone","Marivaldi","Pisacar","Ramondo"];return e[Math.floor(Math.random()*e.length)]}static _firstname(e){let t;if("male"===e.getGender()){const e=["Anton","Diero","Marcon","Pieron","Rimardo","Romero","Salazar","Umbero"];t=e[Math.floor(Math.random()*e.length)]}if("female"===e.getGender()){const e=["Balama","Dona","Faila","Jalana","Luisa","Marta","Quara","Selise","Vonda"];t=e[Math.floor(Math.random()*e.length)]}return t}static _description(e,t){return"Native to the southern shore of the Inner Sea, the Turami people are generally tall and muscular, with dark mahogany skin, curly black hair, and dark eyes."}}(0,n.setClassMapping)("Turami",i)},244:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Aarakocra:()=>u.Aarakocra,Aasimar:()=>g.Aasimar,Bugbear:()=>f.Bugbear,Calishite:()=>n.Calishite,Centaur:()=>p.Centaur,Changeling:()=>y.Changeling,Chondathan:()=>i.Chondathan,Damaran:()=>s.Damaran,Dragonborn:()=>b.Dragonborn,Drow:()=>k.Drow,Dwarf:()=>M.Dwarf,Elf:()=>w.Elf,Feraltiefling:()=>$.Feraltiefling,Firbolg:()=>v.Firbolg,Genasi:()=>S.Genasi,Gith:()=>R.Gith,Gnome:()=>T.Gnome,Goblin:()=>_.Goblin,Goliath:()=>C.Goliath,Halfelf:()=>z.Halfelf,Halfling:()=>G.Halfling,Halforc:()=>H.Halforc,Hobgoblin:()=>D.Hobgoblin,Human:()=>m.Human,Kenku:()=>B.Kenku,Khalastar:()=>N.Khalastar,Kobold:()=>r.Kobold,Leonin:()=>x.Leonin,Lizardfolk:()=>A.Lizardfolk,Locathah:()=>E.Locathah,Loxodon:()=>L.Loxodon,Minotaur:()=>F.Minotaur,Mulan:()=>o.Mulan,Orc:()=>V.Orc,Owlfolk:()=>O.Owlfolk,Rabbitfolk:()=>I.Rabbitfolk,Rashemi:()=>l.Rashemi,Satyr:()=>P.Satyr,Shifter:()=>j.Shifter,Shou:()=>h.Shou,Simichybrid:()=>K.Simichybrid,Tabaxi:()=>q.Tabaxi,Tethyrian:()=>c.Tethyrian,Tiefling:()=>J.Tiefling,Tortle:()=>U.Tortle,Triton:()=>Z.Triton,Turami:()=>d.Turami,Vedalkan:()=>W.Vedalkan,Verdan:()=>Y.Verdan,Warforged:()=>Q.Warforged,Yuantipureblood:()=>X.Yuantipureblood});var r=a(9160),n=a(2647),i=a(1041),s=a(7185),o=a(1136),l=a(48),h=a(2884),c=a(3156),d=a(6474),m=a(5192),u=a(428),g=a(348),f=a(9446),p=a(9326),y=a(5119),b=a(7175),k=a(8826),M=a(9858),w=a(1582),$=a(3631),v=a(7164),S=a(9389),R=a(4727),T=a(3010),_=a(1026),C=a(1680),z=a(1498),G=a(3468),H=a(5866),D=a(6811),B=a(462),N=a(4639),x=a(2742),A=a(9055),E=a(4677),L=a(6803),F=a(9515),V=a(8004),O=a(8325),I=a(4325),P=a(4526),j=a(3365),K=a(7063),W=a(2958),q=a(2172),J=a(9798),U=a(1575),Z=a(8648),Y=a(3850),Q=a(5832),X=a(2371)},462:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Kenku:()=>o});var r=a(5066),n=a(1324),i=a(5701),s=a(6354);class o extends n.Name{constructor(e,t,a,r){super(e,t),this.lastname=this._lastname(),this.nickname=r.nickname?r.nickname:this._nickname(),this.firstname=this._firstname(e.getRace(),t),this.description=this._description(e,t)}_lastname(){const e={"Rabbit Scream":"screaming rabbit","Hammer Clank":"clanking hammer","Dog Wiggle":"wiggeling dogtail","Steel Clank":"clanking of steel","Lute String":"strumming lute","Book Slam":"slamming of a book","Leather Flick":"leather flicking","Grain Trash":"hay bail","Hide Smack":"smacking of hides","Snake Slither":"slithering snake","Chisel Carve":"stonecutting","Hoe Scrape":"ground scraping","Parrot Squawk":"squaking parrot","Jackal Call":"howling Jackal","Owl Call":"owl coo","Falcon Swoop":"swooping bird","Grain Mill":"flour milling",Chimer:"chiming","Duck Rustle":"rustling duck","Paint Stroke":"painting paintbrush","Kettle Bubble":"water cooking",Plunger:"clogging","Mouse Rustle":"scurrying mouse","Bell Drop":"dropping town-bell",Carver:"wood carving",Cobbler:"sewing","Dog Yelp":"barking dog","Crate Smash":"crate being smashed","Hatchet Drop":"lumber chopping",Stomper:"thumping",Fryer:"flesh sizzling","Parrot Call":"squaking parrot","Badger Run":"rustling of a small animal","Sheep Baa":"bleating sheep","Alligator Roar":"roaring Lizardfolk","Fox Yelp":"howling fox","Bee Buzzing":"beehive",Stampede:"stampeding horses","Coyote Yelp":"crying coyote","Horse Snort":"snorting horse","Tree Fall":"falling tree","Mallet Smash":"slamming wooden hammer","Potion Crash":"bottle breaking"},t=Object.keys(e),a=t[Math.floor(Math.random()*t.length)],r=e[a];return this.lastname=a,this.sounding=r,a}_firstname(){return`*${this.sounding}*`}_nickname(){const e=["Prodder","Clanger","Rustler","Knocker","Tweeter","Snaker","Mimer","Piercer","Drummer","Exploder","Smasher","Pigeoner","Braker","Sifter","Roarer","Spitter","Giggler","Clicker","Puffer","Roaster","Lugger","Burner","Buzzer","Clogger","Howler","Sizzler","Mimicry"];return e[Math.floor(Math.random()*e.length)]}_description(e,t){return`When asked for it's name the ${e.getRace()} makes a *${this.sounding}* sound, \n        hence ${t.getHeShe()} is known as ${this.lastname}. is called ${this.nickname} around here, because of the sounds \n        ${t.getHeShe()} mimics`}static mouthReplacer(){const e=["sharp tomia","rounded tomia","bow shaped tomia","heavy lower tomia","ridged tomia","heavy upper tomia","sawtooth serated tomia","thin tomia","downward turned tomia","perfectly proportioned tomia"];return e[Math.floor(Math.random()*e.length)]}static chinReplacer(){const e=["pointy","round","square"],t=e[Math.floor(Math.random()*e.length)],a=["a rather ","quite the","a very defined","a puffed","a very protruding","a bulbous","a very small","a bit of a"];return a[Math.floor(Math.random()*a.length)]+" "+t+" culmen"}static noseReplacer(){let e=Math.floor(100*Math.random())+1;if(e>=1&&e<=24)e="a very generalist, prominent big beak";else if(e>=25&&e<=38)e="a scything upturned beak, small in width but quite long";else if(e>=39&&e<=47)e="an eagles beak, quite raptorial. With a strong sloping curve that prominently protrudes from the face";else if(e>=48&&e<=56){const t=["insect catching","grain eating","Coniferous seed eating"];e=`a snub beak that is common with ${t[Math.floor(Math.random()*t.length)]} birds`}else if(e>=57&&e<=64)e="a very long and sharp beak, thin and pointy, small in height but quite flat, common with aerial fishing birds";else if(e>=65&&e<=68)e='a "Hawk" beak that has similarities with the curved beaks of eagles and other predatory birds. It has a dramatic arched shape';else if(e>=69&&e<=76)e="a perfectly straight beak. It gives this birdfolk an aggressive profile since it is usually seen on scavenging birds";else if(e>=77&&e<=84)e="a dip netting beak, rather big, with a very prominent bottom mandible, like pelicans normally have";else if(e>=85&&e<=91){const t=["filter feeding","pursuit fishing","chiseling"];e=`a thin and flat shaped beak with a short tip, typical for ${t[Math.floor(Math.random()*t.length)]}`}else e>=92&&e<=100&&(e="a bulbous beak, it has a swollen, disproportionate nasal tip, almost like it's too big. Imagine something like a fruit eating toucan");return e}static teethReplacer(){const e=["shiny white","yellow","quite large","rather small","yellow and grey","crooked","lead","tin","copper","steel","cast-iron","iron","metal"],t=e[Math.floor(Math.random()*e.length)],a=i.Material.getMetalType(),r=[`has a ${a} beak`,"has a hard horny tissue at the tip of the beak",`has a ${t} shield-shaped structure on the tip of its beak`,`has a ${t} shield-shaped structure on its beak tip, which spans the entire width of the beak`,`has a ${t} shield-shaped structure on its beak, which is bent at the tip to form a hook`,`has a ${t} shield-shaped structure on its beak tip, which spans the entire width of the beak and bent at the tip to form a hook`,`has a fake colorType, like a prosthetic made of ${s.Verbs.quality()} ${a}`];return r[Math.floor(Math.random()*r.length)]}}(0,r.setClassMapping)("Kenku",o)},4639:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Khalastar:()=>i});var r=a(5066),n=a(1324);class i extends n.Name{constructor(e,t,a,r){super(e,t),this.lastname=r.lastname?r.lastname:this._firstname(t),this.firstname="",this.nickname=null,this.description=this._description(e.getRace(),t)}_firstname(e){let t;if("male"===e.getGender()){let e=["Hal","Havra","Kana","Lana","Lan","Mal","Min","Nevi","Par","Nol","Mo","Bo","Bal","Bul-ka","Do","Re","Kes","Mi","Fa","Sol","Si","Do","He"],a=["harath","khad","melk","tash","kosh","tosh"];e=e[Math.floor(Math.random()*e.length)],a=a[Math.floor(Math.random()*a.length)],t=e+a}if("female"===e.getGender()){let e=["Gani","Kha","La","Me","No","Pani","Sora","Sho","Tha","Lo","Deha","Cozo","Do","Re","Mi","Fa","Sol","Si","Do"],a=["kashtai","shana","tari","vakri","raulad","reth","shara","nari"];e=e[Math.floor(Math.random()*e.length)],a=a[Math.floor(Math.random()*a.length)],t=e+a}return t}_description(e,t){return`${e} names are three to five syllables long and feature hard and hissing consonants. \n        The ${e} are a compound race created from the union of humanity and renegade spirits from the plane of \n        dreams – spirits called quori. The ${e} are often seen as wise, \n        spiritual people with great compassion for others. But there is an unmistakable alien quality to \n        ${this.lastname} as ${t.getHeShe()} is haunted by the conflicts of ${t.getHisHer()} \n        otherworldly spirits`}}(0,r.setClassMapping)("Khalastar",i)},9160:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Kobold:()=>s});var r=a(5066),n=a(1324),i=a(7175);class s extends n.Name{constructor(e,t,a,r){super(e,t),this.lastname=r.lastname?r.lastname:this._lastname(),this.firstname=r.firstname?r.firstname:"",this.nickname=null,this.description=this._description(e.getRace(),t)}_lastname(){const e=["Tass","Varn","Snuks","Gox","Guvne","Keplu","Mahro","Hovni","Kirpo","Merbi","Dorn","Sig","Ver","Sax","Siklu","Ilti","Utro","Snege","Zepi","Hirto","Suks","Rugs","Hik","Ratt","Atre","Gedri","Deklo","Ahso","Hoga","Saru","Kin","Mak","Tix","Dis","Snolto","Olta","Zorpu","Ogo","Kara","Gobli"];return e[Math.floor(Math.random()*e.length)]}_description(e,t){return`It's ancestry gives this ${e} a ${i.Dragonborn.generateAncestry()} scale color`}static bodySizeReplacer(){const e=["very small","quite small","small","small sized","rather tiny","below middle sized","really small","slightly smaller","rather small","reasonably small","tiny","characteristically tiny sized","naturally small sized"];return e[Math.floor(Math.random()*e.length)]}}(0,r.setClassMapping)("Kobold",s)},2742:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Leonin:()=>i});var r=a(5066),n=a(1324);class i extends n.Name{constructor(e,t,a,r){super(e,t),this.lastname=r.lastname?r.lastname:this._lastname(),this.firstname=r.firstname?r.firstname:this._firstname(t),this.nickname=null,this.description=this._description(e,t)}_lastname(){const e=["Embereye","Flintclaw","Goldenfield","Ironmane","Starfeller","Sunguides"];let t=e[Math.floor(Math.random()*e.length)];return Math.floor(20*Math.random())+1>2&&(t=" of the "+t),this.lastname=t,t}_firstname(e){let t;if("male"===e.getGender()){const e=["Apto","Athoz","Baragon","Bryguz","Eremoz","Gorioz","Grexes","Oriz","Pyxathor","Teoz","Xemnon","Xior"];t=e[Math.floor(Math.random()*e.length)]}if("female"===e.getGender()){const e=["Aletha","Atagone","Demne","Doxia","Ecate","Eriz","Gragonde","Iadma","Koila","Oramne","Seza","Ziore"];t=e[Math.floor(Math.random()*e.length)]}return t}_description(e,t){return`${e.getRace()} are muscular, covered in fur, have feline tails,\n        and their heads look identical to those of lions.\n        ${e.getRace()}, proud humanoid creatures that share many traits with their lesser cousins, lions,\n        are a race native to the moors of eastern Anterra`}static bodySizeReplacer(){const e=["sort of typical giant-sized","common giant sized","characteristically large sized","naturally large sized","typical","more or less standard sized","moderately large sized","sizable","large","quite large","very large","really large","slightly larger","reasonably large","immense","enormous","massive","tall","big","hulking","towering","giant"];return e[Math.floor(Math.random()*e.length)]}}(0,r.setClassMapping)("Leonin",i)},9055:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Lizardfolk:()=>i});var r=a(5066),n=a(1324);class i extends n.Name{constructor(e,t,a,r){super(e,t),this.lastname=r.lastname?r.lastname:this._lastname(),this.firstname=r.firstname?r.firstname:this._firstname(),this.nickname=null,this.description=this._description(e.getRace(),t)}_lastname(){const e=["Bogstalker","Bogshadow","Deadmarsh","Birdhunter","Beastkiller","Hardscale","Deadswamp","Poisondusk","Shadowscale","Longspear","Swordfang","Spearmouth","Daggermaw","Swamprunner","Marshtrekker","Redmountain","Graypond","Redfang","Ironflank","Stoneflesh"];return e[Math.floor(Math.random()*e.length)]}_firstname(){const e=["Daecheraess","Buthratriass","Ark","Baok","Trechuss","Vegyk","Maarkitho","Baax","Iskia","Usli","Muty","Trurgyv","Naskuch","Mertarrark","Morassuch","Vithotrysk","Taart","Edresk","Mellurt","Lopy","Nathre","Erhten","Vithretrasj","Oltugnos","Osk","The","Jhortaa","Den","Traocheth","Nepisj","Sitru","Kiguard","Uthragat","Nudhokra","Dechustysj","Sark","Vir","Merdis","Eslant","Throtird","Berdex","Volakrard","Redassirk","Moshitrua","Toxh"];return e[Math.floor(Math.random()*e.length)]}_description(e){return`${e} are primitive reptilian humanoids that usually lurk in swamps and jungles`}}(0,r.setClassMapping)("Lizardfolk",i)},4677:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Locathah:()=>i});var r=a(5066),n=a(1324);class i extends n.Name{constructor(e,t,a,r){super(e,t),this.lastname=r.lastname?r.lastname:this._lastname(),this.mom=this._lastname(),this.dad=this._lastname(),this.firstname="",this.nickname=this.lastname,this.description=this._description(e.getRace(),t)}_lastname(){const e=["Kelpy","Chest","Compas","Lace","Canon","Canonball","Anchor","Chain","Raft","Oar","Barrel","Painter Ring","Sail","Stempost","Rivets","Sternrudder","Knarr","Coins","Bucket","Bow","Fishnet","Voyage","Reef","Dolly","Adrift","Clinker","Carvel","Rudder","Mast","Ledger","Log","Debris","Hulc","Keel","Ceol","Spritsail","Cog","Vessel","Ship","Planks","Rubble","Garboard","Sternpost","Caravel","Carrack","Bowsprit","Foresail","Mizzen","Topsail","Crayer","Hoy","Picard","Supplies","Galley","Rowing","Longship","Strakes","Wood","Balinger","Birlinn","Steering-oar","Lapstrake","Hull","Skiff","Apron","Deadwoods","Transom","Coble","Stringer","Crew","Hook","Swivels","Crutch Plate","Dinghy","Fairleads","Square Nails","Rove","Screws","Scrollcase","Freeboard","Bottle","Chart","Desk","Flag","Skeletons","Epoxy","tea Tray","Crate","Gauntlet","Map","Tools","Knives","Stamp","Crest","Saltpeter","Pouch","Sextant","Compass","Spyglass","Cannon","Musket","Flintlock","Sabre","Cutlass","Tricorn","Rum Bottle","Powder Keg","Wheel","Lantern","Rope","Net","Harpoon","Barrel","Chest","Coin","Jewelry","Emerald","Ruby","Diamond","Pearl","Gold Bar","Silverware","Porcelain","Telescope","Clock","Bell","Compass Rose","Astrolabe","Quadrant","Hourglass","Log Line","Lead Line","Shackle","Block","Deadeye","Capstan","Grapnel","Swivel Gun","Blunderbuss","Pistol","Musket Ball","Chain Shot","Grapeshot","Powder Horn","Bullet Mould","Cartridge","Bayonet","Pike","Boarding Axe","Mariner’s Astrolabe","Sea Chart","Logbook","Inkwell","Quill","Parchment","Seal","Wax","Locket","Medallion","Brooch","Ring","Earring","Bracelet","Necklace","Crown","Chalice","Goblet","Plate","Bowl","Cup","Vase","Statuette","Figurine","Idol","Relic","Icon","Tapestry","Painting","Mirror","Loom","Spindle","Needle","Thread","Fabric","Lace","Ribbon","Bead","Button","Buckle","Hatpin","Cameo","Coral","Shell","Bone","Horn","Tooth","Ivory","Leather","Fur","Feather","Wool","Silk","Velvet","Linen","Hemp","Cotton","Dye","Spice","Salt","Sugar","Tea","Coffee","Cocoa","Tobacco","Opium","Rum","Wine","Brandy","Ale","Oil","Tar","Pitch","Tallow","Soap","Perfume","Potion","Vial","Flask","Bottle","Cask","Barrel","Tub","Bucket","Pail","Scoop","Shovel","Rake","Hoe","Pick","Axe","Hammer","Saw","Chisel","File","Rasp","Drill","Brace","Bit","Nail","Screw","Peg","Wedge","Pin","Bolt","Nut","Washer","Rivet","Hinge","Latch","Lock","Key","Chain","Hook","Ring","Rod","Staff","Wand","Stick","Cane","Whip","Rope","Cord","String","Wire","Strap","Belt","Sash","Band","Ribbon","Lace","Braid","Tassel","Fringe","Pom-pom","Feather","Root","Bark","Wood","Stone","Clay","Glass","Metal","Paper","Wax","Ink","Paint","Resin","Leather","Fur","Horn","Bone","Shell","Coral","Pearl","Gem","Crystal","Glass"];return e[Math.floor(Math.random()*e.length)]}_description(e,t){return`${e} name their children and themselves after what they know.\n                So ${this.dad} and ${this.mom} named their children after the things found in shipwrecks on the seafloor,\n                that's why ${t.getHeShe()} is called ${this.nickname}.\n                This nautical tradition has only strengthened as they have had more contact with land-dwelling humanoids`}}(0,r.setClassMapping)("Locathah",i)},6803:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Loxodon:()=>i});var r=a(5066),n=a(1324);class i extends n.Name{constructor(e,t,a,r){super(e,t),this.lastname=r.lastname?r.lastname:this._lastname(t),this.firstname=r.firstname?r.firstname:"",this.nickname=r.nickname?r.nickname:this._nickname(),this.description=this._description(e,t)}_lastname(e){let t,a,r,n,i;return"male"===e.getGender()&&(t=["Ag","Ghano","Ganon","Ga","Ili","Kava","Lathi","Mau","Phu","Thava","Tvorti","Vega"],a=t[Math.floor(Math.random()*t.length)],r=["vith","noth","dorf","non","loxth","vipth","linth","thouk","ghuin","glath","lipth","khagn"],n=r[Math.floor(Math.random()*r.length)],i=a+n),"female"===e.getGender()&&(t=["Ameris","Gaupa","Imim","Kau","Laulu","Maump","Oneg","Ori","Phaa","Veria"],a=t[Math.floor(Math.random()*t.length)],r=["thea","elia","phea","thila","nea","thorea","hea","rea","ghia","phia"],n=r[Math.floor(Math.random()*r.length)],i=a+n),i}_nickname(){let e=["Broad","Cracked","Dark","High","Long","Moon","Scarred","Severed","Strong","Twin"];e=e[Math.floor(Math.random()*e.length)];let t=["Tusk","Tusks","Wool","Ear","Eye","Hide","Trunks","Trunk"];return t=t[Math.floor(Math.random()*t.length)],`${e}-${t}`}_description(e,t){return`${this.lastname} the ${e.getRace()} is called ${this.nickname} and looks like a perfect blend of elephant and man,\n            with the thick, leathery skin of an elephant and the bipedal stance of the more civilized races`}static noseReplacer(){let e,t,a=Math.floor(100*Math.random())+1;switch(!0){case a>=1&&a<=24:a="a very fleshy, prominent big proboscis";break;case a>=25&&a<=38:a="an upturned trunk, small in size with a dent at the bridge";break;case a>=39&&a<=47:a="a curved proboscis. With a strong sloping curve that prominently protrudes from the face";break;case a>=48&&a<=56:e=["subtle","protruding"],t=e[Math.floor(Math.random()*e.length)],a="a bumpy trunk that features bumpy outlines with "+t+" curves located at the tip of the proboscis";break;case a>=57&&a<=64:a="a very snub trunk, thin and pointy, small in size but quite round";break;case a>=65&&a<=68:a="a proboscis that has a dramatic arched shape and a protruding bridge, making it look long and small";break;case a>=69&&a<=76:a="a perfectly straight trunk. One of the most aesthetically pleasing of all proboscis shapes. It gives a distinct and attractive profile since it doesn’t have any humps or curves";break;case a>=77&&a<=84:a="a nubian-like proboscis, rather big, with very prominent nostrils";break;case a>=85&&a<=91:a="a thin and flat shaped trunk with a short tip";break;case a>=92&&a<=100:a="a bulbous proboscis, it has a a swollen, disproportionate nasal tip, almost like it's too big. Imagine something like a ball positioned at the end of the trunk";break;default:a="a very fleshy, prominent big proboscis"}return a}static bodySizeReplacer(){const e=["sort of typical giant-sized","common giant sized","characteristically large sized","naturally large sized","typical","more or less standard sized","moderately large sized","sizable","large","quite large","very large","really large","slightly larger","reasonably large","immense","enormous","massive","tall","big","hulking","towering","giant"];return e[Math.floor(Math.random()*e.length)]}}(0,r.setClassMapping)("Loxodon",i)},9515:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Minotaur:()=>s});var r=a(5066),n=a(1324),i=a(9702);class s extends n.Name{constructor(e,t,a,r){super(e,t),this.lastname=r.lastname?r.lastname:this._lastname(),this.firstname=r.firstname?r.firstname:this._firstname(t),this.nickname=null,this.description=this._description(e,t)}_lastname(){const e=["Fearless","Steady","Silent","Brave","Orc","Sharp","Steel","Wolf","Truth","Keen","Valiant","Thick","Vigil","Swift","Steady","Jagged","Thunder","Boulder","Nimble"],t=["bane","pelt","heart","body","hide","leader","slash","mind","horn","hoof","runner","warrior","walker","fist","fury"];return`${e[Math.floor(Math.random()*e.length)]}${t[Math.floor(Math.random()*t.length)]}`}_firstname(e){let t=[],a=[];return"male"===e.getGender()&&(t=["Oes","Nan","Tee","Mou","Drin","Da","Gar","Har","Em","Vi","Djar","Kur","Noo"],a=["fin","nore","las","min","diar","gur","fajar","daran","vin","me","rapak","kar","gajan"]),"female"===e.getGender()&&(t=["Fen","Neo","Hi","Kuo","Raa","Via","Nuo","Tes","Uo","Tia","Loo","Vi","Hila","Ras","Si","Laa"],a=["ren","tin","nefa","ris","sfa","zara","rin","trin","varis","nore","vin","tri","naru"]),t=t[Math.floor(Math.random()*t.length)],a=a[Math.floor(Math.random()*a.length)],`${t}${a}`}_description(e,t){return`${this.firstname} is a barrel-chested humanoid with a head resembling that of a bull`}static bodySizeReplacer(){const e=["sort of typical giant-sized","common giant sized","characteristically large sized","naturally large sized","typical","more or less standard sized","moderately large sized","sizable","large","quite large","very large","really large","slightly larger","reasonably large","immense","enormous","massive","tall","big","hulking","towering","giant"];return e[Math.floor(Math.random()*e.length)]}static shoesReplacer(e,t){const a=(0,i.getRandomElement)(["one-toed","two-toed","three-toed","four-toed","deer","moose","elk","horse","cow","cloven","pig","sheep","goat","bison","buffalo","antelope","giraffe","hippopotamus","rhinoceros","tapir","zebra","donkey","mule","pronghorn","gazelle","ibex","chamois","reindeer","caribou","sable","springbok","oryx","kudu","waterbuck","eland","okapi","wildebeest","hartebeest","tahr","argali","urial","mouflon","dik-dik","duiker","gerenuk","impala","roan","sable","topi","gnu","addax","oryx","screw-horned","split-hoofed","solid-hoofed","webbed-hoofed","splayed-hoofed","cleft-hoofed"]),r=(0,i.getRandomElement)(["club","aligned","migrated","negative palmar","laminitic","founder"]);return`This ${e} has ${(0,i.getRandomElement)(["high","low","long toe low heel"])}, ${r} ${a} hooves.`}}(0,r.setClassMapping)("Minotaur",s)},8004:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Orc:()=>s});var r=a(5066),n=a(1324),i=a(9702);class s extends n.Name{constructor(e,t,a,r){super(e,t),this._variation(e),e.setRace(e.getVariant()),this.lastname=r.lastname?r.lastname:this._lastname(),this.firstname=r.firstname?r.firstname:this._firstname(t),this.nickname=r.nickname?r.nickname:this._nickname(),this.description=this._description(e,t)}_variation(e){e.setVariant((0,i.getRandomElement)(["Orc","Orc of Exandria","Orc of Eberron"]))}_lastname(){const e=["Dummik","Horthor","Lammar","Sormuzhik","Turnskull","Brodroll","Shotrakk","Dhudduk","Grorzakk","Zuvrab","Juvrag","Ulkrunnar","Zorgar"];return e[Math.floor(Math.random()*e.length)]}_firstname(e){let t;if("male"===e.getGender()){const e=["Agar","Akaros","Arrakk","Augh","Besk","Bruegar","Dahk","Durth","Derkk","Fang","Ekk","Gar","Garlak","Grinkel","Kalip","Karash","Devdas","Dgul","Drood","Druuk","Eagol","Edals","Ghorn","Gnarsh","Gobar","Gogar","Gothog","Gremog","Grimslade","Gronz","Grumbar","Gugal","Guzud","Hargul","Harl","Harll","Honzu","Hoog","Lugh","Mimerk","Hogar","Jzets","Lubash","Hool","Hordar","Horrach","Hoygh","Huagh","Jhanzur","Jutor","Kesk","Kol","Korgul","Krell","Krusk","Lagazi","Lorzak","Mord","Murook","Nizam","Nogu","Nyarl","Omotar","Ohr","Ohtar","Orngart","Ordich","Taing","Tanglar","Toop","Trood","Tomph","Orrusk","Oth","Raorr","Rendar","Rheen","Sark","Scrag","Sorgh","Tarak","Targ","Tawar","Thar","Tharag","Thog","Thoin","Toemor","Tulmak","Tzens","Ubada","Udhgar","Ugarth","Ugurth","Ungar","Ungvar","Urzad","Vaath","Wung","Wykks","Xar","Xtec","Yark","Vanchu","Vtam","Whudu","Wogg","Wogar","Wrnach","Yazar","Yetto","Yurk","Zarx","Zotl","Zuboko"];t=e[Math.floor(Math.random()*e.length)]}if("female"===e.getGender()){const e=["Betharra","Bree","Creske","Edarreske","Duvaega","Franch","Fukel","Gaaki","Dhithik","Doduh","Grai","Grigri","Gynk","Huru","Neske","Ootah","Orgaega","Parih","Puyet","Puyetto","Nadke","Didgu","Tupacu","Varra","Yeskarra","Zel","Bhev","Gif","Ghon","Zedvan","Guli","Shellu","Ghivgu","Kami","Dhumau","Sim","Zuv","Rik ","Raul","Uvgang","Nugne"];t=e[Math.floor(Math.random()*e.length)]}return t}_nickname(){let e=["Swift","Aberrant","Angry","Lost","Vulgar","Vengeful","Gross","Skin","Smoke","Dream","Throat","Beast","Vein","Vicious","Forsaken","Merciless","Flame","Reckless","Worthless","Deserted","Desolate","Furious","Bitter","Resentful"],t=[" Scalper"," Lance"," Horror"," Heart"," Gasher"," Dissector"," Saber"," Chaos"," Squasher"," Bruiser"," Slicer"," Spear"," Axe"," Killer"," Ghost"," Cruncher"," Squelcher"," Slayer"," Queller"," Smasher"," Behemoth"," Butcher"," King"," Baron"," Prince"," Executioner"," Slaughterer"];e=e[Math.floor(Math.random()*e.length)],t=t[Math.floor(Math.random()*t.length)];const a=Math.floor(20*Math.random())+1;let r;return 1===a?(e="The",r=e+t):20===a?(t="The ",r=t+e):r=a>=15&&a<=19?"The "+e+t:e+t,r}_description(e,t){let a=["trough battle","after a duel",'after "surviving" a robbery',"during a tribal war","due to skills in combat","while serving in the army",'after the "other one" did not survive',"in an arena","when someone else tried to win at a cardgame","in warfare","in a crusade","trough bloodshed","during a skirmish","in a clandestine operation","after a fierce confrontation","through strategic maneuvering","in a rebellion","during a siege","after a stealthy assassination","in a naval battle","during a jousting tournament","through a test of skill","in a hunting accident","after a bar brawl","in a dispute over land","during a raid","in a gamble gone wrong","after being ambushed","in a feud between families","through a trial by combat","in a struggle for power","during a mutiny","in a street fight","after a daring rescue","in a showdown","through a perilous journey","in a fight over honor","during an uprising","in a clash of clans","after a betrayal","in a sorcery duel","through a rite of passage","in a battle of wits","during a pirate attack","in a diplomatic incident","after a vendetta","in a melee","through a daring escape","in a confrontation with a beast","during an expedition","in a gladiator match","after a challenge","in a contest of strength","through a display of valor","in a competition","during a ritual","in a dance of death","after proving oneself","in a labyrinth","through a game of chance","in a race against time","during a quest","in a trial of endurance","after a sacrifice","in a battle royale","through a series of ordeals","in a fight to the death","during a ceremony","in a struggle for survival","after a mystical event","in a confrontation of fate","through divine intervention","in a conflict of interest","during a storm","in a time of war","after a close encounter","in a fight against the odds","through a moral dilemma","in a battle of the bands","during a moment of truth","in a test of faith","after a resolution","in a duel of fates","through a paradox"];return a=a[Math.floor(Math.random()*a.length)],`${this.firstname} ${this.lastname} uses the epithet ${this.nickname}.\n        A name ${t.getHeShe()} earned ${a}`}}(0,r.setClassMapping)("Orc",s)},8325:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Owlfolk:()=>o});var r=a(5066),n=a(1324),i=a(5701),s=a(6354);class o extends n.Name{constructor(e,t,a,r){super(e,t),this.lastname=r.lastname?r.lastname:this._lastname(t),this.firstname=r.firstname?r.firstname:"",this.nickname=null,this.description=this._description(e.getRace(),t)}_lastname(e){let t;if("male"===e.getGender()){const e=["Beak","Head","Iris","Pupil","Mantle","Scapulars","Tertials","Rump","Thigh","Tibio","Tarsus","Tibia","Eyestripe","Wattle","Gizzard","Oblique","Plume","Talon","Tuft","Plumage","Claws","Wings","Ruffage","Wingspan","Mandible","Quill","Scutes","Cancella","Scutella","Vision","Syrinx"];t=e[Math.floor(Math.random()*e.length)]}if("female"===e.getGender()){const e=["Glide","Soar","Avian","Bewilder","Dive","Endeavor","Gust","Screech","Sing","Soar","Whet","Descend","Drift","Tilt","Float","Fly","Glissade","Baffle","Daze","Fluster","Mystify","Aspire","Assay","Venture","Squall","Paroxysm","Chant","Hum","Serenade","Hymn","Cantillate"];t=e[Math.floor(Math.random()*e.length)]}return t}_description(e,t){return`Distant kin of giant owls, this ${e} is quite humanoid`}static mouthReplacer(){const e=["sharp tomia","rounded tomia","bow shaped tomia","heavy lower tomia","ridged tomia","heavy upper tomia","sawtooth serated tomia","thin tomia","downward turned tomia","perfectly proportioned tomia"];return e[Math.floor(Math.random()*e.length)]}static chinReplacer(){const e=["pointy","round","square"],t=e[Math.floor(Math.random()*e.length)],a=["a rather ","quite the","a very defined","a puffed","a very protruding","a bulbous","a very small","a bit of a"];return a[Math.floor(Math.random()*a.length)]+" "+t+" culmen"}static noseReplacer(){let e=Math.floor(100*Math.random())+1;if(e>=1&&e<=24)e="a very generalist, prominent big beak";else if(e>=25&&e<=38)e="a scything upturned beak, small in width but quite long";else if(e>=39&&e<=47)e="an eagles beak, quite raptorial. With a strong sloping curve that prominently protrudes from the face";else if(e>=48&&e<=56){const t=["insect catching","grain eating","Coniferous seed eating"];e=`a snub beak that is common with ${t[Math.floor(Math.random()*t.length)]} birds`}else if(e>=57&&e<=64)e="a very long and sharp beak, thin and pointy, small in height but quite flat, common with aerial fishing birds";else if(e>=65&&e<=68)e='a "Hawk" beak that has similarities with the curved beaks of eagles and other predatory birds. It has a dramatic arched shape';else if(e>=69&&e<=76)e="a perfectly straight beak. It gives this birdfolk an aggressive profile since it is usually seen on scavenging birds";else if(e>=77&&e<=84)e="a dip netting beak, rather big, with a very prominent bottom mandible, like pelicans normally have";else if(e>=85&&e<=91){const t=["filter feeding","pursuit fishing","chiseling"];e=`a thin and flat shaped beak with a short tip, typical for ${t[Math.floor(Math.random()*t.length)]}`}else e>=92&&e<=100&&(e="a bulbous beak, it has a swollen, disproportionate nasal tip, almost like it's too big. Imagine something like a fruit eating toucan");return e}static teethReplacer(){const e=["shiny white","yellow","quite large","rather small","yellow and grey","crooked","lead","tin","copper","steel","cast-iron","iron","metal"],t=e[Math.floor(Math.random()*e.length)],a=i.Material.getMetalType(),r=[`has a ${a} beak`,"has a hard horny tissue at the tip of the beak",`has a ${t} shield-shaped structure on the tip of its beak`,`has a ${t} shield-shaped structure on its beak tip, which spans the entire width of the beak`,`has a ${t} shield-shaped structure on its beak, which is bent at the tip to form a hook`,`has a ${t} shield-shaped structure on its beak tip, which spans the entire width of the beak and bent at the tip to form a hook`,`has a fake colorType, like a prosthetic made of ${s.Verbs.quality()} ${a}`];return r[Math.floor(Math.random()*r.length)]}}(0,r.setClassMapping)("Owlfolk",o)},4325:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Rabbitfolk:()=>i});var r=a(5066),n=a(1324);class i extends n.Name{constructor(e,t,a,r){super(e,t),this.lastname=r.lastname?r.lastname:this._lastname(),this.firstname=r.firstname?r.firstname:this._firstname(t),this.nickname=null,this.description=this._description(e.getRace(),t)}_lastname(){let e=["Brush","Good","Green","High-","Hill","Lea","Tea","Thorn","Toss","Under"];const t=["gather","barrel","bottle","hill","topple","gallow","leaf","gage","cobble","bough"];e=e[Math.floor(Math.random()*e.length)];let a=t[Math.floor(Math.random()*t.length)];for(;"Hill"===e&&"hill"===a;)a=t[Math.floor(Math.random()*t.length)];return e+a}_firstname(e){let t,a,r;if("male"===e.getGender()){const e=["Al","An","Ca","Cor","El","Er","Fin","Gar","Lin","Ly","Mer","Mi","Os","Per","Re","Ro","Wel"];t=e[Math.floor(Math.random()*e.length)];const r=["ton","der","de","rin","don","rich","nan","ret","dal","le","ric","lo","born","rin","ed","scoe","lby"];a=r[Math.floor(Math.random()*r.length)]}if("female"===e.getGender()){const e=["An","Ca","Co","Euphe","Ji","Ki","La","Li","Mer","Ne","Pae","Por","Sera","Shae","Va","Ver","Re"];t=e[Math.floor(Math.random()*e.length)];const r=["dry","llie","ra","mia","llian","thri","vinia","dda","la","tia","phina","na","ni"];a=r[Math.floor(Math.random()*r.length)]}return r=t+a,r}_description(e,t){return`${e} are naturally drawn to people`}static bodySizeReplacer(){const e=["very small","quite small","small","small sized","rather tiny","below middle sized","really small","slightly smaller","rather small","reasonably small","tiny","characteristically tiny sized","naturally small sized"];return e[Math.floor(Math.random()*e.length)]}}(0,r.setClassMapping)("Rabbitfolk",i)},4526:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Satyr:()=>s});var r=a(5066),n=a(1324),i=a(9702);class s extends n.Name{constructor(e,t,a,r){super(e,t),this.firstname=r.firstname?r.firstname:this._firstname(t),this.lastname=r.lastname?r.lastname:"",this.nickname=null,this.description=this._description(e.getRace(),t)}_firstname(e){let t;if("male"===e.getGender()){const e=["Adrastos","Aeolus","Brontes","Castor","Cephalus","Glaucus","Helios","Iacchus","Kreios","Lycus","Melanthios","Okeanos","Proteus"];t=e[Math.floor(Math.random()*e.length)]}if("female"===e.getGender()){const e=["Acantha","Astraea","Briseis","Clio","Erato","Harmonia","Ianthe","Jocasta","Melete","Phaedra","Phoebe","Selene","Tethys"];t=e[Math.floor(Math.random()*e.length)]}return t}_description(e,t){return`${e}'s resemble stout men and woman with fur covered lower bodies\n        and hooves similar to that of a goat. Horns grow from ${this.firstname}'s head,\n        akin to a ram`}static shoesReplacer(e,t){const a=(0,i.getRandomElement)(["one-toed","two-toed","three-toed","four-toed","deer","moose","elk","horse","cow","cloven","pig","sheep","goat","bison","buffalo","antelope","giraffe","hippopotamus","rhinoceros","tapir","zebra","donkey","mule","pronghorn","gazelle","ibex","chamois","reindeer","caribou","sable","springbok","oryx","kudu","waterbuck","eland","okapi","wildebeest","hartebeest","tahr","argali","urial","mouflon","dik-dik","duiker","gerenuk","impala","roan","sable","topi","gnu","addax","oryx","screw-horned","split-hoofed","solid-hoofed","webbed-hoofed","splayed-hoofed","cleft-hoofed"]),r=(0,i.getRandomElement)(["club","aligned","migrated","negative palmar","laminitic","founder"]);return`This ${e} has ${(0,i.getRandomElement)(["high","low","long toe low heel"])}, ${r} ${a} hooves.`}}(0,r.setClassMapping)("Satyr",s)},3365:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Shifter:()=>i});var r=a(5066),n=a(1324);class i extends n.Name{constructor(e,t,a,r){super(e,t),this.lastname=r.lastname?r.lastname:this._lastname(),this.firstname=r.firstname?r.firstname:this._firstname(t),this.nickname=null,this.description=this._description(e,t)}_lastname(){const e=["Longtooth","Razorclaw"];return e[Math.floor(Math.random()*e.length)]}_firstname(e){let t;if("male"===e.getGender()){const e=["Bramble","Badger","Cobble","Bluff","Vine","Spark","Acor","Astro","Ravine","Pyro","Vermin","Pyre","Torrent","Flint","Scar","Light","Nebula","Coal","Gulch","Crater","Breach","Vermin","Gulch","Bog","Drift","Talon","Pyre","Crag","Grit","Flare","Glare","Silver","Timber","Spark","Flood","Ash","Stone","Fury","Wolf","Stripe"];t=e[Math.floor(Math.random()*e.length)]}if("female"===e.getGender()){const e=["Magenta","Amethyst","Elm","Harley","Karma","Ocean","Bloom","Sage","Thistle","Diamond","Rill","Olive","Elm","Quill","Rose","Sugar","Snowflake","Pyro","Violet","Canyon","Willow","Rosemary","Poison","Olive","Poison","Isle","Spring","Emerald","Stardust","Dewdrop","Rill","Ruby","Whirl","Harley","River","Twilight","Sunrise","Silver","Sapphire"];t=e[Math.floor(Math.random()*e.length)]}return t}_description(e,t){let a,r=this.lastname,n=this.firstname;a="Longtooth"===r?"The Longtooth shifters are more like wolves, they work well in packs, are drawn to hierarchies, and will come to the aid of friends and companions":"Razorclaw shifters are more like tigers, they're independent, they assume their companions are capable and able to take care of themselves just as they can, and they will do their best to carry their own weight";const i=["being born from lycanthropy","mysterious Fey causes","barbarian rituals"],s=i[Math.floor(Math.random()*i.length)],o=["Loreguards","Moonspeakers","Ragewild Shifters"],l=o[Math.floor(Math.random()*o.length)];return`${e.getRace()}s are the weretouched of Eberron, in some ways. As a child, the ${e.getRace()} formed a close bond with the beast within. These totemic forces are explosive forces in ${n}’s personality, and all ${e.getRace()}s have a unique inner beast that guides them in some way. ${n} is a shifter due to ${s}, ${t.getHeShe()} developed as a ${r} Shifter and joined the ${l}. ${a}`}}(0,r.setClassMapping)("Shifter",i)},7063:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Simichybrid:()=>h});var r=a(5066),n=a(1324),i=a(9702),s=a(5192),o=a(1582),l=a(2958);class h extends n.Name{constructor(e,t,a,r){super(e,t),e.setRace("Simic-hybrid"),this._variation(e),this.biography=this._biography(e.getVariant(),e,t),this.lastname=r.lastname?r.lastname:this.biography.getLastname(),this.firstname=r.firstname?r.firstname:this.biography.getFirstname(),this.nickname=r.nickname?r.nickname:this.biography.getNickname(),this.description=this._description(e,t)}_variation(e){e.setVariant((0,i.getRandomElement)(["Human","Elf","Vedalkan"]))}_biography(e,t,a){let r;return"Human"===e&&(r=new s.Human(t,a)),"Elf"===e&&(r=new o.Elf(t,a)),"Vedalkan"===e&&(r=new l.Vedalkan(t,a)),r}_description(e,t){return`As a hyper-develloped ${e.getRace()} ${t.getHeShe()} is designed by the Guardian \n        Project to serve a specific purpose that involves protecting the Simic Combine in some way as a “guardian”`}static ageReplacer(){let e=Math.floor(67*Math.random())+14;return e>30&&(e/=2),e<15&&(e+=3),Math.ceil(e)}}(0,r.setClassMapping)("Simichybrid",h)},2172:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Tabaxi:()=>i});var r=a(5066),n=a(1324);class i extends n.Name{constructor(e,t){super(e,t),this.lastname=this._lastname(),this._firstname(),this.description=this._description(e,t)}_lastname(){const e=["Bright","Distant","Burning","Roaring","Rumbling","Ancient","Proud","Fading","Growing","Angelic","Flickering","Dry","Changing","Fertile","Awoken","Bleak","Dreary","Misty","Chilly","Tumbling","Elder","Cold","Boiling","Dreaded","Ascending","Descending","Tranquil","Radiant","Entangling","Drenching","Parching","Dusty","Threatening","Bellowing","Faraway","Grand","Lurking","Dangerous","Gloomy","Killing","Ugly","Insignificant","Ominous","Grievous","Hazardous","Sandy","Shocking","Primeval","Cremating"],t=["River","Mountains","Cliffs","Rain","Tree","Forests","Torrent","Wilds","Glade","Peak","Grotto","Marsh","Mist","Desert","Catacombs","Fjord","Creeks","Crags","Islands","Swamps","Bluffs","Lake","Isle","Geyser","Woodlands","Coast","Caverns","Thicket","Barrens","Graves","Crypt","Shrine","Mound","Tomb","Sepulcher","Necropolis","Wastes","Hill","Hills","Ridge","Slope","Dune","Summit","Cliff","Highlands","Statue","Jungle","Wasteland","Labyrinth","Chapel","Maze","Crematory","Morgue"];return` of the ${e[Math.floor(Math.random()*e.length)]} ${t[Math.floor(Math.random()*t.length)]} clan`}_firstname(){const e=Math.floor(2*Math.random())+1;if(1===e){const e={Cloud:"Cloud",Jade:"Jade",Smoking:"Smoke",Peak:"Peak",Swift:"Swift",Silent:"Silent",Blazing:"Blaze",Defiant:"Fiant",Poem:"Poe",Leaf:"Leaf",Kite:"Kite",Sky:"Skye",Grand:"Grand","Beauty's":"Beau",Little:"Little",Aurora:"Ror",Single:"Sing",Scratch:"Scratch",Radiant:"Rad",Star:"Star",Nimble:"Nim",Magic:"Mag",Cloaking:"King",Crimson:"Crim",Sardonyx:"Sargon","":""},t=Object.keys(e),a=t[Math.floor(Math.random()*t.length)],r=a;this.nickname=e[a];const n=["after the ","before the ","of a ","of the ","of ","in the ","on the ","","","","",""],i=n[Math.floor(Math.random()*n.length)],s=["Water","Wind","Summer","Winter","Spring","Autumn","Road","Mountains","Mountaintop","Thunder","Sunset","Morning","Evening","Flock","Child","Rain","Thrill","Whish","Shadows","Darkness","Light","Day","River","Shadow","Woods","World","Lightning","Garden","Dagger","Opal","Akkad","Cauldron","Sea","Moon","Sun"],o=s[Math.floor(Math.random()*s.length)];this.firstname=`${r} ${i}${o}`}if(2===e){const e=["Two","Five","Six","Seven","Left-Handed","Hidden","Flickering","Bold","Glow","Bright","Opal","Sound","Lost","Flower","Amusing","Dangling","Dark","Flawless","Call of the","Looping","Icy","Endless","Sapphire","Malachite","Closed","Curious","Mumbling","Emerald","Active"],t=e[Math.floor(Math.random()*e.length)],a={Berry:"Berry",Beast:"Beast",Timber:"Timber",Hummingbird:"Bird",Thundercloud:"Thund",Snakes:"Snake",Riddle:"Riddle",Angel:"Angel",Fire:"Fire",String:"String",Gates:"Gate",Tale:"Tally",Dust:"Dusty",Owl:"Owl",Glove:"Glove",Time:"Time",Lights:"Light",Bootstraps:"Boot",Coil:"Coil",Book:"Book",Shadow:"Shade",Dagger:"Dag",Zircon:"Zirc",Device:"Dev",Passion:"Sion",Fist:"Fist"},r=Object.keys(a),n=r[Math.floor(Math.random()*r.length)],i=n;this.nickname=a[n],this.firstname=`${t} ${i}`}}_description(e,t){return`A ${e.getRace()}'s name is crafted by a clan looking at star signs, prophecies, and anything else. \n        ${this.firstname} ${this.lastname} is shortened to a one-word synopsis: ${this.nickname} it holds the most \n        important aspect of ${this.firstname}'s name. The clan name is based on a simple geographical factor near \n        ${this.nickname}'s clan, multiple clans could be named after the same cliff. \n        ${this.nickname} is the preferred nomenclature everybody uses to address this ${e.getRace()}`}}(0,r.setClassMapping)("Tabaxi",i)},9798:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Tiefling:()=>i});var r=a(5066),n=a(1324);class i extends n.Name{constructor(e,t,a,r){super(e,t),this.lastname=r.lastname?r.lastname:this._lastname(),this.firstname=r.firstname?r.firstname:this._firstname(t),this.nickname=null,this.description=this._description(e.getRace(),t)}_lastname(){const e=["Art","Carrion","Chant","Creed","Despair","Excellence","Fear","Glory","Hope","Ideal","Music","Nowhere","Open","Poetry","Quest","Random","Reverence","Sorrow","Temerity","Torment","Weary"];return e[Math.floor(Math.random()*e.length)]}_firstname(e){let t;if("male"===e.getGender()){const e=["Akmenos","Amnon","Barakas","Damakos","Ekemon","Iados","Kairon","Leucis","Melech","Mordai","Morthos","Pelaios","Skamos","Therai"];t=e[Math.floor(Math.random()*e.length)]}if("female"===e.getGender()){const e=["Akta","Anakis","Bryseis","Criella","Damaia","Ea","Kallista","Lerissa","Makaria","Nemeia","Orianna","Phelaia","Rieta"];t=e[Math.floor(Math.random()*e.length)]}return t}_description(e,t){return`To be greeted with stares and whispers, \n    to suffer violence and insult on the street,\n    to see mistrust and fear in every eye:\n        this is the lot of the ${e}`}}(0,r.setClassMapping)("Tiefling",i)},1575:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Tortle:()=>i});var r=a(5066),n=a(1324);class i extends n.Name{constructor(e,t,a,r){super(e,t),this._lastname(r),this.description=this._description(e,t)}_lastname(e){const t=["Lim","Ini","Gar","Damu","Quott","Xelbuk","Ploqwat","Kinlek","Orly","El","Em","Elad","Irtig","Wolka","Lurtill","Nurtlen","Krin","Natt","Juoror","Artli","Oppog","Plog","Iat","Pluzu","Lorog","Nadyd","Uoppe","Plug","Kuret","Artli","Oppog","Plog","Iat","Pluzu","Lorog","Nadyd","Uoppe","Plug","Kuret","Loper","Uazlul","Xak","Nuall","Dinqom","Alatt","Wenquc","Nonnik","Plurtar","Emod","Lerdla","Xikal","Erot","Wam","Kruk","Qo","Buzeg","Plupen","Kriac","Gunqe","Yizlu","Wug","Pluc","Azloc","Ul","Bur","Jize","Budat","Tueg","Dualkyr","Xirdlyl","Tua","Wig","Gurtoll","Dat","Wuldull","Oza","Wozluc","Nemu","Duzla"];let a=[Math.floor(Math.random()*t.length),Math.floor(Math.random()*t.length)];for(;a[0]===a[1];)a[1]=Math.floor(Math.random()*t.length);this.nickname=e.nickname?e.nickname:t[a[0]],this.lastname=e.lastname?e.lastname:t[a[1]],this.firstname=e.firstname?e.firstname:""}_description(e,t){let a,r=Math.floor(39*Math.random())+12;return a=r<20?Math.floor(5*Math.random())+2:r>30?Math.floor(17*Math.random())+2:Math.floor(4*Math.random())+2,a=r-a,`A bipedal tortoise who ${a} years ago chose the name ${this.nickname}, \n        as ${e.getRace()}'s pick and choose names as they see fit.\n        Tortle names are quite short and simple, but there are exceptions. There is no distinction between male \n        and female names. Tortle names can change a lot throughout their lives. They pick and choose names as they \n        see fit, so encountering a tortle years later can look different and pick a new name`}}(0,r.setClassMapping)("Tortle",i)},8648:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Triton:()=>i});var r=a(5066),n=a(1324);class i extends n.Name{constructor(e,t,a,r){super(e,t),this.lastname=r.lastname?r.lastname:this._lastname(),this.firstname=r.firstname?r.firstname:this._firstname(t),this.nickname=null,this.description=this._description(e,t)}_lastname(){const e=["Dah","Ul","A","Lu","Noh","Muh","Veh","Ju","Dheh","Le","Nu","Ra","Rah","Zu","Bhu","Bha","An","Ra","Sah","Ve","Sa","Gah","Za","Jo","Uh","Ma","Po","Zu","Lo","Ah","Na","Jah","So","Mah","Nah","Sag","Juh","U","Juh","E","Bo","Zeg","Ga","Rag","Gug","Ru","Reg","Dha","Nah","Bu","Guh","Ruh","Gu","Ja","Bu","Ah","Zag","Luh","Bhag","No","Bu","Ho"],t=["ra","ell","lor","mans","loln","lam","rag","nelm","meg","duz","gax","bod","nalv","dalm","bell","vall","nall","gar","ran","nemn","gos","nud","lans","monz","nun","boz","ban","nasn","vars","nur","daln","nux","ron","vux","rad","luz","nam","rez","hal","lor","lolv","nag","maln","rog","goz","ban","manz","rex","holm","nalm","val","hud","hasn","dur","hog","gax","dor","ras","lons","lol","rasn","len","nall","lul","nug","hom","bulm","melm","husn","ronh","ramn","mor","morh"];return e[Math.floor(Math.random()*e.length)]+t[Math.floor(Math.random()*t.length)]+"ath"}_firstname(e){let t;if("male"===e.getGender()){const e=["Vuhnus","Nozos","Dalgas","Danas","Numnus","Khalgas","Dimis","Vamnas","Dhaldas","Dirzis","Vilis","Cenres","Cohlos","Dhorvos","Jurlus","Khaldas","Jhuhlus","Molos","Dholmos","Relges","Jovos","Jhigis","Jhaddas","Khahras","Jomros","Dulgus","Molzos"];t=e[Math.floor(Math.random()*e.length)]}if("female"===e.getGender()){const e=["Vlaltyn","Elryn","Edryn","Mosahyn","Horyn","Lonreren","Uhlen","Nahlyn","Iryn","Itomyn","Neslulyn","Altulyn","Ethlehyn","Wemlyn","Natohen","Anthyn","Hodryn","Flirlyn","Dahnunyn","Wetrahyn","Doglilyn","Urludyn","Omlyn","Whonthyn","Misyn","Yotlyn","Bhadranyn"];t=e[Math.floor(Math.random()*e.length)]}return t}_description(e){const t=["blue","green","orange","yellow","pink","red","violet","turquoise","purple"],a=t[Math.floor(Math.random()*t.length)];return`${e.getRace()} names are melodic, but do have some harsher tones as well. \n        Female names always end in -yn, and male names always end in -s. \n         Their surnames always end in -ath, and tend to be much longer and \n         complex than their personal names. Male names also seem to always be \n         2 syllables long, while female names can be 2 to 3 syllables long.\n        This aquatic humanoid has webbed feet, webbed hands, blue skin and colorful ${a} hair.`}}(0,r.setClassMapping)("Triton",i)},2958:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Vedalkan:()=>i});var r=a(5066),n=a(1324);class i extends n.Name{constructor(e,t,a,r){super(e,t),this.lastname=r.lastname?r.lastname:this._lastname(t),this.firstname=r.firstname?r.firstname:"",this.nickname=null,this.description=this._description(e,t)}_lastname(e){let t,a,r;if("male"===e.getGender()){const e=["Ag","Bel","Dal","Firel","Ka","Kop","Lo","Math","Mo","Ne","Nhil","Ni","Otro","Ov","Pele","Ri","Tri","Ul","Yo","Za"];a=e[Math.floor(Math.random()*e.length)];const t=["lar","lin","lid","lan","vin","lony","mar","van","dar","bun","losh","tt","vac","ner","ll","vaz","din","lov","taz"];r=t[Math.floor(Math.random()*t.length)]}if("female"===e.getGender()){const e=["An","Ca","Co","Euphe","Ji","Ki","La","Li","Mer","Ne","Pae","Por","Sera","Shae","Va","Ver","Re"];a=e[Math.floor(Math.random()*e.length)];const t=["dry","llie","ra","mia","llian","thri","vinia","dda","la","tia","phina","na","ni"];r=t[Math.floor(Math.random()*t.length)]}return t=a+r,t}_description(e,t){return`${e.getRace()}s are largely humanoid, besides ${t.getHisHer()} \n        blue skin the most notable outward feature of ${this.nickname} is ${t.getHisHer()} lack of \n        external ears`}}(0,r.setClassMapping)("Vedalkan",i)},3850:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Verdan:()=>i});var r=a(5066),n=a(1324);class i extends n.Name{constructor(e,t,a,r){super(e,t),this.lastname=r.lastname?r.lastname:this._lastname(),this.firstname=" the traveller ",this.nickname=null,this.description=this._description(e,t)}_lastname(){const e=["A","Illu","Bry","Kor","Zo","Ell","Crea","Drer","O","Ve","Veri","Voi","Yes","N","Toi","Sly","Fae","Demo","Gry","Hu","Stu","Pa","Prae","Mo","To","Kle","Quya","Graer","Stea","Cri","Mer","Yee","Paleac","El","Xwee"],t=["rt","mie","ls","m","v","bert","valm","ke","mi","riga","ga","sat","g","t","ra","ry","nic","rm","lm","ssa","q","sh","lli","xi","bena","rin","ma","ci","vis","lk","then","vlelk","znag","sup"];return e[Math.floor(Math.random()*e.length)]+t[Math.floor(Math.random()*t.length)]}_description(e,t){return`${e.getRace()} are golbinoids with a strangely mutating body`}}(0,r.setClassMapping)("Verdan",i)},5832:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Warforged:()=>d});var r=a(5066),n=a(1324),i=a(8332),s=a(5701),o=a(9702),l=a(6354),h=a(44),c=a(8923);class d extends n.Name{constructor(e,t,a,r){super(e,t),t.setManWoman("automaton"),t.setHeShe("it"),t.setHisHer("it's"),t.setHimHer("it's"),this.lastname=r.lastname?r.lastname:this._lastname(),this.firstname=r.firstname?r.firstname:"Soldier",this.nickname=r.nickname?r.nickname:this._nickname(t);const n=this._description(e,t);this.description=n.description,e.setIntro(n.intro),e.setOutfit(n.outfit)}_lastname(){const e=["A","a","B","b","C","c","D","d","E","e","F","f","G","g","H","h","I","i","J","j","K","k","L","l","M","m","N","n","O","o","P","p","Q","q","R","r","S","s","T","t","U","u","V","v","W","w","X","x","Y","y","Z","z","1","2","3","4","5","6","7","8","9","0"],t=["1","2","3","4","5","6","7","8","9","0"],a=e=>e[Math.floor(Math.random()*e.length)],r=a(e),n=a(e),i=a(t),s=a(t),o=[a(e),a(e)],l=[a(e),a(e)],h=[a(t),a(t)],c=[a(t),a(t)],d=[`${o[0]}${l[0]}-${h[0]}${c[0]}`,`${o[1]}${l[1]}-${h[1]}${c[1]}`];let m;switch(Math.floor(7*Math.random())+1){case 1:m=d[0];break;case 2:m=`${d[0]}/${d[1]}`;break;case 3:m=`${i}${s}${r}${n}`;break;case 4:m=`${o[0]}${l[0]}${o[1]}${c[0]}${c[1]}`;break;case 5:m=`${o[0]}${l[0]}${o[1]}${l[1]}-${h[0]}${c[0]}${h[1]}${c[1]}`;break;case 6:m=`00${h[0]}${h[1]}`;break;case 7:m=`${r}-${n}${i}`;break;default:m="TK-571"}return m}_nickname(e){let t;if("male"===e.getGender()){e.setGender("masculine construct");const a=["Ash","Atlas","Chroma","Excalibur","Frost","Hydroid","Inaros","Limbo","Loki","Nekros","Nezha","Revenant","Sevagoth","Xaku","Oberon","Rhino","Vauban","Volt","Wukong","Nidus","Baruuk","Gauss","Grendel","Harrow","Lavos"];t=a[Math.floor(Math.random()*a.length)]}if("female"===e.getGender()){e.setGender("feminine construct");const a=["Banshee","Ember","Equinox","Ivara","Mag","Mesa","Mirage","Nova","Nyx","Saryn","Trinity","Titania","Wisp","Xaku","Yareli","Protea","Valkyr","Zephyr","Gara","Garuda","Hildryn","Khora","Octavia","Vyommitra"];t=a[Math.floor(Math.random()*a.length)]}return t}_description(e,t){let a=[`the ${e.getHeritage()} creators`,"friends ","neighbours"];a=(0,o.getRandomElement)(a);const r=["decommissioned war machine ","living construct","decommissioned war machine","living construct","sentient automaton","war-born golem","battle-forged entity","mechanical warrior","ancient war sentinel","armored guardian","relic of battle","forged soldier","sentient war relic","awakened machine","biomechanical being","warforged wanderer","living armor","animated armor","self-aware construct","battle-hardened entity","age-old combatant","sentient siege engine"],n={};for(;Object.keys(n).length<5;){n[Object.keys(n).length]=s.Material.connection();for(let e in n)for(let t in n)if(e!==t&&n[e]===n[t]){delete n[t];break}}const m={};for(;Object.keys(m).length<5;){m[Object.keys(m).length]=s.Material.sparepart();for(let e in m)for(let t in m)if(e!==t&&m[e]===m[t]){delete m[t];break}}const u={};for(;Object.keys(u).length<5;){u[Object.keys(u).length]=i.Body.bodypart();for(let e in u)for(let t in u)if(e!==t&&u[e]===u[t]){delete u[t];break}}let g=l.Verbs.maintenance(),f=l.Verbs.maintenance();for(;g===f;)f=l.Verbs.maintenance();let p=(0,o.getRandomElement)(r);this.description=`${a} of ${this.lastname} ${l.Verbs.named()} the ${p} as ${this.nickname}`;const y=(0,h.rand)(1,20);return 1===y&&(this.description=`The ${p} has retained ${t.getHisHer()} original designation ${this.lastname}`,this.nickname=this.lastname),y>=2&&y<=9&&(this.description=`The ${p} has named itself ${this.nickname}`),this.outfit=`The ${t.getManWoman()} has a skeletal frame made of ${s.Material.getWoodType()} wood. \n        It's parts and joints are all connected and held together with \n        ${n[0]} and ${n[1]}. Both ${t.getHisHer()} ${u[0]} and ${u[1]}\n        have visible innards, showing either ${g} or ${f} ${m[0]}, ${m[1]} \n        and ${m[2]}. `,p=(0,o.getRandomElement)(r),this.outfit+=`The ${p} has ${l.Verbs.maintenance()} ${s.Material.getPlateType()} plating on \n        ${t.getHisHer()} ${u[2]} and ${u[3]}, while the armor ${this.nickname}\n        wears on ${t.getHisHer()} ${u[0]} looks pretty ${l.Verbs.maintenance()}.\n        ${this.nickname} even has ${s.Material.getPlateType()} plating on ${t.getHisHer()} ${u[4]}\n        , however that armor plate is enameled with a durable vitreous ${s.Material.getEnamelType()} coating. \n        ${(0,o.ucFirst)(t.getHeShe())} wears a ${c.Belts.belt()}. `,p=(0,o.getRandomElement)(r),this.intro=`There is a ghulra ${d.engrave()} ${this.lastname}'s forehead that\n        ${l.Verbs.getIndicator()} that the ${p} served as a ${d.combatRole()} in the Last War`,{description:this.description,intro:this.intro,outfit:this.outfit}}static engrave(){return(0,o.getRandomElement)(["engraved upon","etched in","adorning","illuminating from","that spruces up","which ornaments","painted on","jazzing up","embedded in","inscribed upon","inscribed on","burned in","chiselled in","lodged in","scratched on","carved out in"])}static combatRole(){return(0,o.getRandomElement)(["Combat Medic","Artillery Loader","Scout","Guard","Militia","Archer","Cataphract","Infantry","heavy lifter","Landsknecht","Musketeer","Longbowman","Lancer","Janissary","Foot Soldier","Dragoon","Constable","Yeoman","Pikeman","Catapult Loader","Ballista Loader","Trebuchet Engineer","Sapper","Spy","Cannonier","Juggernaut","Envoy","Skirmisher","Sentry","Marine","City Watch","Soldier","Investigator","Sailor"])}static eyesReplacer(){let e=["black Onyx","green Emerald","black Sapphire","blue Sapphire","white Diamond","red Ruby","yellow Opal","blue Spinel","green-blue Turqoise","gold Amber","crimson Coral","brass-yellow Pyrite","rose Quartz","blue Quartz","gray-black Hermatite","dark green Malachite","flamed red-black Sardonyx","orange Zircon","speckled red Jasper","purple Amethyst","transparent fiery orange Jacinth"];e=(0,o.getRandomElement)(e);let t=["red","blue","green","white","yellow","purple"];return t=(0,o.getRandomElement)(t),` crystalline ${e} stones instead of eyes, that glow ${t}`}static noseReplacer(){return"no nose"}static mouthReplacer(){const e=[`a hinged ${s.Material.getMetalType()} jaw`,`a motorized ${s.Material.getMetalType()} jaw`,`a ${s.Material.getMetalType()} ventriloquist doll jaw`,`a ${s.Material.getMetalType()} grate`];return(0,o.getRandomElement)(e)}static chinReplacer(){let e=["pointy","round","square"];e=(0,o.getRandomElement)(e);let t=["a rather ","quite the","a very defined","a very protruding","a very small","a bit of a"];return t=(0,o.getRandomElement)(t),`${t} ${e} ${s.Material.getMetalType()} chin`}static teethReplacer(){const e=[`has several ${s.Material.getMetalType()} nails as teeth`,`has small ${s.Material.getMetalType()} plates as teeth`,`has metal drills with a ${s.Material.getMetalType()} coating as teeth`,`has filed, sharp edged ${s.Material.getMetalType()} bolts as teeth`,`has nails as teeth, made of ${l.Verbs.quality()} ${s.Material.getMetalType()}`,"has no teeth","is not designed with teeth","has no teeth at all",`has  ${s.Material.getMetalType()} revolving gears instead of teeth`,`has a ${s.Material.getMetalType()} meatgrinder instead of teeth`];return(0,o.getRandomElement)(e)}static bodySizeReplacer(){return(0,o.getRandomElement)(["sort of typical giant-sized","common giant sized","characteristically large sized","naturally large sized","typical","more or less standard sized","moderately large sized","sizable","large","quite large","very large","really large","slightly larger","reasonably large","immense","enormous","massive","tall","big","hulking","towering","giant"])}static bodyTypeReplacer(){return(0,o.getRandomElement)(["primarily as an Android","primarily as an Automaton","as a Cyborg","primarily as a Humanoid robot","as a Replicant","primarily as a Synthoid","as a Gynoid","primarily as an interpersonal communications model","primarily as a Mechanoid","primarily as a Maschinenmensch"])}static bodyShapeReplacer(){const e={};for(;Object.keys(e).length<5;){e[Object.keys(e).length]=s.Material.connection();for(let t in e)for(let a in e)if(t!==a&&e[t]===e[a]){delete e[a];break}}let t=i.Body.bodypart(),a=i.Body.bodypart();for(;t===a;)a=i.Body.bodypart();return`${e[0]} together with ${e[1]} in it's ${t} while his \n        ${a} has ${e[2]} along with ${e[3]}`}}(0,r.setClassMapping)("Warforged",d)},2371:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Yuantipureblood:()=>i});var r=a(5066),n=a(1324);class i extends n.Name{constructor(e,t,a,r){super(e,t),this.lastname=r.lastname?r.lastname:this._lastname(),this.firstname=` a very serpent looking ${e.getHeritage()} named `,this.nickname=null,e.setRace("Yuan-ti Pureblood"),this.description=this._description(e,t)}_lastname(){const e=["Ih","Szeh","As","Sziz","Izt","Ma","Nezhas","Ezti","Zsez","Thito","Yu","Oak","Shih","Aht","Sshuh","Thelt","Hu","Tuhe","Ina","Us","Melt","Sshe","Ssho","So","Uh","Sset","Estle","Sshih","Iske","Zha","Thi","Yoz","Zal","O","Zhoal","Zset","Estih","Eztlu","Suztol","Thoksoa"],t=["shu","lah","kiss","tiu","liu","kuss","siesh","thi","sheshluh","shlu","lui","la","Shih","luh","tla","siall","tola","til","tu","ziti","suh","shul","ma","kall","sieh","stlil","zhal","sehiul","liess","hisu","skul","tlu","sheel","su","kiull","zei","sih","shas","lie","theeh","sei","shos","zhash","liesh","sheesh","koss","kass","kess","shes","zhosh","shi","sho","sohiul"];return e[Math.floor(Math.random()*e.length)]+t[Math.floor(Math.random()*t.length)]}_firstname(e){let t;if("male"===e.getGender()){const e=["Array"];t=e[Math.floor(Math.random()*e.length)]}if("female"===e.getGender()){const e=["Array"];t=e[Math.floor(Math.random()*e.length)]}return t}_description(e,t){return`Blessed with the resistance to magical and poisonous effects by the rituals that created them, \n        each ${e.getRace()} manifests their serpentine heritage in a variety of ways. \n        The serpentine ${e.getHeritage()} ${e.getRace()} talks with many hissing sounds`}}(0,r.setClassMapping)("Yuantipureblood",i)},9758:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Beggar:()=>l});var r=a(8923),n=a(9044),i=a(9147),s=a(6354),o=a(2578);class l{constructor(e,t,a){this.outfit=this.clothes(e,t,a),this.intro=l.intro()}static textiles(){const e=["hemp","coarse wool"];return e[Math.floor(Math.random()*e.length)]}static outfits(){const e=["short skirted tunic","robe","garment","cotton bag","rags","hooded cloak"];return e[Math.floor(Math.random()*e.length)]}static outfitDetails(){const e=["hanging loose and undefined,","torn on the edges,","full of holes and cuts,"];return e[Math.floor(Math.random()*e.length)]}static weathered(){const e=["partially torn","damaged and dirty","stained","functional",""];return e[Math.floor(Math.random()*e.length)]}clothes(e,t,a){const l=(new r.Belts).getBelt(),h=new n.Shoes(a).getShoes(),c=(new o.Rings).getRing(),d=e.getHeShe();return`${d.charAt(0).toUpperCase()+d.slice(1)} wears a ${this.constructor.weathered()} ${this.constructor.outfits()} made of ${this.constructor.textiles()}, ${this.constructor.outfitDetails()} and a ${this.constructor.weathered()} ${l}. ${i.Sentence.observing()} ${t} ${s.Verbs.holding()} ${c}. ${h}`}static intro(){const e=["who seems to be homeless","that looks like a beggar","who looks wretched","that looks really squalid","a genuine panhandler","a scrounger at best","who is regarded as a deadbeat","who looks like a real hobo"];return e[Math.floor(Math.random()*e.length)]}getOutfit(){return this.outfit}getIntro(){return this.intro}}},2208:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Bourgeoisie:()=>c});var r=a(8923),n=a(9044),i=a(9147),s=a(6354),o=a(721),l=a(7567),h=a(2750);class c{constructor(e,t,a){this.outfit=this.clothes(e,t,a),this.intro=this.intros()}static textiles(){const e=["silk","velvet","cotton","linen"];return e[Math.floor(Math.random()*e.length)]}static outfits(){const e=["tunic","robe","costume","gown","doublet","cote hardie"];return e[Math.floor(Math.random()*e.length)]}static clothing(){const e=[`${s.Verbs.getComplexity()} hooded ${this.textiles()} cloak with ${o.Details.outfitDetails()} and it has ${o.Details.richDetails()}`,`${s.Verbs.getComplexity()} ${this.textiles()} houppelande, a full length robe like garment with ${o.Details.outfitDetails()} and it has ${o.Details.richDetails()}`,`${this.outfits()}, that buttons in the front to a low waist, and is fitted to a ${s.Verbs.getComplexity()} bodice,`,`${this.outfits()}, fit closely to the body with ${o.Details.outfitDetails()} and it has ${o.Details.richDetails()}`,`Burgundian style ${this.outfits()} with ${o.Details.outfitDetails()} and it has ${o.Details.richDetails()}`,`${s.Verbs.getComplexity()} ${this.textiles()} ${this.outfits()}`,`${this.outfits()} of ${s.Verbs.getComplexity()} ${this.textiles()}`,`${this.textiles()} ${this.outfits()} similar to the clothing of the elite but made of cheaper materials with less dye and ornamentation`];return e[Math.floor(Math.random()*e.length)]}intros(){const e=["who looks quite wealthy","who looks very comfortable","who seems to be blooming",'that looks "in the money"',"who recently became flourishing","looking halcyon at best","who looks well-off","who seems to be on top of the heap"];return e[Math.floor(Math.random()*e.length)]}clothes(e,t,a){const s=e.getHeShe(),o=(new r.Belts).getBelt(),c=new l.Hats(s).getHat(),d=new n.Shoes(a).getShoes(),m=(new h.Jewelry).getJewel();return`${s.charAt(0).toUpperCase()+s.slice(1)} wears a ${this.constructor.clothing()} and a ${o}. \n        ${i.Sentence.observing()} ${t} wears ${m}. ${c} ${d}`}getOutfit(){return this.outfit}getIntro(){return this.intro}}},3350:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Commoner:()=>c});var r=a(8923),n=a(9044),i=a(9147),s=a(6354),o=a(2578),l=a(2750),h=a(7567);class c{constructor(e,t,a){this.outfit=this.clothes(e,t,a),this.intro=this.intros()}static textiles(){const e=["silk","velvet","cotton","linen"];return e[Math.floor(Math.random()*e.length)]}static outfits(){const e=["tunic","robe","gown","doublet","cote hardie"];return e[Math.floor(Math.random()*e.length)]}static clothing(){const e=[`${s.Verbs.getComplexity()} hooded ${this.textiles()} cloak`,`${s.Verbs.getComplexity()} ${this.textiles()} houppelande, a full length robe like garment`,`${this.outfits()}, that buttons in the front to a low waist, and is fitted to a ${s.Verbs.getComplexity()} bodice,`,`${this.outfits()}, fit closely to the body`,`Burgundian style ${this.outfits()}`,`${s.Verbs.getComplexity()} ${this.textiles()} ${this.outfits()}`,`${this.outfits()} of ${s.Verbs.getComplexity()} ${this.textiles()}`,`${this.textiles()} ${this.outfits()} similar to the clothing of the elite but made of cheaper materials with less dye and ornamentation`];return e[Math.floor(Math.random()*e.length)]}clothes(e,t,a){const s=e.getHeShe(),c=(new r.Belts).getBelt(),d=new h.Hats(s).getHat(),m=new n.Shoes(a).getShoes(),u=[o.Rings.craftRing(),l.Jewelry.craftJewel()],g=u[Math.floor(Math.random()*u.length)];return`${s.charAt(0).toUpperCase()+s.slice(1)} wears a ${this.constructor.clothing()} and a ${c}. ${i.Sentence.observing()} ${t} wears ${g}. ${m} ${d}`}intros(){const e=["who seems to have some coin","who looks rather comfortable","who seems to be fortunate","that looks a bit prospering","who recently became upper-class","looking affluent at best","who looks privileged","who seems to be doing well"];return e[Math.floor(Math.random()*e.length)]}getOutfit(){return this.outfit}getIntro(){return this.intro}}},9953:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Poor:()=>s});var r=a(8923),n=a(9044),i=a(7567);class s{constructor(e,t,a){this.outfit=this.clothes(e,t,a),this.intro=this.intros()}static textiles(){const e=["leather","linen","cotton"];return e[Math.floor(Math.random()*e.length)]}static outfits(){const e=["tunic","robe","garment","doublet"];return e[Math.floor(Math.random()*e.length)]}static clothing(){const e=[`${this.outfits()} made of ${this.textiles()}, hanging a bit loose,`,`hooded ${this.textiles()} cloak`,`functional ${this.textiles()} ${this.outfits()}`,`short skirted ${this.textiles()} tunic`,`set of simple ${this.textiles()} clothes`,`${this.textiles()} cote hardie, that buttons in the front to a low waist and is fitted to a ${this.textiles()} bodice,`,`${this.textiles()} ${this.outfits()} similar to the clothing of commoners but made of cheap materials with less dye,`,`${this.textiles()} apron`];return e[Math.floor(Math.random()*e.length)]}clothes(e,t,a){const s=e.getHeShe(),o=(new r.Belts).getBelt(),l=new i.Hats(s).getHat(),h=new n.Shoes(a).getShoes();return`${s.charAt(0).toUpperCase()+s.slice(1)} wears a ${this.constructor.clothing()} and a ${o}. ${h} ${l}`}intros(){const e=["who looks rather poor","who seems to be penniless","that looks quite impoverished","who recently became bankrupt"," looking poverty-stricken at best","who looks underprivileged","who makes a down-and-out impression"];return e[Math.floor(Math.random()*e.length)]}getOutfit(){return this.outfit}getIntro(){return this.intro}}},3431:(e,t,a)=>{"use strict";a.r(t),a.d(t,{Rich:()=>d});var r=a(8923),n=a(9044),i=a(9147),s=a(6354),o=a(2578),l=a(721),h=a(7567),c=a(2750);class d{constructor(e,t,a){this.outfit=this.clothes(e,t,a),this.intro=this.intros()}static textiles(){const e=["silk","velvet","brocade silk","damask silk","brocade velvet","damask velvet"];return e[Math.floor(Math.random()*e.length)]}static outfits(){const e=["costume","gown","doublet","cote hardie","houppelande, a beautiful full length robe like garment"];return e[Math.floor(Math.random()*e.length)]}static clothing(){const e=[`${s.Verbs.getComplexity()} ${this.textiles()} ${this.outfits()}, fit closely to the body, with ${l.Details.outfitDetails()}. It has ${l.Details.richDetails()}. The outfit has ${l.Details.sleeves()}`,`${s.Verbs.getComplexity()} ${this.textiles()} hooded cloak, with ${l.Details.outfitDetails()}. It has ${l.Details.richDetails()}.`,`Burgundian style ${s.Verbs.getComplexity()} ${this.textiles()} ${this.outfits()}, with ${l.Details.outfitDetails()}. It has ${l.Details.richDetails()}.`,`clerical ${s.Verbs.getComplexity()} ${this.textiles()} robes, with ${l.Details.outfitDetails()}. It has ${l.Details.richDetails()}.`,`elaborately printed ${this.outfits()} in ${s.Verbs.getComplexity()} ${this.textiles()}, with ${l.Details.outfitDetails()}. It has ${l.Details.richDetails()}.`,`${s.Verbs.getComplexity()} ${this.textiles()} ${this.outfits()}, closely following the lines of the body from the shoulder to below the waist with ${l.Details.outfitDetails()}. It has ${l.Details.richDetails()}.`];return e[Math.floor(Math.random()*e.length)]}intros(){const e=["who is unmistakenly of noble heritage","who looks extremely wealthy","who looks to have money to burn","who seems to be lousy with wealth","that looks opulent and roaring","who is wealthy and flourishing","looking truly halcyon and lucky","who looks positively thriving","looking aristocratic and dignified","who seems to be a member of a noble family","who makes a real aristocratic impression"];return e[Math.floor(Math.random()*e.length)]}clothes(e,t,a){const s=e.getHeShe(),l=(new r.Belts).getBelt(),d=new h.Hats(s).getHat(),m=new n.Shoes(a).getShoes(),u=(new c.Jewelry).getJewel(),g=(new o.Rings).getRing();return`${s.charAt(0).toUpperCase()+s.slice(1)} wears a ${this.constructor.clothing()} and a pristine ${l}. ${i.Sentence.observing()} ${t} wears ${u} and a matching ${g}. ${d} ${m}`}getOutfit(){return this.outfit}getIntro(){return this.intro}}},77:(e,t,a)=>{var r={"./clothing/accessoiries/belts.js":8923,"./clothing/accessoiries/details.js":721,"./clothing/accessoiries/hats.js":7567,"./clothing/accessoiries/jewelry.js":2750,"./clothing/accessoiries/rings.js":2578,"./clothing/accessoiries/shoes.js":9044,"./clothing/accessoiries/weapons.js":2,"./generators/body.js":8332,"./generators/character.js":2102,"./generators/materials.js":5701,"./generators/mood.js":4225,"./generators/profile.js":7235,"./generators/scars.js":2394,"./generators/sentence.js":9147,"./generators/status.js":2892,"./generators/verbs.js":6354,"./profile/chin.js":2673,"./profile/eyes.js":211,"./profile/mouth.js":1908,"./profile/nose.js":9167,"./profile/teeth.js":859,"./properties/age.js":44,"./properties/class.js":2934,"./properties/gender.js":417,"./properties/name.js":1324,"./properties/race.js":3028,"./races/aarakocra.js":428,"./races/aasimar.js":348,"./races/bugbear.js":9446,"./races/centaur.js":9326,"./races/changeling.js":5119,"./races/dragonborn.js":7175,"./races/drow.js":8826,"./races/dwarf.js":9858,"./races/elf.js":1582,"./races/factory/classMapping.js":5066,"./races/factory/racefactory.js":9977,"./races/factory/utility.js":9702,"./races/feraltiefling.js":3631,"./races/firbolg.js":7164,"./races/genasi.js":9389,"./races/gith.js":4727,"./races/gnome.js":3010,"./races/goblin.js":1026,"./races/goliath.js":1680,"./races/halfelf.js":1498,"./races/halfling.js":3468,"./races/halforc.js":5866,"./races/hobgoblin.js":6811,"./races/human/calishite.js":2647,"./races/human/chondathan.js":1041,"./races/human/damaran.js":7185,"./races/human/human.js":5192,"./races/human/illuskan.js":5750,"./races/human/mulan.js":1136,"./races/human/rashemi.js":48,"./races/human/shou.js":2884,"./races/human/tethyrian.js":3156,"./races/human/turami.js":6474,"./races/index.js":244,"./races/kenku.js":462,"./races/khalastar.js":4639,"./races/kobold.js":9160,"./races/leonin.js":2742,"./races/lizardfolk.js":9055,"./races/locathah.js":4677,"./races/loxodon.js":6803,"./races/minotaur.js":9515,"./races/orc.js":8004,"./races/owlfolk.js":8325,"./races/rabbitfolk.js":4325,"./races/satyr.js":4526,"./races/shifter.js":3365,"./races/simichybrid.js":7063,"./races/tabaxi.js":2172,"./races/tiefling.js":9798,"./races/tortle.js":1575,"./races/triton.js":8648,"./races/vedalkan.js":2958,"./races/verdan.js":3850,"./races/warforged.js":5832,"./races/yuantipureblood.js":2371,"./wealth/beggar.js":9758,"./wealth/bourgoisie.js":2208,"./wealth/common.js":3350,"./wealth/poor.js":9953,"./wealth/rich.js":3431};function n(e){var t=i(e);return a(t)}function i(e){if(!a.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}n.keys=function(){return Object.keys(r)},n.resolve=i,e.exports=n,n.id=77}},t={};function a(r){var n=t[r];if(void 0!==n)return n.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,a),i.exports}a.d=(e,t)=>{for(var r in t)a.o(t,r)&&!a.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{"use strict";var e=a(2102),t=a(9977),r=a(3028);let n=window;n={dndRngNpc:{},generator:{}},n.dndRngNpc.memory=[],n.parameters={},n.regex=/^[a-zA-Z0-9]+$/;const i=a(77);i.keys().forEach((e=>{e.replace("./",""),i(e)})),n.dndRngNpc.stickyButton=function(){const e=document.getElementById("generateNpc"),t=e.getBoundingClientRect().top+window.scrollY;window.addEventListener("scroll",(function(){window.scrollY>t?e.classList.add("sticky-button"):e.classList.remove("sticky-button")}))},n.dndRngNpc.coreFunctionality=function(){document.getElementById("generateNpc").addEventListener("click",(function(){const t=document.getElementById("character-paragraph-1"),a=document.getElementById("character-paragraph-2"),r=document.getElementById("character-paragraph-3");n.dndRngNpc.collectInput();const i=n.parameters,s=new e.DndNpcRng(i),o=s.getNewNpc(),l=s.getString();n.dndRngNpc.imageOfCharacter(o.dndRace),n.dndRngNpc.commitToMemory(o,l);const h={string1:t.innerHTML,string2:a.innerHTML,string3:r.innerHTML};if(!o)return!1;t.innerHTML=l.string1,a.innerHTML=l.string2,r.innerHTML=l.string3,n.dndRngNpc.previousCharacter(h)}));const t=document.getElementById("copyButton"),a=document.getElementById("copyButton2");n.dndRngNpc.copyButton(t),n.dndRngNpc.copyButton(a)},n.dndRngNpc.copyButton=function(e){e.addEventListener("click",(function(){n.dndRngNpc.copyToClipboard()}))},n.dndRngNpc.copyToClipboard=function(){const e=document.querySelector("blockquote");if(!e)return;const t=e.querySelectorAll("p");let a="";t.forEach((e=>{a+=e.textContent+"\n"})),navigator.clipboard.writeText(a).then((function(){console.log("copied to clipboard!")})).catch((function(e){console.error("Unable to copy text",e)}))},n.dndRngNpc.previousCharacter=function(e){const t=document.getElementById("previous-character-1"),a=document.getElementById("previous-character-2"),r=document.getElementById("previous-character-3");t.innerHTML=e.string1,a.innerHTML=e.string2,r.innerHTML=e.string3},n.dndRngNpc.imageOfCharacter=function(e){const a=["img/icon_d20_blue.png","img/icon_d20_red.png","img/icon_d20_yellow.png","img/beholder.gif"],r=document.getElementById("dynamicImage");if(!e)return!1;const i=(0,t.convertRaceName)(e);r.src="img/characters/"+i.toLowerCase()+".png",n.dndRngNpc.imageExists(r.src,(function(t){if(document.getElementById("dynamicCaption").textContent="Image of a "+e,!t){console.error("The image is missing, man, probably out bowling with The Dude. Stealth check!"),document.getElementById("dynamicCaption").textContent="It seems the image has stealthily evaded us, perhaps it rolled a natural 20 on its Stealth check!";const e=Math.floor(Math.random()*a.length);document.getElementById("dynamicImage").src=a[e]}})),r.onerror=function(){const e=Math.floor(Math.random()*a.length);r.src=a[e]}},n.dndRngNpc.imageExists=function(e,t){const a=new Image;a.onload=function(){t(!0)},a.onerror=function(){t(!1)},a.src=e},n.dndRngNpc.listOfOptions=function(){const e=r.Race.raceArray(),t=document.getElementById("races");e.forEach((e=>{const a=document.createElement("option");a.value=e,a.textContent=e,t.appendChild(a)}))},n.dndRngNpc.collectInput=function(){n.dndRngNpc.firstname(),n.dndRngNpc.lastname(),n.dndRngNpc.nickname(),n.dndRngNpc.selectedRaces(),n.dndRngNpc.homebrew()},n.dndRngNpc.firstname=function(){const e=document.getElementById("firstname").value.trim();return e?!!n.regex.test(e)&&void(n.parameters.firstname=e):(n.parameters.firstname=null,!1)},n.dndRngNpc.lastname=function(){const e=document.getElementById("lastname").value.trim();return e?!!n.regex.test(e)&&void(n.parameters.lastname=e):(n.parameters.lastname=null,!1)},n.dndRngNpc.nickname=function(){const e=document.getElementById("nickname").value.trim();return e?!!n.regex.test(e)&&void(n.parameters.nickname=e):(n.parameters.nickname=null,!1)},n.dndRngNpc.homebrew=function(){const e=document.getElementById("homebrew-race").value.trim();return e?!!n.regex.test(e)&&void(n.parameters.homebrew=e):(n.parameters.homebrew=null,!1)},n.dndRngNpc.selectedRaces=function(){const e=document.getElementById("races"),t=Array.from(e.selectedOptions).map((e=>e.value));t.length>0&&(n.parameters.races=t)},n.dndRngNpc.commitToMemory=function(e,t){let a=!1;for(let r=0;r<10;r++)if(!n.dndRngNpc.memory[r]){n.dndRngNpc.memory[r]={character:e,biography:t},a=!0;break}a||(n.dndRngNpc.memory.shift(),n.dndRngNpc.memory[9]={character:e,biography:t}),n.dndRngNpc.memory?n.dndRngNpc.readMemoryToTable():(console.log("No data at index 0"),console.warn(n.dndRngNpc.memory))},n.dndRngNpc.readMemoryToTable=function(){const e=document.getElementById("tableBody");n.dndRngNpc.memory.forEach(((t,a)=>{if(t.printed)return;const r=document.createElement("tr");r.className="border-b-2 dark:border-cyan-500 border-cyan-500",["dndRace","class","firstname","lastname","nickname","age","gender"].forEach((e=>{const a=document.createElement("td");a.className="px-4 py-2",a.id=`${e}-value-${t.character.id}`,a.textContent=t.character[e]||"N/A",r.appendChild(a)}));const n=document.createElement("td");n.className="px-4 py-2",n.id=`table-copy-button-${t.character.id}`,n.innerHTML='<button class="bg-cyan-700 dark:bg-cyan-700 text-amber-500 px-2 py-1 rounded hover:bg-cyan-500 hover:text-white active:bg-amber-500 active:text-cyan-500">Copy</button>',n.addEventListener("click",(()=>{const e=t.biography,a=`${e.string1.trim()} ${e.string2.trim()} ${e.string3.trim()}`;navigator.clipboard.writeText(a).then((()=>{console.log("Biography copied to clipboard")})).catch((e=>{console.error("Could not copy text: ",e)}))})),r.appendChild(n),e.appendChild(r),t.printed=!0}))},document.addEventListener("DOMContentLoaded",(function(){n.dndRngNpc.listOfOptions(),n.dndRngNpc.stickyButton(),n.dndRngNpc.coreFunctionality()}))})()})();